#!/usr/bin/env python
__copyright__ = '2008, Kovid Goyal <kovid at kovidgoyal.net>'

__license__ = 'GPL v3'

'''
calibre recipe for slate.com
'''

from calibre.web.feeds.recipes import BasicNewsRecipe


def classes(classes):
    q = frozenset(classes.split(' '))
    return dict(attrs={
        'class': lambda x: x and frozenset(x.split()).intersection(q)})


class Slate(BasicNewsRecipe):
    title = 'Slate'
    description = 'A general-interest publication offering analysis and commentary about politics, news and culture.'
    __author__ = 'Kovid Goyal'
    no_stylesheets = True
    language = 'en'
    encoding = 'utf-8'
    remove_attributes = ['style', 'height', 'width']
    oldest_article = 2  # days
    INDEX = 'https://slate.com'
    resolve_internal_links = True
    remove_empty_feeds = True
    ignore_duplicate_articles = {'url'}

    extra_css = '''
        .article__rubric { font-size:small; color:#404040; }
        .article__byline, time { font-size:small; }
        .article__top-image, .image__credit, .image__meta { font-size:small; text-align:center; }
        em, blockquote, .alternativeHeadline { color:#202020; }
    '''

    keep_only_tags = [
        classes('article__header article__top-image article__content article-hotseats__body'),
    ]
    remove_tags = [
        dict(name=['aside', 'svg', 'iframe']),
        classes('social-share slate-ad newsletter-signup in-article-recirc'),
    ]

    def preprocess_html(self, soup):
        for h2 in soup.findAll('h2'):
            h2.name = 'h4'
        for img in soup.findAll('img', attrs={'data-srcset': True}):
            img['src'] = img['data-src'] + '&width=600'
        return soup

    feeds = [
        ('News & Politics', 'https://slate.com/feeds/news-and-politics.rss'),
        ('Culture', 'https://slate.com/feeds/culture.rss'),
        ('Technology', 'https://slate.com/feeds/technology.rss'),
        ('Business', 'https://slate.com/feeds/business.rss'),
        ('Human Interest', 'https://slate.com/feeds/human-interest.rss'),
        ('Others', 'https://slate.com/feeds/all.rss')
    ]

    def get_article_url(self, article):
        url = BasicNewsRecipe.get_article_url(self, article)
        if '/podcasts/' not in url:
            return url.split('?')[0]
