From 02ff814f0b48e718d0ed708944d7e0fce5ffa853 Mon Sep 17 00:00:00 2001
From: Kovid Goyal <kovid@kovidgoyal.net>
Date: Mon, 10 Aug 2020 09:45:56 +0530
Subject: [PATCH 361/408] Use caret position from point rahter than range from
 point as the former is standards compliant

---
 src/pyj/select.pyj | 35 ++++++++++++++++-------------------
 1 file changed, 16 insertions(+), 19 deletions(-)

diff --git a/src/pyj/select.pyj b/src/pyj/select.pyj
index 503eb57b78..5795918e0c 100644
--- a/src/pyj/select.pyj
+++ b/src/pyj/select.pyj
@@ -3,17 +3,13 @@
 from __python__ import bound_methods, hash_literals
 
 
-def range_from_point(x, y):
-    r = None
+def caret_position_from_point(x, y):
     if document.caretPositionFromPoint:
-        p = document.caretPositionFromPoint(x, y)
-        if p:
-            r = document.createRange()
-            r.setStart(p.offsetNode, p.offset)
-            r.collapse(True)
-    elif document.caretRangeFromPoint:
-        r = document.caretRangeFromPoint(x, y)
-    return r
+        return document.caretPositionFromPoint(x, y)
+    r = document.caretRangeFromPoint(x, y)
+    if r:
+        return {'offsetNode': r.startContainer, 'offset': r.startOffset}
+    return None
 
 
 def word_boundary_regex():
@@ -35,12 +31,13 @@ def expand_offset_to_word(string, offset):
 
 
 def word_at_point(x, y):
-    r = range_from_point(x, y)
-    if r and r.startContainer.nodeType is 3:
-        word_info = expand_offset_to_word(r.startContainer.data, r.startOffset)
+    p = caret_position_from_point(x, y)
+    if p and p.offsetNode?.nodeType is Node.TEXT_NODE:
+        word_info = expand_offset_to_word(p.offsetNode.data, p.offset)
         if word_info.word:
-            r.setStart(r.startContainer, word_info.start)
-            r.setEnd(r.startContainer, word_info.end)
+            r = document.createRange()
+            r.setStart(p.offsetNode, word_info.start)
+            r.setEnd(p.offsetNode, word_info.end)
             return r
 
 
@@ -105,10 +102,10 @@ def move_end_of_selection(pos, start):
     sel = window.getSelection()
     if not sel.rangeCount:
         return
-    newr = range_from_point(pos.x, pos.y)
-    if newr:
+    p = caret_position_from_point(pos.x, pos.y)
+    if p:
         r = sel.getRangeAt(0)
         if start:
-            r.setStart(newr.startContainer, newr.startOffset)
+            r.setStart(p.offsetNode, p.offset)
         else:
-            r.setEnd(newr.endContainer, newr.endOffset)
+            r.setEnd(p.offsetNode, p.offset)
-- 
2.28.0

