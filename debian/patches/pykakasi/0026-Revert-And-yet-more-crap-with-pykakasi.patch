From: YOKOTA Hiroshi <yokota.hgml@gmail.com>
Date: Sat, 30 Nov 2024 01:55:44 +0900
Subject: Revert "And yet more crap with pykakasi"

Forwarded: not-needed

This reverts commit bcfdfc1e1d6c899c1fb45edfba7f528c3ed2bbc6.
---
 src/calibre/ebooks/unihandecode/jadecoder.py | 26 +++++++++-----------------
 1 file changed, 9 insertions(+), 17 deletions(-)

diff --git a/src/calibre/ebooks/unihandecode/jadecoder.py b/src/calibre/ebooks/unihandecode/jadecoder.py
index 26257c0..9148ae8 100644
--- a/src/calibre/ebooks/unihandecode/jadecoder.py
+++ b/src/calibre/ebooks/unihandecode/jadecoder.py
@@ -18,7 +18,6 @@ Copyright (c) 2010 Hiroshi Miura
 
 import pickle
 import re
-import warnings
 from importlib.resources import files
 
 from pykakasi import kakasi
@@ -67,25 +66,18 @@ class Jadecoder(Unidecoder):
     def __init__(self):
         self.codepoints = CODEPOINTS.copy()
         self.codepoints.update(JACODES)
-
-        # We have to use the deprecated API as the new API does not capitalize
-        # words. Sigh.
-        with warnings.catch_warnings():
-            warnings.simplefilter("ignore")
-            self.kakasi = kakasi()
-            self.kakasi.setMode("H","a") # Hiragana to ascii, default: no conversion
-            self.kakasi.setMode("K","a") # Katakana to ascii, default: no conversion
-            self.kakasi.setMode("J","a") # Japanese to ascii, default: no conversion
-            self.kakasi.setMode("r","Hepburn") # default: use Hepburn Roman table
-            self.kakasi.setMode("s", True) # add space, default: no separator
-            self.kakasi.setMode("C", True) # capitalize, default: no capitalize
-            self.conv = self.kakasi.getConverter()
+        self.kakasi = kakasi()
+        self.kakasi.setMode("H","a") # Hiragana to ascii, default: no conversion
+        self.kakasi.setMode("K","a") # Katakana to ascii, default: no conversion
+        self.kakasi.setMode("J","a") # Japanese to ascii, default: no conversion
+        self.kakasi.setMode("r","Hepburn") # default: use Hepburn Roman table
+        self.kakasi.setMode("s", True) # add space, default: no separator
+        self.kakasi.setMode("C", True) # capitalize, default: no capitalize
+        self.conv = self.kakasi.getConverter()
 
     def decode(self, text):
         try:
-            with warnings.catch_warnings():
-                warnings.simplefilter("ignore")
-                text = self.conv.do(text)
+            text = self.conv.do(text)
         except Exception:
             pass
         return re.sub('[^\x00-\x7f]', lambda x: self.replace_point(x.group()), text)
