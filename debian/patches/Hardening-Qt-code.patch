From: YOKOTA Hiroshi <qykth-git@users.noreply.github.com>
Date: Sat, 23 Nov 2019 17:48:46 +0900
Subject: Hardening Qt code

Forwarded: not-needed
---
 setup/build.py | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/setup/build.py b/setup/build.py
index ba818a6..5dee2db 100644
--- a/setup/build.py
+++ b/setup/build.py
@@ -168,6 +168,7 @@ def init_env():
         ldflags = os.environ.get('OVERRIDE_LDFLAGS', '-Wall')
         ldflags = shlex.split(ldflags)
         cflags += shlex.split(os.environ.get('CFLAGS', ''))
+        cflags += shlex.split(os.environ.get('CPPFLAGS', ''))
         ldflags += shlex.split(os.environ.get('LDFLAGS', ''))
         cflags += ['-fvisibility=hidden']
 
@@ -445,9 +446,16 @@ class Build(Command):
             INCLUDEPATH += {freetype}
             DESTDIR = {destdir}
             CONFIG -= create_cmake  # Prevent qmake from generating a cmake build file which it puts in the calibre src directory
+            QMAKE_CFLAGS   += {CFLAGS}   {CPPFLAGS}
+            QMAKE_CXXFLAGS += {CXXFLAGS} {CPPFLAGS}
+            QMAKE_LFLAGS   += {LFLAGS}
             ''').format(
                 headers=' '.join(headers), sources=' '.join(sources), others=' '.join(others), destdir=self.d(
-                    target), freetype=' '.join(ft_inc_dirs))
+                    target), freetype=' '.join(ft_inc_dirs),
+                CFLAGS   = os.environ.get('CFLAGS',   ''),
+                CXXFLAGS = os.environ.get('CXXFLAGS', ''),
+                CPPFLAGS = os.environ.get('CPPFLAGS', ''),
+                LFLAGS   = os.environ.get('LDFLAGS',  ''))
         bdir = self.j(self.build_dir, 'headless')
         if not os.path.exists(bdir):
             os.makedirs(bdir)
@@ -526,10 +534,17 @@ class Build(Command):
         macx {{
             QMAKE_LFLAGS += "-undefined dynamic_lookup"
         }}
+        QMAKE_CFLAGS   += {CFLAGS}   {CPPFLAGS}
+        QMAKE_CXXFLAGS += {CXXFLAGS} {CPPFLAGS}
+        QMAKE_LFLAGS   += {LFLAGS}
         ''').format(
             target=sip['target'], headers=' '.join(sip['headers'] + ext.headers), sources=' '.join(ext.sources + sip['sources']),
             sipinc=pyqt['sip_inc_dir'], pyinc=sysconfig.get_python_inc(), py_lib=py_lib,
-            ver=__version__
+            ver=__version__,
+            CFLAGS   = os.environ.get('CFLAGS',   ''),
+            CXXFLAGS = os.environ.get('CXXFLAGS', ''),
+            CPPFLAGS = os.environ.get('CPPFLAGS', ''),
+            LFLAGS   = os.environ.get('LDFLAGS',  '')
         )
         for incdir in ext.inc_dirs:
             pro += '\nINCLUDEPATH += ' + incdir
