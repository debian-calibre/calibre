.\" Man page generated from reStructuredText.
.
.TH "CALIBRE-DEBUG" "1" "十月 18, 2019" "4.2.0" "calibre"
.SH NAME
calibre-debug \- calibre-debug
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
calibre\-debug [选项]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
多种命令行界面在排除 calibre 的故障时很有用。这个命令将无条
件地开启内置的 python 编译器。你也可以在 debug 模式下运行主
要的 cailbre GUI，calibre 阅读器和 calibre 编辑器。
.sp
它同时也包含了部分没有命令行工具的
calibre 界面，比如字体子集，电子书区分
工具等等。
.sp
你也能用 \fBcalibre\-debug\fP 来运行独立的脚本。像这样来操作：
.INDENT 0.0
.INDENT 3.5
\fBcalibre\-debug\fP myscript.py \fB\-\-\fP \fB\-\-option1\fP \fB\-\-option2\fP file1 file2 ...
.UNINDENT
.UNINDENT
.sp
在 \fB\-\-\fP 后的的所有东西都被传输到了脚本里。
.sp
每当向具有它们自己空间的:command:
.nf
\(ga
.fi
calibre\-debug\(ga传递参数时，用引号括起这些参数。例如: "/some path/with spaces"
.SH [选项]
.INDENT 0.0
.TP
.B \-\-add\-simple\-plugin
通过指定包含插件代码的文件来添加简单插件(例如，一个python脚本)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-command, \-c
运行 Python 代码。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-debug\-device\-driver, \-d
设备检测调试
.UNINDENT
.INDENT 0.0
.TP
.B \-\-default\-programs
从 Windows 默认程序注册 / 取消注册 calibre。 \fI\%\-\-default\-programs\fP = \fB(register|unregister)\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-diff
启动 calibre diff工具。例如： calibre\-debug \fI\%\-\-diff\fP file1 file2
.UNINDENT
.INDENT 0.0
.TP
.B \-\-edit\-book, \-t
用调试模式启动 calibre \fB"\fP编辑书籍\fB"\fP工具。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-exec\-file, \-e
运行文件中的 Python 代码。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-explode\-book, \-x
将书炸开到指定目录中。 用法：\-x file.epub output_dir 将该书作为HTML文件和元数据的集合导出，您可以使用标准的HTML编辑工具进行编辑。可与EPUB、AZW3、HTMLZ和DOX文件一起工作。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-export\-all\-calibre\-data
导出所有 calibre 数据（书籍/设置/插件）。通常，您将被询问导出到目录和导出到库。你还可以将它们指定为命令行参数以跳过这些问题。对导出目录和库使用绝对路径。特殊关键字 \fB"\fPall\fB"\fP 可用于导出所有库。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-gui, \-g
在调试模式下运行用户界面。调试输出信息打印到 stdout 与 stderr 。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-gui\-debug
以调试控制台运行用户界面，日志输出到指定路径。仅适用于内部使用，用 \-g 参数运行用户界面于调试模式。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-help, \-h
显示此帮助信息并退出
.UNINDENT
.INDENT 0.0
.TP
.B \-\-implode\-book, \-i
聚合以前炸开过的书籍。 用法：\-i output_dir file.epub 从output_dir的文件中导入该图书，该文件必须是由之前调用:option:
.nf
\(ga
.fi
\-\-explode\-book\(ga创建的。一定要指定与炸开时使用的文件类型相同的文件类型。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-import\-calibre\-data
导入现有 calibre 数据
.UNINDENT
.INDENT 0.0
.TP
.B \-\-inspect\-mobi, \-m
查看指定目录的 MOBI 文件
.UNINDENT
.INDENT 0.0
.TP
.B \-\-paths
设置 calibre 环境时输出路径是必需的
.UNINDENT
.INDENT 0.0
.TP
.B \-\-reinitialize\-db
将 calibre 指定路径的 SQLite 数据库重新初始化，这尝尝对于解决数据库冲突有奇效。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-run\-plugin, \-r
提供了一个命令行界面来运行插件。例如： calibre\-debug \-r \fB"\fPAdd Books\fB"\fP \fB\-\-\fP file1 \fB\-\-option1\fP \fB\-\-\fP 之后的一切将被作为参数传递给该插件。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-shutdown\-running\-calibre, \-s
本操作会导致正在运行的 calibre 关闭。请注意：如果正在执行某些任务，那么这些任务会被强行中断。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-subset\-font, \-f
将指定的字体归为子集。在此选项后使用 \fB\-\-\fP 来传递选项到字体归类程序。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-test\-build
测试构建中的二进制模组
.UNINDENT
.INDENT 0.0
.TP
.B \-\-version
显示程序版本号并退出
.UNINDENT
.INDENT 0.0
.TP
.B \-\-viewer, \-w
用调试模式打开电子书阅读器
.UNINDENT
.SH AUTHOR
Kovid Goyal
.SH COPYRIGHT
Kovid Goyal
.\" Generated by docutils manpage writer.
.
