# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Usama Khalil, 2025
# Usama Khalil, 2025
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-18 13:55+0000\n"
"PO-Revision-Date: 2014-06-17 08:35+0000\n"
"Last-Translator: Usama Khalil, 2025\n"
"Language-Team: Arabic (http://app.transifex.com/calibre/calibre/language/ar/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ar\n"
"Plural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;\n"

#: ../../../__w/calibre/calibre/manual/plugins.rst:4
msgid "API documentation for plugins"
msgstr "توثيق API للإضافات"

#: ../../../__w/calibre/calibre/manual/plugins.rst:9
msgid ""
"Defines various abstract base classes that can be subclassed to create "
"powerful plugins. The useful classes are:"
msgstr "يعرّف فئات أساسية مجردة مختلفة يمكن اشتقاقها لإنشاء إضافات قوية. الفئات المفيدة هي:"

#: ../../../__w/calibre/calibre/manual/plugins.rst:19
msgid "Plugin"
msgstr "إضافة"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:1
msgid "A calibre plugin. Useful members include:"
msgstr "إضافة calibre. تتضمن الأعضاء المفيدة:"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:3
msgid "``self.installation_type``: Stores how the plugin was installed."
msgstr "``self.installation_type``: يخزن كيفية تثبيت الإضافة."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:4
msgid "``self.plugin_path``: Stores path to the ZIP file that contains"
msgstr "``self.plugin_path``: يخزن مسار ملف ZIP الذي يحتوي على"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:5
msgid "this plugin or None if it is a builtin plugin"
msgstr "هذه الإضافة أو لا شيء إذا كانت إضافة مدمجة"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:7
msgid "``self.site_customization``: Stores a customization string entered"
msgstr "``self.site_customization``: يخزن سلسلة تخصيص تم إدخالها"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:8
msgid "by the user."
msgstr "من قبل المستخدم."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:10
msgid "Methods that should be overridden in sub classes:"
msgstr "الأساليب التي يجب تجاوزها في الفئات الفرعية:"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:12
msgid ":meth:`initialize`"
msgstr ":meth:`تهيئة`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:13
msgid ":meth:`customization_help`"
msgstr ":meth:`مساعدة_التخصيص`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:15
msgid "Useful methods:"
msgstr "أساليب مفيدة:"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:17
msgid ":meth:`temporary_file`"
msgstr ":meth:`ملف_مؤقت`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:18
msgid ":meth:`__enter__`"
msgstr ":meth:`__دخول__`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:19
msgid ":meth:`load_resources`"
msgstr ":meth:`تحميل_الموارد`"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS.supported_platforms:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.supported_platforms:1
msgid ""
"List of platforms this plugin works on. For example: ``['windows', 'osx', "
"'linux']``"
msgstr "قائمة بالأنظمة الأساسية التي تعمل عليها هذه الإضافة. على سبيل المثال: ``['windows', 'osx', 'linux']``"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.name:1
msgid ""
"The name of this plugin. You must set it something other than Trivial Plugin"
" for it to work."
msgstr "اسم هذه الإضافة. يجب عليك تعيينه لشيء آخر غير إضافة تافهة لكي يعمل."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin.version:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin.version:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.version:1
msgid "The version of this plugin as a 3-tuple (major, minor, revision)"
msgstr "إصدار هذه الإضافة كـ 3-tuple (رئيسي، فرعي، مراجعة)"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.description:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS.description:1
msgid "A short string describing what this plugin does"
msgstr "سلسلة قصيرة تصف ما تفعله هذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS.author:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.author:1
msgid "The author of this plugin"
msgstr "مؤلف هذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.priority:1
msgid ""
"When more than one plugin exists for a filetype, the plugins are run in "
"order of decreasing priority. Plugins with higher priority will be run "
"first. The highest possible priority is ``sys.maxsize``. Default priority is"
" 1."
msgstr "عند وجود أكثر من إضافة لنوع ملف واحد، يتم تشغيل الإضافات بترتيب الأولوية التنازلية. سيتم تشغيل الإضافات ذات الأولوية الأعلى أولاً. أعلى أولوية ممكنة هي ``sys.maxsize``. الأولوية الافتراضية هي 1."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.minimum_calibre_version:1
msgid "The earliest version of calibre this plugin requires"
msgstr "أقدم إصدار من calibre تتطلبه هذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.installation_type:1
msgid "The way this plugin is installed"
msgstr "طريقة تثبيت هذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase.can_be_disabled:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.can_be_disabled:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.can_be_disabled:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.can_be_disabled:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.can_be_disabled:1
msgid ""
"If False, the user will not be able to disable this plugin. Use with care."
msgstr "إذا كان False، فلن يتمكن المستخدم من تعطيل هذه الإضافة. استخدم بحذر."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.Plugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.type:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.type:1
msgid "The type of this plugin. Used for categorizing plugins in the GUI"
msgstr "نوع هذه الإضافة. تستخدم لتصنيف الإضافات في واجهة المستخدم الرسومية"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:1
msgid ""
"Called once when calibre plugins are initialized.  Plugins are re-"
"initialized every time a new plugin is added. Also note that if the plugin "
"is run in a worker process, such as for adding books, then the plugin will "
"be initialized for every new worker process."
msgstr "يتم استدعاؤها مرة واحدة عند تهيئة إضافات calibre. يتم إعادة تهيئة الإضافات في كل مرة تتم إضافة إضافة جديدة. لاحظ أيضًا أنه إذا تم تشغيل الإضافة في عملية عاملة، مثل إضافة الكتب، فسيتم تهيئة الإضافة لكل عملية عاملة جديدة."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:6
msgid ""
"Perform any plugin specific initialization here, such as extracting "
"resources from the plugin ZIP file. The path to the ZIP file is available as"
" ``self.plugin_path``."
msgstr "قم بإجراء أي تهيئة خاصة بالإضافة هنا، مثل استخراج الموارد من ملف ZIP الخاص بالإضافة. المسار إلى ملف ZIP متاح كـ ``self.plugin_path``."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:10
msgid ""
"Note that ``self.site_customization`` is **not** available at this point."
msgstr "لاحظ أن ``self.site_customization`` **غير** متاح في هذه المرحلة."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:1
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.config_widget:1
msgid ""
"Implement this method and :meth:`save_settings` in your plugin to use a "
"custom configuration dialog, rather then relying on the simple string based "
"default customization."
msgstr "قم بتنفيذ هذا الأسلوب و :meth:`حفظ_الإعدادات` في الإضافة الخاصة بك لاستخدام مربع حوار تكوين مخصص، بدلاً من الاعتماد على التخصيص الافتراضي القائم على السلسلة البسيطة."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:5
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.config_widget:5
msgid ""
"This method, if implemented, must return a QWidget. The widget can have an "
"optional method validate() that takes no arguments and is called immediately"
" after the user clicks OK. Changes are applied if and only if the method "
"returns True."
msgstr "يجب أن تعيد هذه الطريقة، إذا تم تنفيذها، QWidget. يمكن أن تحتوي الأداة على طريقة اختيارية validate() لا تأخذ أي وسيطات ويتم استدعاؤها فورًا بعد أن ينقر المستخدم على موافق. يتم تطبيق التغييرات إذا وفقط إذا أعادت الطريقة True."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:10
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.config_widget:10
msgid ""
"If for some reason you cannot perform the configuration at this time, return"
" a tuple of two strings (message, details), these will be displayed as a "
"warning dialog to the user and the process will be aborted."
msgstr "إذا لم تتمكن لسبب ما من إجراء التكوين في هذا الوقت، أعد زوجًا من سلسلتين (رسالة، تفاصيل)، سيتم عرضهما كـ مربع حوار تحذير للمستخدم وسيتم إحباط العملية."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.save_settings:1
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.save_settings:1
msgid "Save the settings specified by the user with config_widget."
msgstr "احفظ الإعدادات المحددة من قبل المستخدم باستخدام config_widget."

#: ../../../__w/calibre/calibre/manual/plugins.rst:0
msgid "Parameters"
msgstr "المعلمات"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.save_settings:3
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.save_settings:3
msgid "The widget returned by :meth:`config_widget`."
msgstr "الأداة التي أعادها :meth:`config_widget`."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.do_user_config:1
msgid ""
"This method shows a configuration dialog for this plugin. It returns True if"
" the user clicks OK, False otherwise. The changes are automatically applied."
msgstr "يعرض هذا الأسلوب مربع حوار تكوين لهذه الإضافة. يعيد True إذا نقر المستخدم على موافق، False بخلاف ذلك. يتم تطبيق التغييرات تلقائيًا."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:1
msgid ""
"If this plugin comes in a ZIP file (user added plugin), this method will "
"allow you to load resources from the ZIP file."
msgstr "إذا كانت هذه الإضافة تأتي في ملف ZIP (إضافة أضافها المستخدم)، فإن هذا الأسلوب سيسمح لك بتحميل الموارد من ملف ZIP."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:4
#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:4
msgid "For example to load an image::"
msgstr "على سبيل المثال لتحميل صورة::"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:10
#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:10
msgid "List of paths to resources in the ZIP file using / as separator"
msgstr "قائمة مسارات الموارد في ملف ZIP باستخدام / كفاصل"

#: ../../../__w/calibre/calibre/manual/plugins.rst:0
msgid "Returns"
msgstr "يعيد"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:12
msgid ""
"A dictionary of the form ``{name: file_contents}``. Any names that were not "
"found in the ZIP file will not be present in the dictionary."
msgstr "قاموس بالشكل ``{الاسم: محتويات_الملف}``. أي أسماء لم يتم العثور عليها في ملف ZIP لن تكون موجودة في القاموس."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:1
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.customization_help:1
msgid ""
"Return a string giving help on how to customize this plugin. By default "
"raise a :class:`NotImplementedError`, which indicates that the plugin does "
"not require customization."
msgstr "إعادة سلسلة توضح كيفية تخصيص هذه الإضافة. افتراضيًا اطرح :class:`NotImplementedError`، مما يشير إلى أن الإضافة لا تتطلب تخصيصًا."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:5
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.customization_help:5
msgid ""
"If you re-implement this method in your subclass, the user will be asked to "
"enter a string as customization for this plugin. The customization string "
"will be available as ``self.site_customization``."
msgstr "إذا أعدت تنفيذ هذا الأسلوب في فئتك الفرعية، سيُطلب من المستخدم إدخال سلسلة كتخصيص لهذه الإضافة. ستكون سلسلة التخصيص متاحة كـ ``self.site_customization``."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:10
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.customization_help:10
msgid ""
"Site customization could be anything, for example, the path to a needed "
"binary on the user's computer."
msgstr "يمكن أن يكون تخصيص الموقع أي شيء، على سبيل المثال، المسار إلى ثنائي مطلوب على جهاز كمبيوتر المستخدم."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:13
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.customization_help:13
msgid "If True return HTML help, otherwise return plain text help."
msgstr "إذا كان True، أعد مساعدة HTML، وإلا أعد مساعدة نص عادي."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.temporary_file:1
msgid ""
"Return a file-like object that is a temporary file on the file system. This "
"file will remain available even after being closed and will only be removed "
"on interpreter shutdown. Use the ``name`` member of the returned object to "
"access the full path to the created temporary file."
msgstr "إعادة كائن شبيه بالملف وهو ملف مؤقت على نظام الملفات. هذا الملف سيبقى متاحًا حتى بعد إغلاقه ولن يتم إزالته إلا عند إغلاق المفسر. استخدم عضو ``name`` في الكائن المعاد لـ الوصول إلى المسار الكامل للملف المؤقت الذي تم إنشاؤه."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.temporary_file:6
msgid "The suffix that the temporary file will have."
msgstr "اللاحقة التي سيحتوي عليها الملف المؤقت."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.cli_main:1
msgid ""
"This method is the main entry point for your plugins command line interface."
" It is called when the user does: calibre-debug -r \"Plugin Name\". Any "
"arguments passed are present in the args variable."
msgstr "هذا الأسلوب هو نقطة الدخول الرئيسية لواجهة سطر الأوامر لإضافاتك. يتم استدعاؤه عندما يقوم المستخدم بـ: calibre-debug -r \"اسم الإضافة\". أي وسيطات تم تمريرها موجودة في متغير args."

#: ../../../__w/calibre/calibre/manual/plugins.rst:28
msgid "FileTypePlugin"
msgstr "إضافة نوع الملف"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.InterfaceActionBase:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin:1
#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source:1
msgid "Bases: :py:class:`~calibre.customize.Plugin`"
msgstr "الأساس: :py:class:`~calibre.customize.Plugin`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin:1
msgid "A plugin that is associated with a particular set of file types."
msgstr "إضافة مرتبطة بمجموعة معينة من أنواع الملفات."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run. Use '*' for all file "
"types. For example: ``{'lit', 'mobi', 'prc'}``"
msgstr "مجموعة من أنواع الملفات التي يجب تشغيل هذه الإضافة من أجلها. استخدم '*' لجميع أنواع الملفات. على سبيل المثال: ``{'lit', 'mobi', 'prc'}``"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_import:1
msgid "If True, this plugin is run when books are added to the database"
msgstr "إذا كان True، يتم تشغيل هذه الإضافة عند إضافة الكتب إلى قاعدة البيانات"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_postimport:1
msgid ""
"If True, this plugin is run after books are added to the database. In this "
"case the postimport and postadd methods of the plugin are called."
msgstr "إذا كان True، يتم تشغيل هذه الإضافة بعد إضافة الكتب إلى قاعدة البيانات. في هذه الحالة، يتم استدعاء أساليب postimport و postadd الخاصة بالإضافة."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_postconvert:1
msgid ""
"If True, this plugin is run after a book is converted. In this case the "
"postconvert method of the plugin is called."
msgstr "إذا كان True، يتم تشغيل هذه الإضافة بعد تحويل الكتاب. في هذه الحالة، يتم استدعاء أسلوب postconvert الخاص بالإضافة."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_postdelete:1
msgid ""
"If True, this plugin is run after a book file is deleted from the database. "
"In this case the postdelete method of the plugin is called."
msgstr "إذا كان True، يتم تشغيل هذه الإضافة بعد حذف ملف كتاب من قاعدة البيانات. في هذه الحالة، يتم استدعاء أسلوب postdelete الخاص بالإضافة."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_preprocess:1
msgid "If True, this plugin is run just before a conversion"
msgstr "إذا كان True، يتم تشغيل هذه الإضافة قبل التحويل مباشرة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin.on_postprocess:1
msgid ""
"If True, this plugin is run after conversion on the final file produced by "
"the conversion output plugin."
msgstr "إذا كان True، يتم تشغيل هذه الإضافة بعد التحويل على الملف النهائي الذي تنتجه إضافة إخراج التحويل."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:1
msgid ""
"Run the plugin. Must be implemented in subclasses. It should perform "
"whatever modifications are required on the e-book and return the absolute "
"path to the modified e-book. If no modifications are needed, it should "
"return the path to the original e-book. If an error is encountered it should"
" raise an Exception. The default implementation simply return the path to "
"the original e-book. Note that the path to the original file (before any "
"file type plugins are run, is available as self.original_path_to_file)."
msgstr "تشغيل الإضافة. يجب تنفيذها في الفئات الفرعية. يجب أن تقوم بإجراء أي تعديلات مطلوبة على الكتاب الإلكتروني وإعادة المسار المطلق للكتاب الإلكتروني المعدل. إذا لم تكن هناك حاجة لتعديلات، يجب أن تعيد المسار إلى الكتاب الإلكتروني الأصلي. إذا واجهت خطأ، يجب أن تطرح استثناءً. التنفيذ الافتراضي يعيد ببساطة المسار إلى الكتاب الإلكتروني الأصلي. لاحظ أن المسار إلى الملف الأصلي (قبل تشغيل أي إضافات نوع الملف، متاح كـ self.original_path_to_file)."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:11
msgid ""
"The modified e-book file should be created with the :meth:`temporary_file` "
"method."
msgstr "يجب إنشاء ملف الكتاب الإلكتروني المعدل باستخدام الأسلوب :meth:`temporary_file`."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:14
msgid "Absolute path to the e-book."
msgstr "المسار المطلق للكتاب الإلكتروني."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:16
msgid "Absolute path to the modified e-book."
msgstr "المسار المطلق للكتاب الإلكتروني المعدل."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:1
msgid ""
"Called post import, i.e., after the book file has been added to the "
"database. Note that this is different from :meth:`postadd` which is called "
"when the book record is created for the first time. This method is called "
"whenever a new file is added to a book record. It is useful for modifying "
"the book record based on the contents of the newly added file."
msgstr "يتم استدعاؤها بعد الاستيراد، أي بعد إضافة ملف الكتاب إلى قاعدة البيانات. لاحظ أن هذا يختلف عن :meth:`postadd` الذي يتم استدعاؤه عند إنشاء سجل الكتاب لأول مرة. يتم استدعاء هذا الأسلوب كلما تمت إضافة ملف جديد إلى سجل كتاب. وهو مفيد لتعديل سجل الكتاب بناءً على محتويات الملف المضاف حديثًا."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postadd:8
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postconvert:5
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postdelete:6
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:6
msgid "Database id of the added book."
msgstr "معرف قاعدة البيانات للكتاب المضاف."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postconvert:6
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postdelete:7
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:7
msgid "The file type of the book that was added."
msgstr "نوع ملف الكتاب الذي تم إضافته."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postconvert:7
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postdelete:8
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:8
msgid "Library database."
msgstr "قاعدة بيانات المكتبة."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postconvert:1
msgid ""
"Called post conversion, i.e., after the conversion output book file has been"
" added to the database. Note that it is run after a conversion only, not "
"after a book is added. It is useful for modifying the book record based on "
"the contents of the newly added file."
msgstr "يتم استدعاؤها بعد التحويل، أي بعد إضافة ملف الكتاب الناتج عن التحويل إلى قاعدة البيانات. لاحظ أنها تُشغل بعد التحويل فقط، وليس بعد إضافة كتاب. وهي مفيدة لتعديل سجل الكتاب بناءً على محتويات الملف المضاف حديثًا."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postdelete:1
msgid ""
"Called post deletion, i.e., after the book file has been deleted from the "
"database. Note that it is not run when a book record is deleted, only when "
"one or more formats from the book are deleted. It is useful for modifying "
"the book record based on the format of the deleted file."
msgstr "يتم استدعاؤها بعد الحذف، أي بعد حذف ملف الكتاب من قاعدة البيانات. لاحظ أنها لا تُشغل عند حذف سجل كتاب، بل فقط عندما يتم حذف تنسيق واحد أو أكثر من الكتاب. وهي مفيدة لتعديل سجل الكتاب بناءً على تنسيق الملف المحذوف."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postadd:1
msgid ""
"Called post add, i.e. after a book has been added to the db. Note that this "
"is different from :meth:`postimport`, which is called after a single book "
"file has been added to a book. postadd() is called only when an entire book "
"record with possibly more than one book file has been created for the first "
"time. This is useful if you wish to modify the book record in the database "
"when the book is first added to calibre."
msgstr "يتم استدعاؤها بعد الإضافة، أي بعد إضافة كتاب إلى قاعدة البيانات. لاحظ أن هذا يختلف عن :meth:`postimport`، الذي يتم استدعاؤه بعد إضافة ملف كتاب واحد إلى كتاب. يتم استدعاء postadd() فقط عند إنشاء سجل كتاب كامل مع احتمال وجود أكثر من ملف كتاب لأول مرة. هذا مفيد إذا كنت ترغب في تعديل سجل الكتاب في قاعدة البيانات عند إضافة الكتاب لأول مرة إلى calibre."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postadd:9
msgid ""
"Map of file format to path from which the file format was added. Note that "
"this might or might not point to an actual existing file, as sometimes files"
" are added as streams. In which case it might be a dummy value or a non-"
"existent path."
msgstr "خريطة لتنسيق الملف إلى المسار الذي تمت إضافة تنسيق الملف منه. لاحظ أن هذا قد يشير أو لا يشير إلى ملف موجود فعليًا، حيث يتم أحيانًا إضافة الملفات كـ تدفقات. في هذه الحالة قد تكون قيمة وهمية أو مسارًا غير موجود."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postadd:13
msgid "Library database"
msgstr "قاعدة بيانات المكتبة"

#: ../../../__w/calibre/calibre/manual/plugins.rst:39
msgid "Metadata plugins"
msgstr "إضافات البيانات الوصفية"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin:1
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin:1
msgid "A plugin that implements reading metadata from a set of file types."
msgstr "إضافة تقوم بتنفيذ قراءة البيانات الوصفية من مجموعة من أنواع الملفات."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin.file_types:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run. For example: "
"``set(['lit', 'mobi', 'prc'])``"
msgstr "مجموعة من أنواع الملفات التي يجب تشغيل هذه الإضافة من أجلها. على سبيل المثال: ``set(['lit', 'mobi', 'prc'])``"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin.get_metadata:1
msgid ""
"Return metadata for the file represented by stream (a file like object that "
"supports reading). Raise an exception when there is an error with the input "
"data."
msgstr "إرجاع البيانات الوصفية للملف الممثل بواسطة التدفق (كائن شبيه بالملف يدعم القراءة). اطرح استثناءً عند وجود خطأ في بيانات الإدخال."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin.get_metadata:5
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin.set_metadata:5
msgid ""
"The type of file. Guaranteed to be one of the entries in :attr:`file_types`."
msgstr "نوع الملف. مضمون أن يكون أحد الإدخالات في :attr:`file_types`."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin.get_metadata:7
#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin.set_metadata:7
msgid "A :class:`calibre.ebooks.metadata.book.Metadata` object"
msgstr "كائن :class:`calibre.ebooks.metadata.book.Metadata`"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin.set_metadata:1
msgid ""
"Set metadata for the file represented by stream (a file like object that "
"supports reading). Raise an exception when there is an error with the input "
"data."
msgstr "تعيين البيانات الوصفية للملف الممثل بواسطة التدفق (كائن شبيه بالملف يدعم القراءة). اطرح استثناءً عند وجود خطأ في بيانات الإدخال."

#: ../../../__w/calibre/calibre/manual/plugins.rst:54
msgid "Catalog plugins"
msgstr "إضافات الفهرس"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin:1
msgid "A plugin that implements a catalog generator."
msgstr "إضافة تقوم بتنفيذ مولد فهرس."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin.file_types:1
msgid ""
"Output file type for which this plugin should be run. For example: 'epub' or"
" 'xml'"
msgstr "نوع ملف الإخراج الذي يجب تشغيل هذه الإضافة من أجله. على سبيل المثال: 'epub' أو 'xml'"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin.cli_options:1
msgid ""
"CLI parser options specific to this plugin, declared as `namedtuple` "
"`Option`:"
msgstr "خيارات تحليل CLI خاصة بهذه الإضافة، معلنة كـ `namedtuple` `Option`:"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin.cli_options:3
msgid ""
"from collections import namedtuple Option = namedtuple('Option', 'option, "
"default, dest, help') cli_options = [Option('--catalog-title', default = 'My"
" Catalog', dest = 'catalog_title', help = (_('Title of generated catalog. "
"\\nDefault:') + \" '\" + '%default' + \"'\"))] cli_options parsed in "
"calibre.db.cli.cmd_catalog:option_parser()"
msgstr "من collections استورد namedtuple Option = namedtuple('Option', 'option, default, dest, help') cli_options = [Option('--catalog-title', default = 'My Catalog', dest = 'catalog_title', help = (_('عنوان الفهرس الذي تم إنشاؤه. \\nالافتراضي:') + \" '\" + '%default' + \"'\"))] cli_options تم تحليلها في calibre.db.cli.cmd_catalog:option_parser()"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.initialize:1
msgid ""
"If plugin is not a built-in, copy the plugin's .ui and .py files from the "
"ZIP file to $TMPDIR. Tab will be dynamically generated and added to the "
"Catalog Options dialog in calibre.gui2.dialogs.catalog.py:Catalog"
msgstr "إذا لم تكن الإضافة مدمجة، فانسخ ملفات .ui و .py الخاصة بالإضافة من ملف ZIP إلى $TMPDIR. سيتم إنشاء علامة التبويب ديناميكيًا وإضافتها إلى مربع حوار خيارات الفهرس في calibre.gui2.dialogs.catalog.py:Catalog"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:1
msgid ""
"Run the plugin. Must be implemented in subclasses. It should generate the "
"catalog in the format specified in file_types, returning the absolute path "
"to the generated catalog file. If an error is encountered it should raise an"
" Exception."
msgstr "تشغيل الإضافة. يجب تنفيذها في الفئات الفرعية. يجب أن تولد الفهرس بالتنسيق المحدد في file_types، مع إعادة المسار المطلق إلى ملف الفهرس الذي تم إنشاؤه. إذا واجهت خطأ، يجب أن تطرح استثناءً."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:7
msgid ""
"The generated catalog file should be created with the :meth:`temporary_file`"
" method."
msgstr "يجب إنشاء ملف الفهرس الذي تم إنشاؤه باستخدام الأسلوب :meth:`temporary_file`."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:10
msgid "Absolute path to the generated catalog file."
msgstr "المسار المطلق لملف الفهرس الذي تم إنشاؤه."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:11
msgid "A dictionary of keyword arguments"
msgstr "قاموس من الوسائط الكلمة"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:12
msgid "A LibraryDatabase2 object"
msgstr "كائن LibraryDatabase2"

#: ../../../__w/calibre/calibre/manual/plugins.rst:64
msgid "Metadata download plugins"
msgstr "إضافات تنزيل البيانات الوصفية"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.capabilities:1
msgid ""
"Set of capabilities supported by this plugin. Useful capabilities are: "
"'identify', 'cover'"
msgstr "مجموعة من القدرات التي تدعمها هذه الإضافة. القدرات المفيدة هي: 'تحديد الهوية'، 'غلاف'"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.touched_fields:1
msgid ""
"List of metadata fields that can potentially be download by this plugin "
"during the identify phase"
msgstr "قائمة حقول البيانات الوصفية التي يمكن تنزيلها بواسطة هذه الإضافة خلال مرحلة التحديد"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.has_html_comments:1
msgid "Set this to True if your plugin returns HTML formatted comments"
msgstr "عيّن هذا إلى True إذا كانت إضافتك تعيد تعليقات منسقة بـ HTML"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.supports_gzip_transfer_encoding:1
msgid ""
"Setting this to True means that the browser object will indicate that it "
"supports gzip transfer encoding. This can speedup downloads but make sure "
"that the source actually supports gzip transfer encoding correctly first"
msgstr "تعيين هذا إلى True يعني أن كائن المتصفح سيشير إلى أنه يدعم ترميز نقل gzip. يمكن أن يسرع هذا التنزيلات ولكن تأكد من أن المصدر يدعم بالفعل ترميز نقل gzip بشكل صحيح أولاً"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.ignore_ssl_errors:1
msgid ""
"Set this to True to ignore HTTPS certificate errors when connecting to this "
"source."
msgstr "عيّن هذا إلى True لتجاهل أخطاء شهادة HTTPS عند الاتصال بهذا المصدر."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.cached_cover_url_is_reliable:1
msgid ""
"Cached cover URLs can sometimes be unreliable (i.e. the download could fail "
"or the returned image could be bogus). If that is often the case with this "
"source, set to False"
msgstr "قد تكون عناوين URL للأغلفة المخزنة مؤقتًا غير موثوقة أحيانًا (أي قد يفشل التنزيل أو قد تكون الصورة المعادة مزيفة). إذا كان هذا هو الحال غالبًا مع هذا المصدر، فعيّن إلى False"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.options:1
msgid ""
"A list of :class:`Option` objects. They will be used to automatically "
"construct the configuration widget for this plugin"
msgstr "قائمة بكائنات :class:`Option`. سيتم استخدامها لـ إنشاء أداة التكوين لهذه الإضافة تلقائيًا"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.config_help_message:1
msgid ""
"A string that is displayed at the top of the config widget for this plugin"
msgstr "سلسلة يتم عرضها في الجزء العلوي من أداة التكوين لهذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.can_get_multiple_covers:1
msgid "If True this source can return multiple covers for a given query"
msgstr "إذا كان True، يمكن لهذا المصدر إرجاع أغلفة متعددة لاستعلام معين"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.auto_trim_covers:1
msgid ""
"If set to True covers downloaded by this plugin are automatically trimmed."
msgstr "إذا تم تعيينه على True، يتم قص الأغلفة التي تم تنزيلها بواسطة هذه الإضافة تلقائيًا."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source.prefer_results_with_isbn:1
msgid ""
"If set to True, and this source returns multiple results for a query, some "
"of which have ISBNs and some of which do not, the results without ISBNs will"
" be ignored"
msgstr "إذا تم تعيينه على True، وكان هذا المصدر يعيد نتائج متعددة لاستعلام، بعضها يحتوي على أرقام ISBN وبعضها لا يحتوي، فسيتم تجاهل النتائج التي لا تحتوي على أرقام ISBN"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.is_configured:1
msgid ""
"Return False if your plugin needs to be configured before it can be used. "
"For example, it might need a username/password/API key."
msgstr "أعد False إذا كانت إضافتك تحتاج إلى تكوين قبل استخدامها. على سبيل المثال، قد تحتاج إلى اسم مستخدم/كلمة مرور/مفتاح API."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_author_tokens:1
msgid ""
"Take a list of authors and return a list of tokens useful for an AND search "
"query. This function tries to return tokens in first name middle names last "
"name order, by assuming that if a comma is in the author name, the name is "
"in lastname, other names form."
msgstr "خذ قائمة من المؤلفين وأعد قائمة من الرموز مفيدة لاستعلام بحث AND. تحاول هذه الدالة إرجاع الرموز بترتيب الاسم الأول والأسماء الوسطى والاسم الأخير، بافتراض أنه إذا كانت هناك فاصلة في اسم المؤلف، فإن الاسم يكون بتنسيق الاسم الأخير، أسماء أخرى."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_title_tokens:1
msgid ""
"Take a title and return a list of tokens useful for an AND search query. "
"Excludes connectives(optionally) and punctuation."
msgstr "خذ عنوانًا وأعد قائمة من الرموز مفيدة لاستعلام بحث AND. يستثني الروابط (اختياريًا) وعلامات الترقيم."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.split_jobs:1
msgid "Split a list of jobs into at most num groups, as evenly as possible"
msgstr "قسّم قائمة المهام إلى num مجموعات كحد أقصى، بأكبر قدر ممكن من التساوي"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.test_fields:1
msgid ""
"Return the first field from self.touched_fields that is null on the mi "
"object"
msgstr "أعد الحقل الأول من self.touched_fields الذي يكون فارغًا في الكائن mi"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.clean_downloaded_metadata:1
msgid ""
"Call this method in your plugin's identify method to normalize metadata "
"before putting the Metadata object into result_queue. You can of course, use"
" a custom algorithm suited to your metadata source."
msgstr "استدعِ هذا الأسلوب في أسلوب تحديد الهوية الخاص بإضافتك لتوحيد البيانات الوصفية قبل وضع كائن Metadata في result_queue. يمكنك بالطبع استخدام خوارزمية مخصصة تناسب مصدر البيانات الوصفية الخاص بك."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_url:1
msgid ""
"Return a 3-tuple or None. The 3-tuple is of the form: (identifier_type, "
"identifier_value, URL). The URL is the URL for the book identified by "
"identifiers at this source. identifier_type, identifier_value specify the "
"identifier corresponding to the URL. This URL must be browsable to by a "
"human using a browser. It is meant to provide a clickable link for the user "
"to easily visit the books page at this source. If no URL is found, return "
"None. This method must be quick, and consistent, so only implement it if it "
"is possible to construct the URL from a known scheme given identifiers."
msgstr "أعد 3-tuple أو None. 3-tuple يكون بالشكل: (نوع_المعرف، قيمة_المعرف، URL). عنوان URL هو عنوان URL للكتاب المحدد بواسطة المعرفات في هذا المصدر. يحدد identifier_type، identifier_value المعرف المقابل لعنوان URL. يجب أن يكون عنوان URL هذا قابلاً للتصفح بواسطة إنسان باستخدام متصفح. ويهدف إلى توفير رابط قابل للنقر للمستخدم لزيارة صفحة الكتب بسهولة في هذا المصدر. إذا لم يتم العثور على عنوان URL، أعد None. يجب أن يكون هذا الأسلوب سريعًا ومتسقًا، لذا قم بتنفيذه فقط إذا كان من الممكن إنشاء عنوان URL من مخطط معروف بالنظر إلى المعرفات."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_url_name:1
msgid "Return a human readable name from the return value of get_book_url()."
msgstr "إرجاع اسم مقروء بشريًا من القيمة المعادة من get_book_url()."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_urls:1
msgid ""
"Override this method if you would like to return multiple URLs for this "
"book. Return a list of 3-tuples. By default this method simply calls "
":func:`get_book_url`."
msgstr "تجاوز هذا الأسلوب إذا كنت ترغب في إرجاع عناوين URL متعددة لهذا الكتاب. أعد قائمة من 3-tuples. افتراضيًا، يستدعي هذا الأسلوب ببساطة :func:`get_book_url`."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_cached_cover_url:1
msgid ""
"Return cached cover URL for the book identified by the identifiers "
"dictionary or None if no such URL exists."
msgstr "إرجاع عنوان URL للغلاف المخزن مؤقتًا للكتاب المحدد بواسطة قاموس المعرفات أو None إذا لم يكن هناك عنوان URL من هذا القبيل."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_cached_cover_url:4
msgid ""
"Note that this method must only return validated URLs, i.e. not URLS that "
"could result in a generic cover image or a not found error."
msgstr "لاحظ أن هذا الأسلوب يجب أن يعيد فقط عناوين URL صالحة، أي ليس عناوين URL التي قد تؤدي إلى صورة غلاف عامة أو خطأ عدم العثور."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.id_from_url:1
msgid ""
"Parse a URL and return a tuple of the form: (identifier_type, "
"identifier_value). If the URL does not match the pattern for the metadata "
"source, return None."
msgstr "قم بتحليل عنوان URL وأعد tuple بالشكل: (نوع_المعرف، قيمة_المعرف). إذا لم يتطابق عنوان URL مع نمط مصدر البيانات الوصفية، فأعد None."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:1
msgid ""
"Return a function that is used to generate a key that can sort Metadata "
"objects by their relevance given a search query (title, authors, "
"identifiers)."
msgstr "أعد دالة تستخدم لإنشاء مفتاح يمكنه فرز كائنات البيانات الوصفية حسب مدى صلتها باستعلام بحث (عنوان، مؤلفون، معرفات)."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:5
msgid "These keys are used to sort the results of a call to :meth:`identify`."
msgstr "تستخدم هذه المفاتيح لفرز نتائج استدعاء :meth:`identify`."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:7
msgid ""
"For details on the default algorithm see "
":class:`InternalMetadataCompareKeyGen`. Re-implement this function in your "
"plugin if the default algorithm is not suitable."
msgstr "للحصول على تفاصيل حول الخوارزمية الافتراضية، راجع :class:`InternalMetadataCompareKeyGen`. أعد تنفيذ هذه الدالة في إضافتك إذا كانت الخوارزمية الافتراضية غير مناسبة."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:1
msgid "Identify a book by its Title/Author/ISBN/etc."
msgstr "تحديد كتاب بواسطة عنوانه/مؤلفه/رقم ISBN/إلخ."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:3
msgid ""
"If identifiers(s) are specified and no match is found and this metadata "
"source does not store all related identifiers (for example, all ISBNs of a "
"book), this method should retry with just the title and author (assuming "
"they were specified)."
msgstr "إذا تم تحديد معرفات (معرف) ولم يتم العثور على تطابق ولم يخزن مصدر البيانات الوصفية هذا جميع المعرفات ذات الصلة (على سبيل المثال، جميع أرقام ISBN لكتاب)، يجب أن يعيد هذا الأسلوب المحاولة باستخدام العنوان والمؤلف فقط (بافتراض أنهما تم تحديدهما)."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:8
msgid ""
"If this metadata source also provides covers, the URL to the cover should be"
" cached so that a subsequent call to the get covers API with the same "
"ISBN/special identifier does not need to get the cover URL again. Use the "
"caching API for this."
msgstr "إذا كان مصدر البيانات الوصفية هذا يوفر أيضًا أغلفة، فيجب تخزين عنوان URL للغلاف مؤقتًا بحيث لا يحتاج استدعاء لاحق لواجهة برمجة تطبيقات الحصول على الأغلفة بنفس رقم ISBN/المعرف الخاص إلى الحصول على عنوان URL للغلاف مرة أخرى. استخدم واجهة برمجة تطبيقات التخزين المؤقت لهذا الغرض."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:13
msgid ""
"Every Metadata object put into result_queue by this method must have a "
"`source_relevance` attribute that is an integer indicating the order in "
"which the results were returned by the metadata source for this query. This "
"integer will be used by :meth:`compare_identify_results`. If the order is "
"unimportant, set it to zero for every result."
msgstr "يجب أن يحتوي كل كائن Metadata يتم وضعه في result_queue بواسطة هذا الأسلوب على سمة `source_relevance` وهي عدد صحيح يشير إلى الترتيب الذي أعادت به النتائج من مصدر البيانات الوصفية لهذا الاستعلام. هذا العدد الصحيح سيتم استخدامه بواسطة :meth:`compare_identify_results`. إذا كان الترتيب غير مهم، فعيّنه إلى صفر لكل نتيجة."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:19
msgid ""
"Make sure that any cover/ISBN mapping information is cached before the "
"Metadata object is put into result_queue."
msgstr "تأكد من تخزين أي معلومات تعيين غلاف/ISBN مؤقتًا قبل وضع كائن Metadata في result_queue."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:22
msgid "A log object, use it to output debugging information/errors"
msgstr "كائن سجل، استخدمه لإخراج معلومات/أخطاء التصحيح"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:23
msgid ""
"A result Queue, results should be put into it. Each result is a Metadata "
"object"
msgstr "قائمة انتظار النتائج، يجب وضع النتائج فيها. كل نتيجة هي كائن بيانات وصفية"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:25
msgid ""
"If abort.is_set() returns True, abort further processing and return as soon "
"as possible"
msgstr "إذا أعادت abort.is_set() قيمة True، قم بإلغاء المزيد من المعالجة وعد في أقرب وقت ممكن"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:27
msgid "The title of the book, can be None"
msgstr "عنوان الكتاب، يمكن أن يكون None"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:28
msgid "A list of authors of the book, can be None"
msgstr "قائمة بمؤلفي الكتاب، يمكن أن تكون None"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:29
msgid "A dictionary of other identifiers, most commonly {'isbn':'1234...'}"
msgstr "قاموس لمعرفات أخرى، الأكثر شيوعًا {'isbn':'1234...'}"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:31
msgid ""
"Timeout in seconds, no network request should hang for longer than timeout."
msgstr "المهلة بالثواني، يجب ألا تتوقف أي طلب شبكة لأكثر من المهلة المحددة."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:33
msgid ""
"None if no errors occurred, otherwise a unicode representation of the error "
"suitable for showing to the user"
msgstr "None إذا لم تحدث أخطاء، وإلا تمثيل يونيكود للخطأ مناسب للعرض للمستخدم"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:1
msgid ""
"Download a cover and put it into result_queue. The parameters all have the "
"same meaning as for :meth:`identify`. Put (self, cover_data) into "
"result_queue."
msgstr "قم بتنزيل غلاف وضعه في result_queue. جميع المعلمات لها نفس المعنى كما هو الحال في :meth:`identify`. ضع (self, cover_data) في result_queue."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:5
msgid ""
"This method should use cached cover URLs for efficiency whenever possible. "
"When cached data is not present, most plugins simply call identify and use "
"its results."
msgstr "يجب أن يستخدم هذا الأسلوب عناوين URL للأغلفة المخزنة مؤقتًا لتحقيق الكفاءة كلما أمكن ذلك. عندما لا تكون البيانات المخزنة مؤقتًا موجودة، تقوم معظم الإضافات ببساطة باستدعاء identify واستخدام نتائجها."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:9
msgid ""
"If the parameter get_best_cover is True and this plugin can get multiple "
"covers, it should only get the \"best\" one."
msgstr "إذا كانت المعلمة get_best_cover هي True ويمكن لهذه الإضافة الحصول على أغلفة متعددة، فيجب أن تحصل على الأفضل فقط."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:1
msgid ""
"Generate a sort key for comparison of the relevance of Metadata objects, "
"given a search query. This is used only to compare results from the same "
"metadata source, not across different sources."
msgstr "إنشاء مفتاح فرز لمقارنة مدى صلة كائنات البيانات الوصفية، بالنظر إلى استعلام بحث. يستخدم هذا فقط لمقارنة النتائج من نفس مصدر البيانات الوصفية، وليس عبر مصادر مختلفة."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:5
msgid ""
"The sort key ensures that an ascending order sort is a sort by order of "
"decreasing relevance."
msgstr "يضمن مفتاح الفرز أن الفرز بترتيب تصاعدي هو فرز بترتيب الأهمية المتناقصة."

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:8
msgid "The algorithm is:"
msgstr "الخوارزمية هي:"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:10
msgid ""
"Prefer results that have at least one identifier the same as for the query"
msgstr "تفضيل النتائج التي تحتوي على معرف واحد على الأقل مطابق للاستعلام"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:11
msgid "Prefer results with a cached cover URL"
msgstr "تفضيل النتائج ذات عنوان URL للغلاف المخزن مؤقتًا"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:12
msgid "Prefer results with all available fields filled in"
msgstr "تفضيل النتائج التي تم ملء جميع الحقول المتاحة فيها"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:13
msgid ""
"Prefer results with the same language as the current user interface language"
msgstr "تفضيل النتائج بنفس لغة واجهة المستخدم الحالية"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:14
msgid "Prefer results that are an exact title match to the query"
msgstr "تفضيل النتائج التي تطابق العنوان تمامًا للاستعلام"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:15
msgid "Prefer results with longer comments (greater than 10% longer)"
msgstr "تفضيل النتائج ذات التعليقات الأطول (أطول بأكثر من 10%)"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:16
msgid ""
"Use the relevance of the result as reported by the metadata source's search"
msgstr "استخدم مدى صلة النتيجة كما أفاد بها بحث مصدر البيانات الوصفية"

#: ../../../__w/calibre/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:17
msgid "engine"
msgstr "المحرك"

#: ../../../__w/calibre/calibre/manual/plugins.rst:76
msgid "Conversion plugins"
msgstr "إضافات التحويل"

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin:1
msgid ""
"InputFormatPlugins are responsible for converting a document into "
"HTML+OPF+CSS+etc. The results of the conversion *must* be encoded in UTF-8. "
"The main action happens in :meth:`convert`."
msgstr "إضافات InputFormatPlugins مسؤولة عن تحويل مستند إلى HTML+OPF+CSS+إلخ. يجب أن تكون نتائج التحويل *مُشفرة* بـ UTF-8. يحدث الإجراء الرئيسي في :meth:`convert`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run For example: "
"``set(['azw', 'mobi', 'prc'])``"
msgstr "مجموعة من أنواع الملفات التي يجب تشغيل هذه الإضافة من أجلها. على سبيل المثال: ``set(['azw', 'mobi', 'prc'])``"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.is_image_collection:1
msgid ""
"If True, this input plugin generates a collection of images, one per HTML "
"file. This can be set dynamically, in the convert method if the input files "
"can be both image collections and non-image collections. If you set this to "
"True, you must implement the get_images() method that returns a list of "
"images."
msgstr "إذا كان True، فإن هذه الإضافة المدخلة تولد مجموعة من الصور، واحدة لكل ملف HTML. يمكن تعيين هذا ديناميكيًا، في أسلوب التحويل إذا كانت ملفات الإدخال يمكن أن تكون مجموعات صور ومجموعات غير صور. إذا قمت بتعيين هذا إلى True، يجب عليك تنفيذ أسلوب get_images() الذي يعيد قائمة من الصور."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.core_usage:1
msgid ""
"Number of CPU cores used by this plugin. A value of -1 means that it uses "
"all available cores"
msgstr "عدد نوى وحدة المعالجة المركزية التي تستخدمها هذه الإضافة. قيمة -1 تعني أنها تستخدم جميع النوى المتاحة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.for_viewer:1
msgid ""
"If set to True, the input plugin will perform special processing to make its"
" output suitable for viewing"
msgstr "إذا تم تعيينه على True، ستقوم إضافة الإدخال بإجراء معالجة خاصة لجعل إخراجها مناسبًا للعرض"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.output_encoding:1
msgid ""
"The encoding that this input plugin creates files in. A value of None means "
"that the encoding is undefined and must be detected individually"
msgstr "الترميز الذي تنشئ به هذه الإضافة المدخلة الملفات. قيمة None تعني أن الترميز غير محدد ويجب اكتشافه بشكل فردي"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.common_options:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.common_options:1
msgid ""
"Options shared by all Input format plugins. Do not override in sub-classes. "
"Use :attr:`options` instead. Every option must be an instance of "
":class:`OptionRecommendation`."
msgstr "خيارات مشتركة بين جميع إضافات تنسيق الإدخال. لا تتجاوز في الفئات الفرعية. استخدم :attr:`options` بدلاً من ذلك. يجب أن يكون كل خيار نسخة من :class:`OptionRecommendation`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.options:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.options:1
msgid ""
"Options to customize the behavior of this plugin. Every option must be an "
"instance of :class:`OptionRecommendation`."
msgstr "خيارات لتخصيص سلوك هذه الإضافة. يجب أن يكون كل خيار نسخة من :class:`OptionRecommendation`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin.recommendations:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.recommendations:1
msgid ""
"A set of 3-tuples of the form (option_name, recommended_value, "
"recommendation_level)"
msgstr "مجموعة من 3-tuples بالشكل (اسم_الخيار، القيمة_الموصى بها، مستوى_التوصية)"

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.get_images:1
msgid ""
"Return a list of absolute paths to the images, if this input plugin "
"represents an image collection. The list of images is in the same order as "
"the spine and the TOC."
msgstr "أعد قائمة بالمسارات المطلقة للصور، إذا كانت هذه الإضافة المدخلة تمثل مجموعة صور. قائمة الصور بنفس ترتيب العمود الفقري وجدول المحتويات."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:1
msgid ""
"This method must be implemented in sub-classes. It must return the path to "
"the created OPF file or an :class:`OEBBook` instance. All output should be "
"contained in the current folder. If this plugin creates files outside the "
"current folder they must be deleted/marked for deletion before this method "
"returns."
msgstr "يجب تنفيذ هذا الأسلوب في الفئات الفرعية. يجب أن يعيد المسار إلى ملف OPF الذي تم إنشاؤه أو مثيل :class:`OEBBook`. يجب أن يكون كل الإخراج محتوى في المجلد الحالي. إذا أنشأت هذه الإضافة ملفات خارج المجلد الحالي، فيجب حذفها/وضع علامة عليها للحذف قبل أن يعيد هذا الأسلوب."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:8
msgid "A file like object that contains the input file."
msgstr "كائن شبيه بالملف يحتوي على ملف الإدخال."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:9
msgid ""
"Options to customize the conversion process. Guaranteed to have attributes "
"corresponding to all the options declared by this plugin. In addition, it "
"will have a verbose attribute that takes integral values from zero upwards. "
"Higher numbers mean be more verbose. Another useful attribute is "
"``input_profile`` that is an instance of "
":class:`calibre.customize.profiles.InputProfile`."
msgstr "خيارات لتخصيص عملية التحويل. مضمون أن تحتوي على سمات تتوافق مع جميع الخيارات المعلنة بواسطة هذه الإضافة. بالإضافة إلى ذلك، ستحتوي على سمة verbose تأخذ قيمًا صحيحة من الصفر فصاعدًا. الأرقام الأعلى تعني أن تكون أكثر تفصيلاً. سمة أخرى مفيدة هي ``input_profile`` وهي نسخة من :class:`calibre.customize.profiles.InputProfile`."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:17
msgid ""
"The extension (without the .) of the input file. It is guaranteed to be one "
"of the `file_types` supported by this plugin."
msgstr "الامتداد (بدون النقطة) لملف الإدخال. مضمون أن يكون أحد أنواع الملفات المدعومة بواسطة هذه الإضافة."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:20
msgid ""
"A :class:`calibre.utils.logging.Log` object. All output should use this "
"object."
msgstr "كائن :class:`calibre.utils.logging.Log`. يجب أن يستخدم هذا الكائن جميع المخرجات."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:22
msgid ""
"A dictionary of various information that the input plugin can get easily "
"that would speed up the subsequent stages of the conversion."
msgstr "قاموس يحتوي على معلومات مختلفة يمكن لإضافة الإدخال الحصول عليها بسهولة والتي ستسرع المراحل اللاحقة من التحويل."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.postprocess_book:1
msgid ""
"Called to allow the input plugin to perform postprocessing after the book "
"has been parsed."
msgstr "يتم استدعاؤها للسماح لإضافة الإدخال بإجراء معالجة لاحقة بعد تحليل الكتاب."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.specialize:1
msgid ""
"Called to allow the input plugin to specialize the parsed book for a "
"particular output format. Called after postprocess_book and before any "
"transforms are performed on the parsed book."
msgstr "يتم استدعاؤها للسماح لإضافة الإدخال بتخصيص الكتاب المحلل لـ تنسيق إخراج معين. يتم استدعاؤها بعد postprocess_book وقبل إجراء أي تحويلات على الكتاب المحلل."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.InputFormatPlugin.gui_configuration_widget:1
msgid ""
"Called to create the widget used for configuring this plugin in the calibre "
"GUI. The widget must be an instance of the PluginWidget class. See the "
"builtin input plugins for examples."
msgstr "يتم استدعاؤها لإنشاء الأداة المستخدمة لتكوين هذه الإضافة في واجهة المستخدم الرسومية لـ calibre. يجب أن تكون الأداة نسخة من فئة PluginWidget. راجع إضافات الإدخال المدمجة للحصول على أمثلة."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin:1
msgid ""
"OutputFormatPlugins are responsible for converting an OEB document "
"(OPF+HTML) into an output e-book."
msgstr "إضافات OutputFormatPlugins مسؤولة عن تحويل مستند OEB (OPF+HTML) إلى كتاب إلكتروني إخراج."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin:4
msgid ""
"The OEB document can be assumed to be encoded in UTF-8. The main action "
"happens in :meth:`convert`."
msgstr "يمكن افتراض أن مستند OEB مشفر بـ UTF-8. الإجراء الرئيسي يحدث في :meth:`convert`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.file_type:1
msgid ""
"The file type (extension without leading period) that this plugin outputs"
msgstr "نوع الملف (الامتداد بدون نقطة بادئة) الذي تنتجه هذه الإضافة"

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.description:1
msgid ""
"str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str"
msgstr "str(كائن='') -> str str(بايت_أو_مخزن[, ترميز[, أخطاء]]) -> str"

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.description:4
msgid ""
"Create a new string object from the given object. If encoding or errors is "
"specified, then the object must expose a data buffer that will be decoded "
"using the given encoding and error handler. Otherwise, returns the result of"
" object.__str__() (if defined) or repr(object). encoding defaults to "
"'utf-8'. errors defaults to 'strict'."
msgstr "إنشاء كائن سلسلة جديد من الكائن المحدد. إذا تم تحديد الترميز أو الأخطاء، فيجب أن يكشف الكائن عن مخزن بيانات سيتم فك ترميزه باستخدام الترميز ومعالج الأخطاء المحددين. وإلا، فإنه يعيد نتيجة object.__str__() (إذا تم تعريفه) أو repr(object). الترميز الافتراضي هو 'utf-8'. الأخطاء الافتراضية هي 'strict'."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:1
msgid ""
"Render the contents of `oeb_book` (which is an instance of "
":class:`calibre.ebooks.oeb.OEBBook`) to the file specified by output."
msgstr "عرض محتويات `oeb_book` (وهو نسخة من :class:`calibre.ebooks.oeb.OEBBook`) إلى الملف المحدد بواسطة الإخراج."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:4
msgid ""
"Either a file like object or a string. If it is a string it is the path to a"
" folder that may or may not exist. The output plugin should write its output"
" into that folder. If it is a file like object, the output plugin should "
"write its output into the file."
msgstr "إما كائن شبيه بالملف أو سلسلة. إذا كانت سلسلة، فهي مسار إلى مجلد قد يوجد أو لا يوجد. يجب أن تكتب إضافة الإخراج إخراجها في ذلك المجلد. إذا كان كائنًا شبيهًا بالملف، يجب أن تكتب إضافة الإخراج إخراجها في الملف."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:8
msgid ""
"The input plugin that was used at the beginning of the conversion pipeline."
msgstr "إضافة الإدخال التي تم استخدامها في بداية مسار التحويل."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:10
msgid ""
"Conversion options. Guaranteed to have attributes corresponding to the "
"OptionRecommendations of this plugin."
msgstr "خيارات التحويل. مضمون أن تحتوي على سمات تتوافق مع OptionRecommendations لهذه الإضافة."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:12
msgid "The logger. Print debug/info messages etc. using this."
msgstr "المسجل. اطبع رسائل التصحيح/المعلومات وما إلى ذلك باستخدام هذا."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.specialize_options:1
msgid ""
"Can be used to change the values of conversion options, as used by the "
"conversion pipeline."
msgstr "يمكن استخدامها لتغيير قيم خيارات التحويل، كما تستخدمها مسار التحويل."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:1
msgid ""
"Can be used to make changes to the CSS during the CSS flattening process."
msgstr "يمكن استخدامها لإجراء تغييرات على CSS أثناء عملية تسطيح CSS."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:4
msgid "The item (HTML file) being processed"
msgstr "العنصر (ملف HTML) الذي تتم معالجته"

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:5
msgid ""
"A Stylizer object containing the flattened styles for item. You can get the "
"style for any element by stylizer.style(element)."
msgstr "كائن Stylizer يحتوي على الأنماط المسطحة للعنصر. يمكنك الحصول على نمط أي عنصر عن طريق stylizer.style(element)."

#: ../../../__w/calibre/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.gui_configuration_widget:1
msgid ""
"Called to create the widget used for configuring this plugin in the calibre "
"GUI. The widget must be an instance of the PluginWidget class. See the "
"builtin output plugins for examples."
msgstr "يتم استدعاؤها لإنشاء الأداة المستخدمة لتكوين هذه الإضافة في واجهة المستخدم الرسومية لـ calibre. يجب أن تكون الأداة نسخة من فئة PluginWidget. راجع إضافات الإدخال المدمجة للحصول على أمثلة."

#: ../../../__w/calibre/calibre/manual/plugins.rst:91
msgid "Device drivers"
msgstr "برامج تشغيل الأجهزة"

#: ../../../__w/calibre/calibre/manual/plugins.rst:95
msgid ""
"The base class for all device drivers is :class:`DevicePlugin`. However, if "
"your device exposes itself as a USBMS drive to the operating system, you "
"should use the USBMS class instead as it implements all the logic needed to "
"support these kinds of devices."
msgstr "الفئة الأساسية لجميع برامج تشغيل الأجهزة هي :class:`DevicePlugin`. ومع ذلك، إذا كان جهازك يعرض نفسه كـ محرك أقراص USBMS لنظام التشغيل، فيجب عليك استخدام فئة USBMS بدلاً من ذلك لأنها تنفذ كل المنطق اللازم لدعم هذه الأنواع من الأجهزة."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin:1
msgid ""
"Defines the interface that should be implemented by backends that "
"communicate with an e-book reader."
msgstr "يحدد الواجهة التي يجب تنفيذها بواسطة الواجهات الخلفية التي تتواصل مع قارئ الكتب الإلكترونية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.FORMATS:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS.FORMATS:1
msgid "Ordered list of supported formats"
msgstr "قائمة مرتبة بالتنسيقات المدعومة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.VENDOR_ID:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.VENDOR_ID:1
msgid ""
"VENDOR_ID can be either an integer, a list of integers or a dictionary If it"
" is a dictionary, it must be a dictionary of dictionaries, of the form::"
msgstr "يمكن أن يكون VENDOR_ID إما عددًا صحيحًا، أو قائمة من الأعداد الصحيحة أو قاموسًا. إذا كان قاموسًا، فيجب أن يكون قاموسًا من القواميس، بالشكل::"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.PRODUCT_ID:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.PRODUCT_ID:1
msgid "An integer or a list of integers"
msgstr "عدد صحيح أو قائمة من الأعداد الصحيحة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.BCD:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.BCD:1
msgid ""
"BCD can be either None to not distinguish between devices based on BCD, or "
"it can be a list of the BCD numbers of all devices supported by this driver."
msgstr "يمكن أن يكون BCD إما None لعدم التمييز بين الأجهزة بناءً على BCD، أو يمكن أن يكون قائمة بأرقام BCD لجميع الأجهزة التي يدعمها هذا المشغل."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.THUMBNAIL_HEIGHT:1
msgid "Height for thumbnails on the device"
msgstr "ارتفاع الصور المصغرة على الجهاز"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.THUMBNAIL_COMPRESSION_QUALITY:1
msgid ""
"Compression quality for thumbnails. Set this closer to 100 to have better "
"quality thumbnails with fewer compression artifacts. Of course, the "
"thumbnails get larger as well."
msgstr "جودة ضغط الصور المصغرة. اضبطها أقرب إلى 100 للحصول على صور مصغرة بجودة أفضل مع عدد أقل من عيوب الضغط. بالطبع، تصبح الصور المصغرة أكبر أيضًا."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.WANTS_UPDATED_THUMBNAILS:1
msgid ""
"Set this to True if the device supports updating cover thumbnails during "
"sync_booklists. Setting it to true will ask device.py to refresh the cover "
"thumbnails during book matching"
msgstr "عيّن هذا إلى True إذا كان الجهاز يدعم تحديث الصور المصغرة للغلاف أثناء sync_booklists. تعيينه إلى true سيطلب من device.py تحديث الصور المصغرة للغلاف أثناء مطابقة الكتاب"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.CAN_SET_METADATA:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS.CAN_SET_METADATA:1
msgid "Whether the metadata on books can be set via the GUI."
msgstr "ما إذا كان يمكن تعيين البيانات الوصفية للكتب عبر واجهة المستخدم الرسومية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.CAN_DO_DEVICE_DB_PLUGBOARD:1
msgid "Whether the device can handle device_db metadata plugboards"
msgstr "ما إذا كان الجهاز يمكنه التعامل مع لوحات توصيل بيانات device_db الوصفية"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.path_sep:1
msgid "Path separator for paths to books on device"
msgstr "فاصل المسار لمسارات الكتب على الجهاز"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.icon:1
msgid "Icon for this device"
msgstr "أيقونة لهذا الجهاز"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.OPEN_FEEDBACK_MESSAGE:1
msgid ""
"GUI displays this as a message if not None in the status bar. Useful if "
"opening can take a long time"
msgstr "تعرض واجهة المستخدم الرسومية هذا كرسالة إذا لم تكن None في شريط الحالة. مفيد إذا كان الفتح يستغرق وقتًا طويلاً"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.VIRTUAL_BOOK_EXTENSIONS:1
msgid ""
"Set of extensions that are \"virtual books\" on the device and therefore "
"cannot be viewed/saved/added to library. For example: "
"``frozenset(['kobo'])``"
msgstr "مجموعة من الامتدادات التي هي \"كتب افتراضية\" على الجهاز وبالتالي لا يمكن عرضها/حفظها/إضافتها إلى المكتبة. على سبيل المثال: ``frozenset(['kobo'])``"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.VIRTUAL_BOOK_EXTENSION_MESSAGE:1
msgid "Message to display to user for virtual book extensions."
msgstr "رسالة لعرضها للمستخدم لملحقات الكتب الافتراضية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.NUKE_COMMENTS:1
msgid ""
"Whether to nuke comments in the copy of the book sent to the device. If not "
"None this should be short string that the comments will be replaced by."
msgstr "ما إذا كان سيتم حذف التعليقات في نسخة الكتاب المرسلة إلى الجهاز. إذا لم تكن None، فيجب أن تكون هذه سلسلة قصيرة سيتم استبدال التعليقات بها."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.MANAGES_DEVICE_PRESENCE:1
msgid ""
"If True indicates that  this driver completely manages device detection, "
"ejecting and so forth. If you set this to True, you *must* implement the "
"detect_managed_devices and debug_managed_device_detection methods. A driver "
"with this set to true is responsible for detection of devices, managing a "
"blacklist of devices, a list of ejected devices and so forth. calibre will "
"periodically call the detect_managed_devices() method and if it returns a "
"detected device, calibre will call open(). open() will be called every time "
"a device is returned even if previous calls to open() failed, therefore the "
"driver must maintain its own blacklist of failed devices. Similarly, when "
"ejecting, calibre will call eject() and then assuming the next call to "
"detect_managed_devices() returns None, it will call post_yank_cleanup()."
msgstr "إذا كان True، فهذا يشير إلى أن هذا المشغل يدير بشكل كامل اكتشاف الأجهزة، والإخراج وما إلى ذلك. إذا قمت بتعيين هذا إلى True، فيجب عليك *بالتأكيد* تنفيذ أساليب detect_managed_devices و debug_managed_device_detection. المشغل الذي تم تعيين هذا الخيار له على True مسؤول عن اكتشاف الأجهزة، وإدارة قائمة سوداء للأجهزة، وقائمة بالأجهزة التي تم إخراجها وما إلى ذلك. سيقوم calibre باستدعاء أسلوب detect_managed_devices() بشكل دوري، وإذا أعاد جهازًا مكتشفًا، فسيقوم calibre باستدعاء open(). سيتم استدعاء open() في كل مرة يتم فيها إرجاع جهاز حتى لو فشلت الاستدعاءات السابقة لـ open()، لذلك يجب على المشغل الاحتفاظ بقائمة سوداء خاصة به للأجهزة الفاشلة. وبالمثل، عند الإخراج، سيقوم calibre باستدعاء eject() ثم بافتراض أن الاستدعاء التالي لـ detect_managed_devices() يعيد None، فسيقوم باستدعاء post_yank_cleanup()."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.SLOW_DRIVEINFO:1
msgid ""
"If set the True, calibre will call the :meth:`get_driveinfo()` method after "
"the books lists have been loaded to get the driveinfo."
msgstr "إذا تم تعيينه على True، سيقوم calibre باستدعاء الأسلوب :meth:`get_driveinfo()` بعد تحميل قوائم الكتب للحصول على معلومات محرك الأقراص."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.ASK_TO_ALLOW_CONNECT:1
msgid ""
"If set to True, calibre will ask the user if they want to manage the device "
"with calibre, the first time it is detected. If you set this to True you "
"must implement :meth:`get_device_uid()` and "
":meth:`ignore_connected_device()` and :meth:`get_user_blacklisted_devices` "
"and :meth:`set_user_blacklisted_devices`"
msgstr "إذا تم تعيينه على True، سيطلب calibre من المستخدم ما إذا كان يريد إدارة الجهاز باستخدام calibre، في المرة الأولى التي يتم فيها اكتشافه. إذا قمت بتعيين هذا على True، فيجب عليك تنفيذ :meth:`get_device_uid()` و :meth:`ignore_connected_device()` و :meth:`get_user_blacklisted_devices` و :meth:`set_user_blacklisted_devices`"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin.user_feedback_after_callback:1
msgid ""
"Set this to a dictionary of the form {'title':title, 'msg':msg, "
"'det_msg':detailed_msg} to have calibre popup a message to the user after "
"some callbacks are run (currently only upload_books). Be careful to not spam"
" the user with too many messages. This variable is checked after *every* "
"callback, so only set it when you really need to."
msgstr "عيّن هذا إلى قاموس بالشكل {'title':عنوان، 'msg':رسالة، 'det_msg':رسالة_مفصلة} لجعل calibre يعرض رسالة منبثقة للمستخدم بعد تشغيل بعض ردود الاتصال (حاليًا فقط upload_books). كن حذرًا لعدم إغراق المستخدم بالكثير من الرسائل. يتم التحقق من هذا المتغير بعد *كل* رد اتصال، لذا قم بتعيينه فقط عندما تحتاج إليه حقًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_open_popup_message:1
msgid ""
"GUI displays this as a non-modal popup. Should be an instance of "
"OpenPopupMessage"
msgstr "تعرض واجهة المستخدم الرسومية هذا كنافذة منبثقة غير مشروطة. يجب أن يكون نسخة من OpenPopupMessage"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.model_metadata:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.model_metadata:1
msgid "Metadata about all the actual device models this driver supports"
msgstr "بيانات وصفية حول جميع نماذج الأجهزة الفعلية التي يدعمها هذا المشغل"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_usb_connected:1
msgid ""
"Return True, device_info if a device handled by this plugin is currently "
"connected."
msgstr "أعد True، device_info إذا كان جهازًا يتعامل معه هذا المكون الإضافي متصلاً حاليًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_usb_connected:3
msgid "List of devices currently connected"
msgstr "قائمة بالأجهزة المتصلة حاليًا"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:1
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:1
msgid "Called only if MANAGES_DEVICE_PRESENCE is True."
msgstr "يتم استدعاؤها فقط إذا كانت MANAGES_DEVICE_PRESENCE هي True."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:3
msgid ""
"Scan for devices that this driver can handle. Should return a device object "
"if a device is found. This object will be passed to the open() method as the"
" connected_device. If no device is found, return None. The returned object "
"can be anything, calibre does not use it, it is only passed to open()."
msgstr "مسح الأجهزة التي يمكن لهذا المشغل التعامل معها. يجب أن يعيد كائن جهاز إذا تم العثور على جهاز. سيتم تمرير هذا الكائن إلى أسلوب open() كـ connected_device. إذا لم يتم العثور على جهاز، أعد None. الكائن المعاد يمكن أن يكون أي شيء، calibre لا يستخدمه، يتم تمريره فقط إلى open()."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:9
msgid ""
"This method is called periodically by the GUI, so make sure it is not too "
"resource intensive. Use a cache to avoid repeatedly scanning the system."
msgstr "يتم استدعاء هذا الأسلوب بشكل دوري بواسطة واجهة المستخدم الرسومية، لذا تأكد من أنه ليس مستهلكًا للموارد بشكل كبير. استخدم ذاكرة تخزين مؤقت لتجنب المسح المتكرر للنظام."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:13
msgid "Set of USB devices found on the system."
msgstr "مجموعة من أجهزة USB الموجودة على النظام."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:15
msgid ""
"If True and the driver uses a cache to prevent repeated scanning, the cache "
"must be flushed."
msgstr "إذا كان True ويستخدم المشغل ذاكرة تخزين مؤقت لمنع المسح المتكرر، فيجب مسح ذاكرة التخزين المؤقت."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:3
msgid ""
"Should write information about the devices detected on the system to output,"
" which is a file like object."
msgstr "يجب أن يكتب معلومات حول الأجهزة المكتشفة على النظام إلى الإخراج، وهو كائن شبيه بالملف."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:6
msgid ""
"Should return True if a device was detected and successfully opened, "
"otherwise False."
msgstr "يجب أن يعيد True إذا تم اكتشاف جهاز وفتحه بنجاح، وإلا False."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.reset:1
msgid "The key to unlock the device"
msgstr "مفتاح فتح الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:2
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.reset:2
msgid "If true the packet stream to/from the device is logged"
msgstr "إذا كان صحيحًا، يتم تسجيل تدفق الحزم من/إلى الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:3
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_progress_reporter:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.reset:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.set_progress_reporter:3
msgid ""
"Function that is called with a % progress (number between 0 and 100) for "
"various tasks. If it is called with -1 that means that the task does not "
"have any progress information"
msgstr "دالة يتم استدعاؤها مع نسبة مئوية من التقدم (عدد بين 0 و 100) لـ مهام مختلفة. إذا تم استدعاؤها بـ -1 فهذا يعني أن المهمة لا تحتوي على أي معلومات تقدم"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:7
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.reset:7
msgid "Device information from the device scanner"
msgstr "معلومات الجهاز من ماسح الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle_windows:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.can_handle_windows:1
msgid ""
"Optional method to perform further checks on a device to see if this driver "
"is capable of handling it. If it is not it should return False. This method "
"is only called after the vendor, product ids and the bcd have matched, so it"
" can do some relatively time intensive checks. The default implementation "
"returns True. This method is called only on Windows. See also "
":meth:`can_handle`."
msgstr "طريقة اختيارية لإجراء المزيد من الفحوصات على الجهاز لمعرفة ما إذا كان هذا المشغل قادرًا على التعامل معه. إذا لم يكن كذلك، فيجب أن يعيد False. يتم استدعاء هذا الأسلوب فقط بعد تطابق معرفات البائع والمنتج و bcd، لذلك يمكنه إجراء بعض الفحوصات التي تستغرق وقتًا طويلاً نسبيًا. التنفيذ الافتراضي يعيد True. يتم استدعاء هذا الأسلوب فقط على Windows. راجع أيضًا :meth:`can_handle`."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle_windows:8
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.can_handle_windows:8
msgid ""
"Note that for devices based on USBMS this method by default delegates to "
":meth:`can_handle`.  So you only need to override :meth:`can_handle` in your"
" subclass of USBMS."
msgstr "لاحظ أنه بالنسبة للأجهزة المستندة إلى USBMS، يقوم هذا الأسلوب بشكل افتراضي بتفويض إلى :meth:`can_handle`. لذا تحتاج فقط إلى تجاوز :meth:`can_handle` في فئتك الفرعية من USBMS."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle_windows:12
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.can_handle_windows:12
msgid ""
"A usbdevice as returned by :func:`calibre.devices.winusb.scan_usb_devices`"
msgstr "جهاز USB كما أعادته :func:`calibre.devices.winusb.scan_usb_devices`"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle:1
msgid "Unix version of :meth:`can_handle_windows`."
msgstr "نسخة Unix من :meth:`can_handle_windows`."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle:3
msgid "Is a tuple of (vid, pid, bcd, manufacturer, product, serial number)"
msgstr "هو tuple من (vid, pid, bcd, manufacturer, product, serial number)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.open:1
msgid ""
"Perform any device specific initialization. Called after the device is "
"detected but before any other functions that communicate with the device. "
"For example: For devices that present themselves as USB Mass storage "
"devices, this method would be responsible for mounting the device or if the "
"device has been automounted, for finding out where it has been mounted. The "
"method :meth:`calibre.devices.usbms.device.Device.open` has an "
"implementation of this function that should serve as a good example for USB "
"Mass storage devices."
msgstr "قم بإجراء أي تهيئة خاصة بالجهاز. يتم استدعاؤها بعد اكتشاف الجهاز ولكن قبل أي وظائف أخرى تتواصل مع الجهاز. على سبيل المثال: بالنسبة للأجهزة التي تقدم نفسها كأجهزة تخزين USB جماعي، سيكون هذا الأسلوب مسؤولاً عن تركيب الجهاز أو إذا كان الجهاز قد تم تركيبه تلقائيًا، عن معرفة مكان تركيبه. الأسلوب :meth:`calibre.devices.usbms.device.Device.open` لديه تنفيذ لهذه الوظيفة يجب أن يكون بمثابة مثال جيد لأجهزة تخزين USB الجماعي."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:11
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.open:11
msgid ""
"This method can raise an OpenFeedback exception to display a message to the "
"user."
msgstr "يمكن لهذا الأسلوب طرح استثناء OpenFeedback لعرض رسالة للمستخدم."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:14
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.open:14
msgid ""
"The device that we are trying to open. It is a tuple of (vendor id, product "
"id, bcd, manufacturer name, product name, device serial number). However, "
"some devices have no serial number and on Windows only the first three "
"fields are present, the rest are None."
msgstr "الجهاز الذي نحاول فتحه. إنه tuple من (معرف البائع، معرف المنتج، bcd، اسم الشركة المصنعة، اسم المنتج، الرقم التسلسلي للجهاز). ومع ذلك، بعض الأجهزة لا تحتوي على رقم تسلسلي وعلى نظام Windows توجد فقط الحقول الثلاثة الأولى، والباقي None."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:20
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.open:20
msgid ""
"The UUID of the current calibre library. Can be None if there is no library "
"(for example when used from the command line)."
msgstr "معرف UUID لمكتبة calibre الحالية. يمكن أن يكون None إذا لم تكن هناك مكتبة (على سبيل المثال عند الاستخدام من سطر الأوامر)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.eject:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.eject:1
msgid ""
"Un-mount / eject the device from the OS. This does not check if there are "
"pending GUI jobs that need to communicate with the device."
msgstr "إلغاء تركيب / إخراج الجهاز من نظام التشغيل. هذا لا يتحقق مما إذا كانت هناك مهام واجهة مستخدم رسومية معلقة تحتاج إلى التواصل مع الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.eject:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.eject:4
msgid ""
"NOTE: That this method may not be called on the same thread as the rest of "
"the device methods."
msgstr "ملاحظة: قد لا يتم استدعاء هذا الأسلوب على نفس الخيط مثل بقية أساليب الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.post_yank_cleanup:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.post_yank_cleanup:1
msgid "Called if the user yanks the device without ejecting it first."
msgstr "يتم استدعاؤها إذا قام المستخدم بسحب الجهاز دون إخراجه أولاً."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_progress_reporter:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.set_progress_reporter:1
msgid "Set a function to report progress information."
msgstr "تعيين دالة للإبلاغ عن معلومات التقدم."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_information:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.get_device_information:1
msgid "Ask device for device information. See L{DeviceInfoQuery}."
msgstr "اطلب معلومات الجهاز من الجهاز. راجع L{DeviceInfoQuery}."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_information:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.get_device_information:3
msgid ""
"(device name, device version, software version on device, MIME type) The "
"tuple can optionally have a fifth element, which is a drive information "
"dictionary. See usbms.driver for an example."
msgstr "(اسم الجهاز، إصدار الجهاز، إصدار البرنامج على الجهاز، نوع MIME) يمكن أن يحتوي الـ tuple اختياريًا على عنصر خامس، وهو قاموس معلومات محرك الأقراص. راجع usbms.driver للحصول على مثال."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_driveinfo:1
msgid ""
"Return the driveinfo dictionary. Usually called from "
"get_device_information(), but if loading the driveinfo is slow for this "
"driver, then it should set SLOW_DRIVEINFO. In this case, this method will be"
" called by calibre after the book lists have been loaded. Note that it is "
"not called on the device thread, so the driver should cache the drive info "
"in the books() method and this function should return the cached data."
msgstr "إرجاع قاموس driveinfo. يتم استدعاؤها عادةً من get_device_information()، ولكن إذا كان تحميل driveinfo بطيئًا لهذا المشغل، فيجب أن يعيّن SLOW_DRIVEINFO. في هذه الحالة، سيتم استدعاء هذا الأسلوب بواسطة calibre بعد تحميل قوائم الكتب. لاحظ أنه لا يتم استدعاؤها على خيط الجهاز، لذا يجب على المشغل تخزين معلومات محرك الأقراص مؤقتًا في أسلوب books() ويجب أن تعيد هذه الدالة البيانات المخزنة مؤقتًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.card_prefix:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.card_prefix:1
msgid ""
"Return a 2 element list of the prefix to paths on the cards. If no card is "
"present None is set for the card's prefix. E.G. ('/place', '/place2') (None,"
" 'place2') ('place', None) (None, None)"
msgstr "إرجاع قائمة من عنصرين للبادئة إلى المسارات على البطاقات. إذا لم تكن هناك بطاقة موجودة، يتم تعيين None لبادئة البطاقة. على سبيل المثال: ('/place', '/place2') (None، 'place2') ('place', None) (None، None)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.total_space:1
msgid "Get total space available on the mountpoints:"
msgstr "احصل على إجمالي المساحة المتاحة على نقاط التحميل:"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:2
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:2
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.free_space:2
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.total_space:2
msgid "Main memory"
msgstr "الذاكرة الرئيسية"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.total_space:3
msgid "Memory Card A"
msgstr "بطاقة الذاكرة أ"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.total_space:4
msgid "Memory Card B"
msgstr "بطاقة الذاكرة ب"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:6
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.total_space:6
msgid ""
"A 3 element list with total space in bytes of (1, 2, 3). If a particular "
"device doesn't have any of these locations it should return 0."
msgstr "قائمة من 3 عناصر تحتوي على إجمالي المساحة بالبايت (1، 2، 3). إذا لم يكن لدى جهاز معين أي من هذه المواقع، فيجب أن يعيد 0."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.free_space:1
msgid "Get free space available on the mountpoints:"
msgstr "احصل على المساحة الحرة المتاحة على نقاط التحميل:"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.free_space:3
msgid "Card A"
msgstr "البطاقة أ"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.free_space:4
msgid "Card B"
msgstr "البطاقة ب"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:6
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.free_space:6
msgid ""
"A 3 element list with free space in bytes of (1, 2, 3). If a particular "
"device doesn't have any of these locations it should return -1."
msgstr "قائمة من 3 عناصر تحتوي على مساحة حرة بالبايت (1، 2، 3). إذا لم يكن لدى جهاز معين أي من هذه المواقع، فيجب أن يعيد -1."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.books:1
msgid "Return a list of e-books on the device."
msgstr "إرجاع قائمة بالكتب الإلكترونية على الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.books:3
msgid ""
"If 'carda' or 'cardb' return a list of e-books on the specific storage card,"
" otherwise return list of e-books in main memory of device. If a card is "
"specified and no books are on the card return empty list."
msgstr "إذا كانت 'carda' أو 'cardb' تعيد قائمة بالكتب الإلكترونية على بطاقة التخزين المحددة، وإلا أعد قائمة بالكتب الإلكترونية في الذاكرة الرئيسية للجهاز. إذا تم تحديد بطاقة ولم تكن هناك كتب على البطاقة، أعد قائمة فارغة."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:8
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.books:8
msgid "A BookList."
msgstr "قائمة كتب."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_books:1
msgid ""
"Upload a list of books to the device. If a file already exists on the "
"device, it should be replaced. This method should raise a "
":class:`FreeSpaceError` if there is not enough free space on the device. The"
" text of the FreeSpaceError must contain the word \"card\" if ``on_card`` is"
" not None otherwise it must contain the word \"memory\"."
msgstr "تحميل قائمة من الكتب إلى الجهاز. إذا كان الملف موجودًا بالفعل على الجهاز، فيجب استبداله. يجب أن يطرح هذا الأسلوب :class:`FreeSpaceError` إذا لم تكن هناك مساحة حرة كافية على الجهاز. يجب أن يحتوي نص FreeSpaceError على كلمة \"card\" إذا لم يكن ``on_card`` None، وإلا يجب أن يحتوي على كلمة \"memory\"."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:7
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_books:7
msgid "A list of paths"
msgstr "قائمة المسارات"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:8
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_books:8
msgid ""
"A list of file names that the books should have once uploaded to the device."
" len(names) == len(files)"
msgstr "قائمة بأسماء الملفات التي يجب أن تكون للكتب بمجرد تحميلها إلى الجهاز. len(names) == len(files)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:10
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_books:10
msgid ""
"If not None, it is a list of :class:`Metadata` objects. The idea is to use "
"the metadata to determine where on the device to put the book. len(metadata)"
" == len(files). Apart from the regular cover (path to cover), there may also"
" be a thumbnail attribute, which should be used in preference. The thumbnail"
" attribute is of the form (width, height, cover_data as jpeg)."
msgstr "إذا لم تكن None، فهي قائمة بكائنات :class:`Metadata`. الفكرة هي استخدام البيانات الوصفية لتحديد مكان وضع الكتاب على الجهاز. len(metadata) == len(files). بصرف النظر عن الغلاف العادي (مسار الغلاف)، قد يكون هناك أيضًا سمة مصغرة، والتي يجب استخدامها كأولوية. سمة المصغرة تكون بالشكل (العرض، الارتفاع، بيانات الغلاف كـ jpeg)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:17
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_books:17
msgid ""
"A list of 3-element tuples. The list is meant to be passed to "
":meth:`add_books_to_metadata`."
msgstr "قائمة من 3-عناصر tuple. القائمة مخصصة لتمريرها إلى :meth:`add_books_to_metadata`."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.add_books_to_metadata:1
msgid ""
"Add locations to the booklists. This function must not communicate with the "
"device."
msgstr "أضف المواقع إلى قوائم الكتب. يجب ألا تتواصل هذه الدالة مع الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.add_books_to_metadata:4
msgid "Result of a call to L{upload_books}"
msgstr "نتيجة استدعاء L{upload_books}"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:5
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.add_books_to_metadata:5
msgid "List of :class:`Metadata` objects, same as for :meth:`upload_books`."
msgstr "قائمة بكائنات :class:`Metadata`، مثل :meth:`upload_books`."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:7
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:5
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.sync_booklists:3
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.add_books_to_metadata:7
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.remove_books_from_metadata:5
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.sync_booklists:3
msgid ""
"A tuple containing the result of calls to (:meth:`books(oncard=None)`, "
":meth:`books(oncard='carda')`, :meth`books(oncard='cardb')`)."
msgstr "زوج (tuple) يحتوي على نتيجة استدعاءات إلى (:meth:`books(oncard=None)`، :meth:`books(oncard='carda')`، :meth`books(oncard='cardb')`)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.delete_books:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.delete_books:1
msgid "Delete books at paths on device."
msgstr "حذف الكتب من المسارات الموجودة على الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.remove_books_from_metadata:1
msgid ""
"Remove books from the metadata list. This function must not communicate with"
" the device."
msgstr "إزالة الكتب من قائمة البيانات الوصفية. يجب ألا تتواصل هذه الدالة مع الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.remove_books_from_metadata:4
msgid "paths to books on the device."
msgstr "مسارات الكتب على الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.sync_booklists:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.sync_booklists:1
msgid "Update metadata on device."
msgstr "تحديث البيانات الوصفية على الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_file:1
msgid "Read the file at ``path`` on the device and write it to outfile."
msgstr "اقرأ الملف في ``path`` على الجهاز واكتبه إلى outfile."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_file:3
msgid "file object like ``sys.stdout`` or the result of an :func:`open` call."
msgstr "كائن ملف مثل ``sys.stdout`` أو نتيجة استدعاء :func:`open`."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.config_widget:1
msgid ""
"Should return a QWidget. The QWidget contains the settings for the device "
"interface"
msgstr "يجب أن تعيد QWidget. يحتوي QWidget على إعدادات واجهة الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.save_settings:1
msgid ""
"Should save settings to disk. Takes the widget created in "
":meth:`config_widget` and saves all settings to disk."
msgstr "يجب أن يحفظ الإعدادات على القرص. يأخذ الأداة التي تم إنشاؤها في :meth:`config_widget` ويحفظ جميع الإعدادات على القرص."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.settings:1
msgid ""
"Should return an opts object. The opts object should have at least one "
"attribute `format_map` which is an ordered list of formats for the device."
msgstr "يجب أن يعيد كائن خيارات. يجب أن يحتوي كائن الخيارات على سمة واحدة على الأقل `format_map` وهي قائمة مرتبة من التنسيقات للجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:1
msgid ""
"provide the driver the current set of plugboards and a function to select a "
"specific plugboard. This method is called immediately before add_books and "
"sync_booklists."
msgstr "تزويد المشغل بالمجموعة الحالية من لوحات التوصيل ودالة لتحديد لوحة توصيل معينة. يتم استدعاء هذا الأسلوب مباشرة قبل add_books و sync_booklists."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:5
msgid "pb_func is a callable with the following signature::"
msgstr "pb_func هو كائن قابل للاستدعاء بالتوقيع التالي::"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:6
msgid "def pb_func(device_name, format, plugboards)"
msgstr "def pb_func(اسم_الجهاز, تنسيق, لوحات_توصيل)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:8
msgid ""
"You give it the current device name (either the class name or "
"DEVICE_PLUGBOARD_NAME), the format you are interested in (a 'real' format or"
" 'device_db'), and the plugboards (you were given those by set_plugboards, "
"the same place you got this method)."
msgstr "تعطيه اسم الجهاز الحالي (إما اسم الفئة أو DEVICE_PLUGBOARD_NAME)، والتنسيق الذي تهتم به (تنسيق 'حقيقي' أو 'device_db')، ولوحات التوصيل (التي تم إعطاؤها لك بواسطة set_plugboards، نفس المكان الذي حصلت منه على هذا الأسلوب)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:13
msgid "None or a single plugboard instance."
msgstr "None أو مثيل لوحة توصيل واحدة."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_driveinfo_name:1
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.set_driveinfo_name:1
msgid ""
"Set the device name in the driveinfo file to 'name'. This setting will "
"persist until the file is re-created or the name is changed again."
msgstr "عيّن اسم الجهاز في ملف driveinfo إلى 'name'. سيستمر هذا الإعداد حتى يتم إعادة إنشاء الملف أو تغيير الاسم مرة أخرى."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_driveinfo_name:4
#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.set_driveinfo_name:4
msgid ""
"Non-disk devices should implement this method based on the location codes "
"returned by the get_device_information() method."
msgstr "يجب أن تنفذ الأجهزة غير القرصية هذا الأسلوب بناءً على رموز الموقع التي أعادها أسلوب get_device_information()."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.prepare_addable_books:1
msgid ""
"Given a list of paths, returns another list of paths. These paths point to "
"addable versions of the books."
msgstr "بالنظر إلى قائمة من المسارات، يعيد قائمة أخرى من المسارات. تشير هذه المسارات إلى إصدارات قابلة للإضافة من الكتب."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.prepare_addable_books:4
msgid ""
"If there is an error preparing a book, then instead of a path, the position "
"in the returned list for that book should be a three tuple: (original_path, "
"the exception instance, traceback)"
msgstr "إذا كان هناك خطأ في إعداد كتاب، فبدلاً من المسار، يجب أن يكون الموضع في القائمة المعادة لذلك الكتاب عبارة عن tuple ثلاثي: (original_path، مثيل الاستثناء، traceback)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.startup:1
msgid ""
"Called when calibre is starting the device. Do any initialization required. "
"Note that multiple instances of the class can be instantiated, and thus "
"__init__ can be called multiple times, but only one instance will have this "
"method called. This method is called on the device thread, not the GUI "
"thread."
msgstr "يتم استدعاؤها عند بدء calibre للجهاز. قم بأي تهيئة مطلوبة. لاحظ أنه يمكن إنشاء عدة مثيلات من الفئة، وبالتالي يمكن استدعاء __init__ عدة مرات، ولكن سيتم استدعاء هذا الأسلوب لمثيل واحد فقط. يتم استدعاء هذا الأسلوب على خيط الجهاز، وليس خيط واجهة المستخدم الرسومية."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.shutdown:1
msgid ""
"Called when calibre is shutting down, either for good or in preparation to "
"restart. Do any cleanup required. This method is called on the device "
"thread, not the GUI thread."
msgstr "يتم استدعاؤها عند إغلاق calibre، إما بشكل دائم أو استعدادًا لإعادة التشغيل. قم بأي تنظيف مطلوب. يتم استدعاء هذا الأسلوب على خيط الجهاز، وليس خيط واجهة المستخدم الرسومية."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_uid:1
msgid ""
"Must return a unique id for the currently connected device (this is called "
"immediately after a successful call to open()). You must implement this "
"method if you set ASK_TO_ALLOW_CONNECT = True"
msgstr "يجب أن يعيد معرفًا فريدًا للجهاز المتصل حاليًا (يتم استدعاء هذا مباشرة بعد استدعاء ناجح لـ open()). يجب عليك تنفيذ هذا الأسلوب إذا قمت بتعيين ASK_TO_ALLOW_CONNECT = True"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.ignore_connected_device:1
msgid ""
"Should ignore the device identified by uid (the result of a call to "
"get_device_uid()) in the future. You must implement this method if you set "
"ASK_TO_ALLOW_CONNECT = True. Note that this function is called immediately "
"after open(), so if open() caches some state, the driver should reset that "
"state."
msgstr "يجب أن يتجاهل الجهاز المحدد بواسطة uid (نتيجة استدعاء get_device_uid()) في المستقبل. يجب عليك تنفيذ هذا الأسلوب إذا قمت بتعيين ASK_TO_ALLOW_CONNECT = True. لاحظ أن هذه الدالة يتم استدعاؤها مباشرة بعد open()، لذا إذا قامت open() بتخزين بعض الحالات مؤقتًا، فيجب على المشغل إعادة تعيين تلك الحالة."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_user_blacklisted_devices:1
msgid ""
"Return map of device uid to friendly name for all devices that the user has "
"asked to be ignored."
msgstr "إرجاع خريطة من معرف الجهاز إلى الاسم الودي لجميع الأجهزة التي طلب المستخدم تجاهلها."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_user_blacklisted_devices:1
msgid "Set the list of device uids that should be ignored by this driver."
msgstr "عيّن قائمة معرفات الجهاز التي يجب تجاهلها بواسطة هذا المشغل."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.specialize_global_preferences:1
msgid ""
"Implement this method if your device wants to override a particular "
"preference. You must ensure that all call sites that want a preference that "
"can be overridden use device_prefs['something'] instead of "
"prefs['something']. Your method should call "
"device_prefs.set_overrides(pref=val, pref=val, ...). Currently used for: "
"metadata management (prefs['manage_device_metadata'])"
msgstr "نفّذ هذا الأسلوب إذا كان جهازك يريد تجاوز تفضيل معين. يجب عليك التأكد من أن جميع مواقع الاستدعاء التي تريد تفضيلًا يمكن تجاوزه تستخدم device_prefs['something'] بدلاً من prefs['something']. يجب أن يستدعي أسلوبك device_prefs.set_overrides(pref=val, pref=val, ...). يستخدم حاليًا لـ: إدارة البيانات الوصفية (prefs['manage_device_metadata'])"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_library_info:1
msgid ""
"Implement this method if you want information about the current calibre "
"library. This method is called at startup and when the calibre library "
"changes while connected."
msgstr "نفّذ هذا الأسلوب إذا كنت تريد معلومات حول مكتبة calibre الحالية. يتم استدعاء هذا الأسلوب عند بدء التشغيل وعند تغيير مكتبة calibre أثناء الاتصال."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_dynamically_controllable:1
msgid ""
"Called by the device manager when starting plugins. If this method returns a"
" string, then a) it supports the device manager's dynamic control interface,"
" and b) that name is to be used when talking to the plugin."
msgstr "يتم استدعاؤها بواسطة مدير الجهاز عند بدء تشغيل الإضافات. إذا أعاد هذا الأسلوب سلسلة، فإنه أ) يدعم واجهة التحكم الديناميكية لمدير الجهاز، وب) يجب استخدام هذا الاسم عند التحدث إلى الإضافة."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_option:5
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_dynamically_controllable:5
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_running:3
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_option:4
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.start_plugin:5
#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.stop_plugin:6
msgid ""
"This method can be called on the GUI thread. A driver that implements this "
"method must be thread safe."
msgstr "يمكن استدعاء هذا الأسلوب على خيط واجهة المستخدم الرسومية. يجب أن يكون المشغل الذي ينفذ هذا الأسلوب آمنًا للخيوط."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.start_plugin:1
msgid ""
"This method is called to start the plugin. The plugin should begin to accept"
" device connections however it does that. If the plugin is already accepting"
" connections, then do nothing."
msgstr "يتم استدعاء هذا الأسلوب لبدء تشغيل الإضافة. يجب أن تبدأ الإضافة في قبول اتصالات الجهاز بأي طريقة تفعلها. إذا كانت الإضافة تقبل الاتصالات بالفعل، فلا تفعل شيئًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.stop_plugin:1
msgid ""
"This method is called to stop the plugin. The plugin should no longer accept"
" connections, and should cleanup behind itself. It is likely that this "
"method should call shutdown. If the plugin is already not accepting "
"connections, then do nothing."
msgstr "يتم استدعاء هذا الأسلوب لإيقاف الإضافة. يجب ألا تقبل الإضافة الاتصالات بعد الآن، ويجب أن تقوم بالتنظيف خلفها. من المرجح أن يجب أن يستدعي هذا الأسلوب shutdown. إذا كانت الإضافة لا تقبل الاتصالات بالفعل، فلا تفعل شيئًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_option:1
msgid ""
"Return the value of the option indicated by opt_string. This method can be "
"called when the plugin is not started. Return None if the option does not "
"exist."
msgstr "إرجاع قيمة الخيار المشار إليه بواسطة opt_string. يمكن استدعاء هذا الأسلوب عندما لا تكون الإضافة قيد التشغيل. أعد None إذا لم يكن الخيار موجودًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_option:1
msgid ""
"Set the value of the option indicated by opt_string. This method can be "
"called when the plugin is not started."
msgstr "عيّن قيمة الخيار المشار إليه بواسطة opt_string. يمكن استدعاء هذا الأسلوب عندما لا تكون الإضافة قيد التشغيل."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_running:1
msgid "Return True if the plugin is started, otherwise false"
msgstr "أعد True إذا كانت الإضافة قيد التشغيل، وإلا False"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:1
msgid ""
"Called during book matching when a book on the device is matched with a book"
" in calibre's db. The method is responsible for synchronizing data from the "
"device to calibre's db (if needed)."
msgstr "يتم استدعاؤها أثناء مطابقة الكتاب عندما يتطابق كتاب على الجهاز مع كتاب في قاعدة بيانات calibre. الأسلوب مسؤول عن مزامنة البيانات من الجهاز إلى قاعدة بيانات calibre (إذا لزم الأمر)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:5
msgid ""
"The method must return a two-value tuple. The first value is a set of "
"calibre book ids changed if calibre's database was changed or None if the "
"database was not changed. If the first value is an empty set then the "
"metadata for the book on the device is updated with calibre's metadata and "
"given back to the device, but no GUI refresh of that book is done. This is "
"useful when the calibre data is correct but must be sent to the device."
msgstr "يجب أن يعيد الأسلوب tuple بقيمتين. القيمة الأولى هي مجموعة من معرفات كتب calibre التي تم تغييرها إذا تم تغيير قاعدة بيانات calibre أو None إذا لم يتم تغيير قاعدة البيانات. إذا كانت القيمة الأولى مجموعة فارغة، فسيتم تحديث البيانات الوصفية للكتاب على الجهاز ببيانات calibre الوصفية وإعادتها إلى الجهاز، ولكن لا يتم تحديث واجهة المستخدم الرسومية لذلك الكتاب. هذا مفيد عندما تكون بيانات calibre صحيحة ولكن يجب إرسالها إلى الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:13
msgid ""
"The second value is itself a 2-value tuple. The first value in the tuple "
"specifies whether a book format should be sent to the device. The intent is "
"to permit verifying that the book on the device is the same as the book in "
"calibre. This value must be None if no book is to be sent, otherwise return "
"the base file name on the device (a string like foobar.epub). Be sure to "
"include the extension in the name. The device subsystem will construct a "
"send_books job for all books with not- None returned values. Note: other "
"than to later retrieve the extension, the name is ignored in cases where the"
" device uses a template to generate the file name, which most do. The second"
" value in the returned tuple indicated whether the format is future-dated. "
"Return True if it is, otherwise return False. calibre will display a dialog "
"to the user listing all future dated books."
msgstr "القيمة الثانية هي نفسها tuple بقيمتين. القيمة الأولى في الـ tuple تحدد ما إذا كان يجب إرسال تنسيق كتاب إلى الجهاز. القصد هو السماح بالتحقق من أن الكتاب الموجود على الجهاز هو نفسه الكتاب في calibre. يجب أن تكون هذه القيمة None إذا لم يتم إرسال أي كتاب، وإلا أعد اسم الملف الأساسي على الجهاز (سلسلة مثل foobar.epub). تأكد من تضمين الامتداد في الاسم. سيقوم النظام الفرعي للجهاز بإنشاء مهمة send_books لجميع الكتب ذات القيم غير None التي تم إرجاعها. ملاحظة: بخلاف استعادة الامتداد لاحقًا، يتم تجاهل الاسم في الحالات التي يستخدم فيها الجهاز قالبًا لإنشاء اسم الملف، وهو ما تفعله معظم الأجهزة. القيمة الثانية في الـ tuple المعادة تشير إلى ما إذا كان التنسيق مؤرخًا في المستقبل. أعد True إذا كان كذلك، وإلا أعد False. سيعرض calibre مربع حوار للمستخدم يسرد جميع الكتب المؤرخة في المستقبل."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:27
msgid ""
"Extremely important: this method is called on the GUI thread. It must be "
"threadsafe with respect to the device manager's thread."
msgstr "مهم للغاية: يتم استدعاء هذا الأسلوب على خيط واجهة المستخدم الرسومية. يجب أن يكون آمنًا للخيوط فيما يتعلق بخيط مدير الجهاز."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:30
msgid ""
"book_id: the calibre id for the book in the database. book_metadata: the "
"Metadata object for the book coming from the device. first_call: True if "
"this is the first call during a sync, False otherwise"
msgstr "book_id: معرف calibre للكتاب في قاعدة البيانات. book_metadata: كائن Metadata للكتاب القادم من الجهاز. first_call: True إذا كان هذا هو الاستدعاء الأول أثناء المزامنة، False بخلاف ذلك"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:1
msgid "Bases: :py:class:`list`"
msgstr "الأساس::py:class:`list`"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:1
msgid "A list of books. Each Book object must have the fields"
msgstr "قائمة كتب. يجب أن يحتوي كل كائن كتاب على الحقول التالية"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:3
msgid "title"
msgstr "العنوان"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:4
msgid "authors"
msgstr "المؤلفون"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:5
msgid "size (file size of the book)"
msgstr "الحجم (حجم ملف الكتاب)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:6
msgid "datetime (a UTC time tuple)"
msgstr "datetime (زوج وقت UTC)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:7
msgid "path (path on the device to the book)"
msgstr "المسار (المسار على الجهاز إلى الكتاب)"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:8
msgid ""
"thumbnail (can be None) thumbnail is either a str/bytes object with the "
"image data or it should have an attribute image_path that stores an absolute"
" (platform native) path to the image"
msgstr "صورة مصغرة (يمكن أن تكون None) الصورة المصغرة هي إما كائن str/bytes مع بيانات الصورة أو يجب أن تحتوي على سمة image_path تخزن مسارًا مطلقًا (أصليًا للمنصة) للصورة"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:11
msgid "tags (a list of strings, can be empty)."
msgstr "العلامات (قائمة من السلاسل، يمكن أن تكون فارغة)."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.supports_collections:1
msgid "Return True if the device supports collections for this book list."
msgstr "أعد True إذا كان الجهاز يدعم المجموعات لقائمة الكتب هذه."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.add_book:1
msgid ""
"Add the book to the booklist. Intent is to maintain any device-internal "
"metadata. Return True if booklists must be sync'ed"
msgstr "أضف الكتاب إلى قائمة الكتب. القصد هو الحفاظ على أي بيانات وصفية داخلية للجهاز. أعد True إذا كان يجب مزامنة قوائم الكتب"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.remove_book:1
msgid ""
"Remove a book from the booklist. Correct any device metadata at the same "
"time"
msgstr "إزالة كتاب من قائمة الكتب. تصحيح أي بيانات وصفية للجهاز في نفس الوقت"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:1
msgid ""
"Return a dictionary of collections created from collection_attributes. Each "
"entry in the dictionary is of the form collection name:[list of books]"
msgstr "إرجاع قاموس المجموعات التي تم إنشاؤها من collection_attributes. كل إدخال في القاموس يكون بالشكل اسم المجموعة:[قائمة الكتب]"

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:5
msgid ""
"The list of books is sorted by book title, except for collections created "
"from series, in which case series_index is used."
msgstr "يتم فرز قائمة الكتب حسب عنوان الكتاب، باستثناء المجموعات التي تم إنشاؤها من السلسلة، وفي هذه الحالة يتم استخدام series_index."

#: ../../../__w/calibre/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:8
msgid "A list of attributes of the Book object"
msgstr "قائمة بسمات كائن الكتاب"

#: ../../../__w/calibre/calibre/manual/plugins.rst:110
msgid "USB Mass Storage based devices"
msgstr "الأجهزة المستندة إلى تخزين USB الشامل"

#: ../../../__w/calibre/calibre/manual/plugins.rst:112
msgid ""
"The base class for such devices is "
":class:`calibre.devices.usbms.driver.USBMS`. This class in turn inherits "
"some of its functionality from its bases, documented below. A typical basic "
"USBMS based driver looks like this:"
msgstr "الفئة الأساسية لمثل هذه الأجهزة هي :class:`calibre.devices.usbms.driver.USBMS`. هذه الفئة بدورها ترث بعض وظائفها من أسسها، الموثقة أدناه. يبدو المشغل الأساسي النموذجي المعتمد على USBMS كالتالي:"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device:1
msgid ""
"Bases: :py:class:`~calibre.devices.usbms.deviceconfig.DeviceConfig`, "
":py:class:`~calibre.devices.interface.DevicePlugin`"
msgstr "الأساس: :py:class:`~calibre.devices.usbms.deviceconfig.DeviceConfig`، :py:class:`~calibre.devices.interface.DevicePlugin`"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device:1
msgid ""
"This class provides logic common to all drivers for devices that export "
"themselves as USB Mass Storage devices. Provides implementations for "
"mounting/ejecting of USBMS devices on all platforms."
msgstr "توفر هذه الفئة منطقًا مشتركًا لجميع برامج التشغيل للأجهزة التي تعرض نفسها كأجهزة تخزين USB جماعية. توفر تطبيقات لـ تركيب/إخراج أجهزة USBMS على جميع الأنظمة الأساسية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.WINDOWS_MAIN_MEM:1
msgid ""
"String identifying the main memory of the device in the Windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr "سلسلة تحدد الذاكرة الرئيسية للجهاز في سلاسل معرف PnP في Windows. يمكن أن تكون None، أو سلسلة، أو قائمة سلاسل، أو تعبيرًا عاديًا مجمعًا"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.WINDOWS_CARD_A_MEM:1
msgid ""
"String identifying the first card of the device in the Windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr "سلسلة تحدد البطاقة الأولى للجهاز في سلاسل معرف PnP في Windows. يمكن أن تكون None، أو سلسلة، أو قائمة سلاسل، أو تعبيرًا عاديًا مجمعًا"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.WINDOWS_CARD_B_MEM:1
msgid ""
"String identifying the second card of the device in the Windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr "سلسلة تحدد البطاقة الثانية للجهاز في سلاسل معرف PnP في Windows. يمكن أن تكون None، أو سلسلة، أو قائمة سلاسل، أو تعبيرًا عاديًا مجمعًا"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.OSX_MAIN_MEM_VOL_PAT:1
msgid ""
"Used by the new driver detection to disambiguate main memory from storage "
"cards. Should be a regular expression that matches the main memory mount "
"point assigned by macOS"
msgstr "تستخدم بواسطة اكتشاف المشغل الجديد للتمييز بين الذاكرة الرئيسية وبطاقات التخزين. يجب أن تكون تعبيرًا عاديًا يطابق نقطة تحميل الذاكرة الرئيسية المعيّنة بواسطة macOS"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.MAX_PATH_LEN:1
msgid "The maximum length of paths created on the device"
msgstr "الحد الأقصى لطول المسارات التي تم إنشاؤها على الجهاز"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device.NEWS_IN_FOLDER:1
msgid "Put news in its own folder"
msgstr "ضع الأخبار في مجلدها الخاص"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.windows_sort_drives:1
msgid ""
"Called to disambiguate main memory and storage card for devices that do not "
"distinguish between them on the basis of `WINDOWS_CARD_NAME`. For example: "
"The EB600"
msgstr "يتم استدعاؤها للتمييز بين الذاكرة الرئيسية وبطاقة التخزين للأجهزة التي لا تميز بينهما على أساس `WINDOWS_CARD_NAME`. على سبيل المثال: EB600"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.sanitize_callback:1
msgid ""
"Callback to allow individual device drivers to override the path "
"sanitization used by :meth:`create_upload_path`."
msgstr "رد اتصال للسماح لبرامج تشغيل الأجهزة الفردية بتجاوز تطهير المسار المستخدم بواسطة :meth:`create_upload_path`."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.filename_callback:1
msgid ""
"Callback to allow drivers to change the default file name set by "
":meth:`create_upload_path`."
msgstr "رد اتصال للسماح للمشغلين بتغيير اسم الملف الافتراضي الذي تم تعيينه بواسطة :meth:`create_upload_path`."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.sanitize_path_components:1
msgid ""
"Perform any device specific sanitization on the path components for files to"
" be uploaded to the device"
msgstr "قم بإجراء أي تطهير خاص بالجهاز على مكونات المسار للملفات التي سيتم تحميلها إلى الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.get_annotations:1
msgid "Resolve path_map to annotation_map of files found on the device"
msgstr "حل path_map إلى annotation_map للملفات الموجودة على الجهاز"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.add_annotation_to_library:1
msgid "Add an annotation to the calibre library"
msgstr "أضف تعليقًا توضيحيًا إلى مكتبة calibre"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS:1
msgid ""
"Bases: :py:class:`~calibre.devices.usbms.cli.CLI`, "
":py:class:`~calibre.devices.usbms.device.Device`"
msgstr "الأساس: :py:class:`~calibre.devices.usbms.cli.CLI`، :py:class:`~calibre.devices.usbms.device.Device`"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS:1
msgid ""
"The base class for all USBMS devices. Implements the logic for "
"sending/getting/updating metadata/caching metadata/etc."
msgstr "الفئة الأساسية لجميع أجهزة USBMS. تنفذ منطق إرسال/استقبال/تحديث البيانات الوصفية/تخزين البيانات الوصفية مؤقتًا/إلخ."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:1
msgid "Upload book cover to the device. Default implementation does nothing."
msgstr "تحميل غلاف الكتاب إلى الجهاز. التنفيذ الافتراضي لا يفعل شيئًا."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:3
msgid "The full path to the folder where the associated book is located."
msgstr "المسار الكامل للمجلد حيث يوجد الكتاب المرتبط."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:4
msgid "The name of the book file without the extension."
msgstr "اسم ملف الكتاب بدون الامتداد."

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:5
msgid "metadata belonging to the book. Use metadata.thumbnail for cover"
msgstr "بيانات وصفية تخص الكتاب. استخدم metadata.thumbnail للغلاف"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:7
msgid "The full path to the e-book file"
msgstr "المسار الكامل لملف الكتاب الإلكتروني"

#: ../../../__w/calibre/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.normalize_path:1
msgid "Return path with platform native path separators"
msgstr "إرجاع المسار مع فواصل المسار الأصلية للمنصة"

#: ../../../__w/calibre/calibre/manual/plugins.rst:157
msgid "User interface actions"
msgstr "إجراءات واجهة المستخدم"

#: ../../../__w/calibre/calibre/manual/plugins.rst:159
msgid ""
"If you are adding your own plugin in a ZIP file, you should subclass both "
"InterfaceActionBase and InterfaceAction. The :meth:`load_actual_plugin` "
"method of your InterfaceActionBase subclass must return an instantiated "
"object of your InterfaceBase subclass."
msgstr "إذا كنت تضيف إضافتك الخاصة في ملف ZIP، فيجب عليك اشتقاق كل من InterfaceActionBase و InterfaceAction. يجب أن يعيد أسلوب :meth:`load_actual_plugin` لفئتك الفرعية InterfaceActionBase كائنًا مُنشأً من فئتك الفرعية InterfaceBase."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:1
msgid "Bases: :py:class:`~PyQt6.QtCore.QObject`"
msgstr "الأساس: :py:class:`~PyQt6.QtCore.QObject`"

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:1
msgid ""
"A plugin representing an \"action\" that can be taken in the graphical user "
"interface. All the items in the toolbar and context menus are implemented by"
" these plugins."
msgstr "إضافة تمثل \"إجراء\" يمكن اتخاذه في واجهة المستخدم الرسومية. جميع العناصر في شريط الأدوات وقوائم السياق يتم تنفيذها بواسطة هذه الإضافات."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:5
msgid ""
"Note that this class is the base class for these plugins, however, to "
"integrate the plugin with calibre's plugin system, you have to make a "
"wrapper class that references the actual plugin. See the "
":mod:`calibre.customize.builtins` module for examples."
msgstr "لاحظ أن هذه الفئة هي الفئة الأساسية لهذه الإضافات، ومع ذلك، لـ دمج الإضافة مع نظام إضافات calibre، يجب عليك إنشاء فئة تغليف تشير إلى الإضافة الفعلية. راجع الوحدة :mod:`calibre.customize.builtins` للحصول على أمثلة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:10
msgid ""
"If two :class:`InterfaceAction` objects have the same name, the one with "
"higher priority takes precedence."
msgstr "إذا كان لكائنين من :class:`InterfaceAction` نفس الاسم، فإن الكائن ذو الأولوية الأعلى له الأسبقية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:13
msgid ""
"Sub-classes should implement the :meth:`genesis`, :meth:`library_changed`, "
":meth:`location_selected`, :meth:`shutting_down`, "
":meth:`initialization_complete` and :meth:`tag_browser_context_action` "
"methods."
msgstr "يجب أن تنفذ الفئات الفرعية أساليب :meth:`genesis`، :meth:`library_changed`، :meth:`location_selected`، :meth:`shutting_down`، :meth:`initialization_complete` و :meth:`tag_browser_context_action`."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:17
msgid ""
"Once initialized, this plugin has access to the main calibre GUI via the "
":attr:`gui` member. You can access other plugins by name, for example::"
msgstr "بمجرد التهيئة، يمكن لهذه الإضافة الوصول إلى واجهة المستخدم الرسومية الرئيسية لـ calibre عبر العضو :attr:`gui`. يمكنك الوصول إلى الإضافات الأخرى بالاسم، على سبيل المثال::"

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:22
msgid ""
"To access the actual plugin, use the :attr:`interface_action_base_plugin` "
"attribute, this attribute only becomes available after the plugin has been "
"initialized. Useful if you want to use methods from the plugin class like "
"do_user_config()."
msgstr "للوصول إلى الإضافة الفعلية، استخدم السمة :attr:`interface_action_base_plugin`، تصبح هذه السمة متاحة فقط بعد تهيئة الإضافة. مفيدة إذا كنت ترغب في استخدام أساليب من فئة الإضافة مثل do_user_config()."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:27
msgid ""
"The QAction specified by :attr:`action_spec` is automatically create and "
"made available as ``self.qaction``."
msgstr "يتم إنشاء QAction المحدد بواسطة :attr:`action_spec` تلقائيًا وجعله متاحًا كـ ``self.qaction``."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.name:1
msgid ""
"The plugin name. If two plugins with the same name are present, the one with"
" higher priority takes precedence."
msgstr "اسم الإضافة. إذا كان هناك إضافتان بنفس الاسم، فإن الإضافة ذات الأولوية الأعلى لها الأسبقية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.priority:1
msgid ""
"The plugin priority. If two plugins with the same name are present, the one "
"with higher priority takes precedence."
msgstr "أولوية الإضافة. إذا كان هناك إضافتان بنفس الاسم، فإن الإضافة ذات الأولوية الأعلى لها الأسبقية."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.popup_type:1
msgid "The menu popup type for when this plugin is added to a toolbar"
msgstr "نوع القائمة المنبثقة عندما يتم إضافة هذه الإضافة إلى شريط الأدوات"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.auto_repeat:1
msgid ""
"Whether this action should be auto repeated when its shortcut key is held "
"down."
msgstr "ما إذا كان يجب تكرار هذا الإجراء تلقائيًا عند الضغط باستمرار على مفتاح الاختصار الخاص به."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.action_spec:1
msgid ""
"Of the form: (text, icon_path, tooltip, keyboard shortcut). icon, tooltip "
"and keyboard shortcut can be None. keyboard shortcut must be either a "
"string, None or tuple of shortcuts. If None, a keyboard shortcut "
"corresponding to the action is not registered. If you pass an empty tuple, "
"then the shortcut is registered with no default key binding."
msgstr "بالشكل: (نص، مسار_الأيقونة، تلميح_الأداة، اختصار_لوحة_المفاتيح). يمكن أن تكون الأيقونة، تلميح_الأداة واختصار لوحة المفاتيح None. يجب أن يكون اختصار لوحة المفاتيح إما سلسلة، أو None، أو tuple من الاختصارات. إذا كان None، فلن يتم تسجيل اختصار لوحة مفاتيح مقابل للإجراء. إذا مررت tuple فارغًا، فسيتم تسجيل الاختصار بدون ربط مفتاح افتراضي."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.action_shortcut_name:1
msgid ""
"If not None, used for the name displayed to the user when customizing the "
"keyboard shortcuts for the above action spec instead of action_spec[0]"
msgstr "إذا لم تكن None، تُستخدم للاسم المعروض للمستخدم عند تخصيص اختصارات لوحة المفاتيح لمواصفات الإجراء أعلاه بدلاً من action_spec[0]"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.action_add_menu:1
msgid "If True, a menu is automatically created and added to self.qaction"
msgstr "إذا كان True، يتم إنشاء قائمة تلقائيًا وإضافتها إلى self.qaction"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.action_menu_clone_qaction:1
msgid ""
"If True, a clone of self.qaction is added to the menu of self.qaction If you"
" want the text of this action to be different from that of self.qaction, set"
" this variable to the new text"
msgstr "إذا كان True، يتم إضافة نسخة من self.qaction إلى قائمة self.qaction. إذا كنت تريد أن يكون نص هذا الإجراء مختلفًا عن نص self.qaction، فعيّن هذا المتغير إلى النص الجديد"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.dont_add_to:1
msgid ""
"Set of locations to which this action must not be added. See "
":attr:`all_locations` for a list of possible locations"
msgstr "مجموعة من المواقع التي يجب ألا يتم إضافة هذا الإجراء إليها. راجع :attr:`all_locations` للحصول على قائمة بالمواقع المحتملة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.dont_remove_from:1
msgid ""
"Set of locations from which this action must not be removed. See "
":attr:`all_locations` for a list of possible locations"
msgstr "مجموعة من المواقع التي يجب ألا يتم إزالة هذا الإجراء منها. راجع :attr:`all_locations` للحصول على قائمة بالمواقع المحتملة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.action_type:1
msgid ""
"Type of action 'current' means acts on the current view 'global' means an "
"action that does not act on the current view, but rather on calibre as a "
"whole"
msgstr "نوع الإجراء 'current' يعني أنه يعمل على العرض الحالي 'global' يعني إجراء لا يعمل على العرض الحالي، بل على calibre ككل"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction.accepts_drops:1
msgid ""
"If True, then this InterfaceAction will have the opportunity to interact "
"with drag and drop events. See the methods, :meth:`accept_enter_event`, "
":meth`:accept_drag_move_event`, :meth:`drop_event` for details."
msgstr "إذا كان True، فستتاح لـ InterfaceAction هذه الفرصة للتفاعل مع أحداث السحب والإفلات. راجع الأساليب، :meth:`accept_enter_event`، :meth`:accept_drag_move_event`، :meth:`drop_event` للحصول على التفاصيل."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.accept_drag_move_event:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.accept_enter_event:1
msgid ""
"This method should return True iff this interface action is capable of "
"handling the drag event. Do not call accept/ignore on the event, that will "
"be taken care of by the calibre UI."
msgstr "يجب أن يعيد هذا الأسلوب True إذا وفقط إذا كانت هذه الإجراء الواجهة قادرًا على التعامل مع حدث السحب. لا تستدعِ accept/ignore على الحدث، سيتولى واجهة مستخدم calibre ذلك."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.drop_event:1
msgid ""
"This method should perform some useful action and return True iff this "
"interface action is capable of handling the drop event. Do not call "
"accept/ignore on the event, that will be taken care of by the calibre UI. "
"You should not perform blocking/long operations in this function. Instead "
"emit a signal or use QTimer.singleShot and return quickly. See the builtin "
"actions for examples."
msgstr "يجب أن يقوم هذا الأسلوب بإجراء بعض الإجراءات المفيدة وإرجاع True إذا وفقط إذا كانت هذه الإجراء الواجهة قادرًا على التعامل مع حدث الإفلات. لا تستدعِ accept/ignore على الحدث، سيتولى واجهة مستخدم calibre ذلك. يجب ألا تقوم بإجراء عمليات حظر/طويلة في هذه الدالة. بدلاً من ذلك أرسل إشارة أو استخدم QTimer.singleShot وعد بسرعة. راجع الإجراءات المدمجة للحصول على أمثلة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:1
msgid ""
"Convenience method to easily add actions to a QMenu. Returns the created "
"QAction. This action has one extra attribute calibre_shortcut_unique_name "
"which if not None refers to the unique name under which this action is "
"registered with the keyboard manager."
msgstr "أسلوب ملائم لإضافة الإجراءات بسهولة إلى QMenu. يعيد QAction الذي تم إنشاؤه. يحتوي هذا الإجراء على سمة إضافية واحدة calibre_shortcut_unique_name والتي إذا لم تكن None تشير إلى الاسم الفريد الذي يتم بموجبه تسجيل هذا الإجراء مع مدير لوحة المفاتيح."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:6
msgid "The QMenu the newly created action will be added to"
msgstr "قائمة QMenu التي سيتم إضافة الإجراء الذي تم إنشاؤه حديثًا إليها"

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:7
msgid ""
"A unique name for this action, this must be globally unique, so make it as "
"descriptive as possible. If in doubt, add an UUID to it."
msgstr "اسم فريد لهذا الإجراء، يجب أن يكون فريدًا عالميًا، لذا اجعله وصفيًا قدر الإمكان. إذا كنت في شك، أضف إليه UUID."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:10
msgid "The text of the action."
msgstr "نص الإجراء."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:11
msgid ""
"Either a QIcon or a file name. The file name is passed to the QIcon.ic() "
"builtin, so you do not need to pass the full path to the images folder."
msgstr "إما QIcon أو اسم ملف. يتم تمرير اسم الملف إلى دالة QIcon.ic() المدمجة، لذا لا تحتاج إلى تمرير المسار الكامل إلى مجلد الصور."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:14
msgid ""
"A string, a list of strings, None or False. If False, no keyboard shortcut "
"is registered for this action. If None, a keyboard shortcut with no default "
"keybinding is registered. String and list of strings register a shortcut "
"with default keybinding as specified."
msgstr "سلسلة، أو قائمة سلاسل، أو None، أو False. إذا كان False، فلن يتم تسجيل اختصار لوحة مفاتيح لهذا الإجراء. إذا كان None، يتم تسجيل اختصار لوحة مفاتيح بدون ربط مفتاح افتراضي. تسجل السلسلة وقائمة السلاسل اختصارًا بربط مفتاح افتراضي كما هو محدد."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:18
msgid "A description for this action. Used to set tooltips."
msgstr "وصف لهذا الإجراء. يستخدم لتعيين تلميحات الأدوات."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:20
msgid ""
"A callable which is connected to the triggered signal of the created action."
msgstr "كائن قابل للاستدعاء متصل بإشارة triggered للإجراء الذي تم إنشاؤه."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:22
msgid ""
"The text displayed to the user when customizing the keyboard shortcuts for "
"this action. By default it is set to the value of ``text``."
msgstr "النص المعروض للمستخدم عند تخصيص اختصارات لوحة المفاتيح لهذا الإجراء. افتراضيًا، يتم تعيينه إلى قيمة ``text``."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:25
msgid ""
"Shortcuts for actions that don't always appear, or are library dependent, "
"may disappear when other keyboard shortcuts are edited unless "
"```persist_shortcut``` is set True."
msgstr "قد تختفي اختصارات الإجراءات التي لا تظهر دائمًا، أو التي تعتمد على المكتبة، عند تعديل اختصارات لوحة المفاتيح الأخرى ما لم يتم تعيين ```persist_shortcut``` على True."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:12
msgid ""
"A dictionary of the form ``{name : file_contents}``. Any names that were not"
" found in the ZIP file will not be present in the dictionary."
msgstr "قاموس بالشكل ``{الاسم : محتويات_الملف}``. أي أسماء لم يتم العثور عليها في ملف ZIP لن تكون موجودة في القاموس."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.genesis:1
msgid ""
"Setup this plugin. Only called once during initialization. self.gui is "
"available. The action specified by :attr:`action_spec` is available as "
"``self.qaction``."
msgstr "إعداد هذه الإضافة. يتم استدعاؤها مرة واحدة فقط أثناء التهيئة. self.gui متاح. الإجراء المحدد بواسطة :attr:`action_spec` متاح كـ ``self.qaction``."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.location_selected:1
msgid ""
"Called whenever the book list being displayed in calibre changes. Currently "
"values for loc are: ``library, main, card and cardb``."
msgstr "يتم استدعاؤها كلما تغيرت قائمة الكتب المعروضة في calibre. حاليًا القيم لـ loc هي: ``library, main, card و cardb``."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.location_selected:4
msgid ""
"This method should enable/disable this action and its sub actions as "
"appropriate for the location."
msgstr "يجب أن يقوم هذا الأسلوب بتمكين/تعطيل هذا الإجراء وإجراءاته الفرعية حسب ما هو مناسب للموقع."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_about_to_change:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_changed:1
msgid "Called whenever the current library is changed."
msgstr "يتم استدعاؤها كلما تغيرت المكتبة الحالية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_about_to_change:3
msgid "The LibraryDatabase corresponding to the previous library."
msgstr "قاعدة بيانات المكتبة المطابقة للمكتبة السابقة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_about_to_change:4
msgid "The LibraryDatabase corresponding to the new library."
msgstr "قاعدة بيانات المكتبة المطابقة للمكتبة الجديدة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_changed:3
msgid "The LibraryDatabase corresponding to the current library."
msgstr "قاعدة بيانات المكتبة المطابقة للمكتبة الحالية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.gui_layout_complete:1
msgid ""
"Called once per action when the layout of the main GUI is completed. If your"
" action needs to make changes to the layout, they should be done here, "
"rather than in :meth:`initialization_complete`."
msgstr "يتم استدعاؤها مرة واحدة لكل إجراء عند اكتمال تخطيط واجهة المستخدم الرسومية الرئيسية. إذا كان الإجراء الخاص بك يحتاج إلى إجراء تغييرات على التخطيط، فيجب أن يتم ذلك هنا، بدلاً من :meth:`initialization_complete`."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.initialization_complete:1
msgid ""
"Called once per action when the initialization of the main GUI is completed."
msgstr "يتم استدعاؤها مرة واحدة لكل إجراء عند اكتمال تهيئة واجهة المستخدم الرسومية الرئيسية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.tag_browser_context_action:1
msgid ""
"Called when displaying the context menu in the Tag browser. ``index`` is the"
" QModelIndex that points to the Tag browser item that was right clicked. "
"Test it for validity with index.valid() and get the underlying TagTreeItem "
"object with index.data(Qt.ItemDataRole.UserRole). Any action objects yielded"
" by this method will be added to the context menu."
msgstr "يتم استدعاؤها عند عرض قائمة السياق في متصفح العلامات. ``index`` هو QModelIndex الذي يشير إلى عنصر متصفح العلامات الذي تم النقر عليه بزر الماوس الأيمن. اختبر صلاحيته باستخدام index.valid() واحصل على كائن TagTreeItem الأساسي باستخدام index.data(Qt.ItemDataRole.UserRole). سيتم إضافة أي كائنات إجراء يتم إنشاؤها بواسطة هذا الأسلوب إلى قائمة السياق."

#: ../../../__w/calibre/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.shutting_down:1
msgid ""
"Called once per plugin when the main GUI is in the process of shutting down."
" Release any used resources, but try not to block the shutdown for long "
"periods of time."
msgstr "يتم استدعاؤها مرة واحدة لكل إضافة عندما تكون واجهة المستخدم الرسومية الرئيسية في طور الإغلاق. حرر أي موارد مستخدمة، ولكن حاول ألا تعيق عملية الإغلاق لفترات طويلة من الزمن."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.InterfaceActionBase.load_actual_plugin:1
msgid "This method must return the actual interface action plugin object."
msgstr "يجب أن يعيد هذا الأسلوب كائن إضافة إجراء الواجهة الفعلي."

#: ../../../__w/calibre/calibre/manual/plugins.rst:175
msgid "Preferences plugins"
msgstr "إضافات التفضيلات"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin:1
msgid "A plugin representing a widget displayed in the Preferences dialog."
msgstr "إضافة تمثل أداة عرض في مربع حوار التفضيلات."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin:3
msgid ""
"This plugin has only one important method :meth:`create_widget`. The various"
" fields of the plugin control how it is categorized in the UI."
msgstr "تحتوي هذه الإضافة على أسلوب واحد مهم فقط :meth:`create_widget`. تتحكم الحقول المختلفة للإضافة في كيفية تصنيفها في واجهة المستخدم."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.config_widget:1
msgid ""
"Import path to module that contains a class named ConfigWidget which "
"implements the ConfigWidgetInterface. Used by :meth:`create_widget`."
msgstr "مسار الاستيراد إلى الوحدة التي تحتوي على فئة تسمى ConfigWidget والتي تنفذ ConfigWidgetInterface. تستخدم بواسطة :meth:`create_widget`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.category_order:1
msgid ""
"Where in the list of categories the :attr:`category` of this plugin should "
"be."
msgstr "مكان :attr:`category` لهذه الإضافة في قائمة الفئات."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.name_order:1
msgid ""
"Where in the list of names in a category, the :attr:`gui_name` of this "
"plugin should be"
msgstr "مكان :attr:`gui_name` لهذه الإضافة في قائمة الأسماء في فئة ما"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.category:1
msgid "The category this plugin should be in"
msgstr "الفئة التي يجب أن تنتمي إليها هذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.gui_category:1
msgid "The category name displayed to the user for this plugin"
msgstr "اسم الفئة المعروض للمستخدم لهذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.gui_name:1
msgid "The name displayed to the user for this plugin"
msgstr "الاسم المعروض للمستخدم لهذه الإضافة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.icon:1
msgid "The icon for this plugin, should be an absolute path"
msgstr "أيقونة هذه الإضافة، يجب أن تكون مسارًا مطلقًا"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin.description:1
msgid "The description used for tooltips and the like"
msgstr "الوصف المستخدم لتلميحات الأدوات وما شابه"

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.create_widget:1
msgid ""
"Create and return the actual Qt widget used for setting this group of "
"preferences. The widget must implement the "
":class:`calibre.gui2.preferences.ConfigWidgetInterface`."
msgstr "إنشاء وإرجاع أداة Qt الفعلية المستخدمة لتعيين هذه المجموعة من التفضيلات. يجب أن تنفذ الأداة :class:`calibre.gui2.preferences.ConfigWidgetInterface`."

#: ../../../__w/calibre/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.create_widget:5
msgid ""
"The default implementation uses :attr:`config_widget` to instantiate the "
"widget."
msgstr "التنفيذ الافتراضي يستخدم :attr:`config_widget` لإنشاء الأداة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface:1
msgid ""
"This class defines the interface that all widgets displayed in the "
"Preferences dialog must implement. See :class:`ConfigWidgetBase` for a base "
"class that implements this interface and defines various convenience methods"
" as well."
msgstr "تحدد هذه الفئة الواجهة التي يجب أن تنفذها جميع الأدوات المعروضة في مربع حوار التفضيلات. راجع :class:`ConfigWidgetBase` للحصول على فئة أساسية تنفذ هذه الواجهة وتحدد أساليب ملائمة مختلفة أيضًا."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetBase.changed_signal:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetInterface.changed_signal:1
msgid ""
"This signal must be emitted whenever the user changes a value in this widget"
msgstr "يجب أن يتم إطلاق هذه الإشارة كلما قام المستخدم بتغيير قيمة في هذه الأداة"

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetBase.supports_restoring_to_defaults:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetInterface.supports_restoring_to_defaults:1
msgid "Set to True iff the :meth:`restore_to_defaults` method is implemented."
msgstr "عيّن إلى True إذا وفقط إذا تم تنفيذ الأسلوب :meth:`restore_to_defaults`."

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetInterface.restore_defaults_desc:1
msgid "The tooltip for the \"Restore defaults\" button"
msgstr "تلميح الأداة لزر \"استعادة الافتراضيات\""

#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetBase.restart_critical:1
#: ../../../__w/calibre/calibre/manual/docstring of
#: calibre.gui2.preferences.ConfigWidgetInterface.restart_critical:1
msgid ""
"If True the Preferences dialog will not allow the user to set any more "
"preferences. Only has effect if :meth:`commit` returns True."
msgstr "إذا كان True، فإن مربع حوار التفضيلات لن يسمح للمستخدم بتعيين أي تفضيلات أخرى. لا يكون له تأثير إلا إذا أعاد :meth:`commit` قيمة True."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.genesis:1
msgid ""
"Called once before the widget is displayed, should perform any necessary "
"setup."
msgstr "يتم استدعاؤها مرة واحدة قبل عرض الأداة، ويجب أن تقوم بأي إعدادات ضرورية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.genesis:4
msgid "The main calibre graphical user interface"
msgstr "واجهة المستخدم الرسومية الرئيسية لـ calibre"

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.initialize:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.initialize:1
msgid ""
"Should set all config values to their initial values (the values stored in "
"the config files). A \"return\" statement is optional. Return False if the "
"dialog is not to be shown."
msgstr "يجب تعيين جميع قيم التكوين إلى قيمها الأولية (القيم المخزنة في ملفات التكوين). عبارة \"return\" اختيارية. أعد False إذا كان مربع الحوار لا يجب عرضه."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.restore_defaults:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.restore_defaults:1
msgid "Should set all config values to their defaults."
msgstr "يجب تعيين جميع قيم التكوين إلى قيمها الافتراضية."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.commit:1
#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.commit:1
msgid ""
"Save any changed settings. Return True if the changes require a restart, "
"False otherwise. Raise an :class:`AbortCommit` exception to indicate that an"
" error occurred. You are responsible for giving the user feedback about what"
" the error is and how to correct it."
msgstr "احفظ أي إعدادات تم تغييرها. أعد True إذا كانت التغييرات تتطلب إعادة تشغيل، وإلا False. اطرح استثناء :class:`AbortCommit` للإشارة إلى حدوث خطأ. أنت مسؤول عن تقديم ملاحظات للمستخدم حول ماهية الخطأ وكيفية تصحيحه."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.refresh_gui:1
msgid ""
"Called once after this widget is committed. Responsible for causing the gui "
"to reread any changed settings. Note that by default the GUI re-initializes "
"various elements anyway, so most widgets won't need to use this method."
msgstr "يتم استدعاؤها مرة واحدة بعد تثبيت هذه الأداة. مسؤولة عن جعل واجهة المستخدم الرسومية تعيد قراءة أي إعدادات تم تغييرها. لاحظ أنه افتراضيًا، تقوم واجهة المستخدم الرسومية بإعادة تهيئة عناصر مختلفة على أي حال، لذا لن تحتاج معظم الأدوات إلى استخدام هذا الأسلوب."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.initial_tab_changed:1
msgid ""
"Called if the initially displayed tab is changed before the widget is shown,"
" but after it is initialized."
msgstr "يتم استدعاؤها إذا تم تغيير علامة التبويب المعروضة في البداية قبل عرض الأداة، ولكن بعد تهيئتها."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:1
msgid ""
"Base class that contains code to easily add standard config widgets like "
"checkboxes, combo boxes, text fields and so on. See the :meth:`register` "
"method."
msgstr "فئة أساسية تحتوي على كود لإضافة أدوات تكوين قياسية بسهولة مثل مربعات الاختيار، ومربعات التحرير والسرد، وحقول النص وما إلى ذلك. راجع الأسلوب :meth:`register`."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:5
msgid ""
"This class automatically handles change notification, resetting to default, "
"translation between gui objects and config objects, etc. for registered "
"settings."
msgstr "تتعامل هذه الفئة تلقائيًا مع إشعارات التغيير، وإعادة التعيين إلى الافتراضي، والترجمة بين كائنات واجهة المستخدم الرسومية وكائنات التكوين، وما إلى ذلك، للإعدادات المسجلة."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:9
msgid ""
"If your config widget inherits from this class but includes setting that are"
" not registered, you should override the :class:`ConfigWidgetInterface` "
"methods and call the base class methods inside the overrides."
msgstr "إذا كانت أداة التكوين الخاصة بك ترث من هذه الفئة ولكنها تتضمن إعدادات غير مسجلة، فيجب عليك تجاوز أساليب :class:`ConfigWidgetInterface` واستدعاء أساليب الفئة الأساسية داخل التجاوزات."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:1
msgid "Register a setting."
msgstr "تسجيل إعداد."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:3
msgid "The setting name"
msgstr "اسم الإعداد"

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:4
msgid "The config object that reads/writes the setting"
msgstr "كائن التكوين الذي يقرأ/يكتب الإعداد"

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:5
msgid ""
"The name of the GUI object that presents an interface to change the setting."
" By default it is assumed to be ``'opt_' + name``."
msgstr "اسم كائن واجهة المستخدم الرسومية الذي يقدم واجهة لتغيير الإعداد. افتراضيًا، يُفترض أن يكون ``'opt_' + name``."

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:8
msgid ""
"If this setting is a multiple choice (combobox) based setting, the list of "
"choices. The list is a list of two element tuples of the form: ``[(gui name,"
" value), ...]``"
msgstr "إذا كان هذا الإعداد يعتمد على خيارات متعددة (مربع تحرير وسرد)، فقائمة الخيارات. القائمة هي قائمة من tupleين من عنصرين بالشكل: ``[(اسم الواجهة الرسومية، القيمة)، ...]``"

#: ../../../__w/calibre/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:11
msgid ""
"The class responsible for managing this setting. The default class handles "
"almost all cases, so this param is rarely used."
msgstr "الفئة المسؤولة عن إدارة هذا الإعداد. تتعامل الفئة الافتراضية مع جميع الحالات تقريبًا، لذا نادرًا ما يتم استخدام هذا المعامل."
