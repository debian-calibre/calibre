# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Armin Geller <armingeller@t-online.de>, 2015
# Ettore Atalan <atalanttore@googlemail.com>, 2014
# 3Stadt <matthieu@3-stadt.de>, 2017
# Sebastian Keller <Haggard@gmx.de>, 2015
# Simon_Schuette <simonschuette@arcor.de>, 2015-2016
# RiseT, 2016-2017
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-09 08:54+0530\n"
"PO-Revision-Date: 2018-02-09 03:25+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: German (http://www.transifex.com/calibre/calibre/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:4
msgid "The calibre template language"
msgstr "Die Calibre-Vorlagensprache"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:6
msgid ""
"The calibre template language is used in various places. It is used to "
"control the folder structure and file name when saving files from the "
"calibre library to the disk or e-book reader. It is also used to define "
"\"virtual\" columns that contain data from other columns and so on."
msgstr "Die Calibre-Vorlagensprache wird an verschiedenen Stellen verwendet. Sie dient zur Verwaltung von Ordnerstrukturen und Dateinamen beim Speichern von Dateien aus der Calibre-Bibliothek auf eine Festplatte oder eBook-Reader. Sie wird unter anderem auch verwendet um \"virtuelle\" Spalten zu definieren, die Daten von anderen Spalten enthalten."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:9
msgid ""
"The basic template language is very simple, but has very powerful advanced "
"features. The basic idea is that a template consists of text and names in "
"curly brackets that are then replaced by the corresponding metadata from the"
" book being processed. So, for example, the default template used for saving"
" books to device in calibre is::"
msgstr "Die grundlegende Vorlagensprache ist sehr einfach, besitzt aber sehr vielseitige Funktionen. Die grundlegende Idee dahinter ist, dass eine Vorlage aus Text und Namen in geschweiften Klammern besteht, die beim Verarbeiten durch die entsprechenden Metadaten aus dem Buch ersetzt werden. So ist beispielsweise die in Calibre verwendete Standardvorlage zur Speicherung von Büchern auf Geräten::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:13
#: ../../home/kovid/work/calibre/manual/template_lang.rst:21
msgid "For the book \"The Foundation\" by \"Isaac Asimov\" it will become::"
msgstr "Für das Buch \"The Foundation\" von \"Isaac Asimov\" wird das zu::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:17
msgid ""
"The slashes are text, which is put into the template where it appears. For "
"example, if your template is::"
msgstr "Die Querstriche sind Text, die in die Vorlage eingefügt ist, wo dieser auftauchen soll. Ein Beispiel, wenn Ihre Vorlage so aussieht::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:25
msgid ""
"You can use all the various metadata fields available in calibre in a "
"template, including any custom columns you have created yourself. To find "
"out the template name for a column simply hover your mouse over the column "
"header. Names for custom fields (columns you have created yourself) always "
"have a # as the first character. For series type custom fields, there is "
"always an additional field named ``#seriesname_index`` that becomes the "
"series index for that series. So if you have a custom series field named "
"``#myseries``, there will also be a field named ``#myseries_index``."
msgstr "Sie können alle in Calibre zur Verfügung stehende Metadatenfelder in einer Vorlage verwenden. Dazu gehören ebenso selbst erstellte benutzerdefinierte Spalten. Um den Vorlagennamen für eine Spalte herauszufinden, bewegt man einfach den Mauszeiger über den Kopf der Spalte. Namen von benutzerdefinierten Feldern (selbst angelegte Spalten) erkennt man an dem vorangestellten # als erstes Zeichen. Für benutzerdefinierte Felder vom Typ Serie gibt es immer ein zusätzliches Feld, dass ``#seriesname_index`` heißt und den Serienindex der Serie darstellt. Wenn Sie beispielsweise ein benutzerdefiniertes Serienfeld mit dem Namen ``#myseries`` haben, gibt es auch das Feld ``#myseries_index``."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:27
msgid "In addition to the column based fields, you also can use::"
msgstr "Zusätzlich zu den Feldern, die auf Spalten basieren können Sie auch Folgendes verwenden::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:32
msgid ""
"If a particular book does not have a particular piece of metadata, the field"
" in the template is automatically removed for that book. Consider, for "
"example::"
msgstr "Wenn ein bestimmtes Buch eine bestimmte Art von Metadaten nicht besitzt, wird die entsprechende Vorlage automatisch aus dem Buch entfernt. Hier ein Beispiel::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:36
msgid "If a book has a series, the template will produce::"
msgstr "Wenn das Buch eine Serie hat, ergibt die Vorlage::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:40
msgid "and if a book does not have a series::"
msgstr "und wenn das Buch keine Serie hat::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:44
msgid ""
"(calibre automatically removes multiple slashes and leading or trailing "
"spaces)."
msgstr "(Calibre entfernt mehrere Querstriche sowie Leerzeichen vor oder nach einem Wort automatisch)."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:47
msgid "Advanced formatting"
msgstr "Erweiterte Formatierung"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:49
msgid ""
"You can do more than just simple substitution with the templates. You can "
"also conditionally include text and control how the substituted data is "
"formatted."
msgstr "Mit den Vorlagen können Sie mehr machen als nur etwas zu ersetzen. Sie können auch Text unter bestimmten Bedingungen hinzufügen und festlegen, wie die eingefügten Daten formatiert werden."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:51
msgid ""
"First, conditionally including text. There are cases where you might want to"
" have text appear in the output only if a field is not empty. A common case "
"is ``series`` and ``series_index``, where you want either nothing or the two"
" values with a hyphen between them. calibre handles this case using a "
"special field syntax."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:53
msgid "For example, assume you want to use the template::"
msgstr "Nehmen wir beispielsweise an, Sie wollen dieses Template verwenden::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:57
msgid ""
"If the book has no series, the answer will be ``- - title``. Many people "
"would rather the result be simply ``title``, without the hyphens. To do "
"this, use the extended syntax ``{field:|prefix_text|suffix_text}``. When you"
" use this syntax, if field has the value SERIES then the result will be "
"``prefix_textSERIESsuffix_text``. If field has no value, then the result "
"will be the empty string (nothing); the prefix and suffix are ignored. The "
"prefix and suffix can contain blanks. **Do not use subtemplates (`{ ... }`) "
"or functions (see below) as the prefix or the suffix.**"
msgstr "Falls das Buch keiner Serie angehört, wird die Antwort ``- - Titel`` sein. Viele Benutzer würden als Ergebnis einfach ``Titel`` bevorzugen, also ohne Bindestriche. Benutzen Sie hierfür die erweiterte Syntax ``{field:|prefix_text|suffix_text}``. Bei Verwendung dieser Syntax ist das Ergebnis ``prefix_textSERIESsuffix_text``, falls das Feld den Wert SERIES besitzt. Wenn das Feld keinen Wert beinhaltet, wird das Ergebnis die leere Zeichenkette sein (nichts); Präfix und Suffix werden ignoriert. Präfix und Suffix können Leerzeichen enthalten. **Verwenden Sie keine Untervorlagen (`{ … }`) oder Funktionen (siehe unten) als Präfix oder Suffix.** "

#: ../../home/kovid/work/calibre/manual/template_lang.rst:59
msgid ""
"Using this syntax, we can solve the above series problem with the template::"
msgstr "Durch diese Syntax können wir das oben genannte Problem mit der Serie umgehen. Dafür verwenden wir dieses Template:: "

#: ../../home/kovid/work/calibre/manual/template_lang.rst:63
msgid ""
"The hyphens will be included only if the book has a series index, which it "
"will have only if it has a series."
msgstr "Die Bindestriche werden nur dann enthalten sein, wenn das Buch einen Serienindex hat. Diesen hat es nur dann, wenn es eine Serie hat."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:65
msgid ""
"Notes: you must include the : character if you want to use a prefix or a "
"suffix. You must either use no \\| characters or both of them; using one, as"
" in ``{field:| - }``, is not allowed. It is OK not to provide any text for "
"one side or the other, such as in ``{series:|| - }``. Using ``{title:||}`` "
"is the same as using ``{title}``."
msgstr "Hinweis: Sie müssen das Zeichen : einfügen, wenn Sie ein Präfix oder Suffix verwenden wollen. Außerdem müssen Sie entweder keines der Zeichen \\| verwenden oder beide; Wenn Sie nur eines verwenden, wie in ``{field:| - }``, ist das unzulässig. Es ist möglich für eine der beiden Seiten keinen Text anzugeben, wie in ``{series:|| - }``. Wenn Sie ``{title:||}`` verwenden, ist das als ob Sie ``{title}`` verwenden würden."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:67
msgid ""
"Second: formatting. Suppose you wanted to ensure that the series_index is "
"always formatted as three digits with leading zeros. This would do the "
"trick::"
msgstr "Formatierung: Angenommen Sie wollen sicherstellen, dass series_index immer als drei Ziffern formatiert wird, die mit Nullen beginnen. Dafür verwenden Sie::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:71
msgid "If instead of leading zeros you want leading spaces, use::"
msgstr "Falls Sie anstatt führender Nullen führende Leerzeichen wollen, verwenden Sie::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:75
msgid "For trailing zeros, use::"
msgstr "Für anhängende Nullen verwenden Sie::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:79
msgid ""
"If you use series indices with sub values (e.g., 1.1), you might want to "
"ensure that the decimal points line up. For example, you might want the "
"indices 1 and 2.5 to appear as 01.00 and 02.50 so that they will sort "
"correctly. To do this, use::"
msgstr "Wenn Sie mit einem Serienindex arbeiten, der Unterteilungen enthält (z.B. 1.1) werden Sie wahrscheinlich sicherstellen wollen, dass die Dezimaltrennzeichen auf einer Linie sind. Also soll zum Beispiel 1 und 2.5 als 01.00 und 02.50 angezeigt werden, damit sie richtig sortiert sind. Dafür verwenden Sie::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:83
msgid "If you want only the first two letters of the data, use::"
msgstr "Wenn Sie nur die ersten beiden Buchstaben der Daten haben wollen, verwenden Sie::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:87
msgid ""
"The calibre template language comes from Python and for more details on the "
"syntax of these advanced formatting operations, look at the `Python "
"documentation <https://docs.python.org/2/library/string.html#format-string-"
"syntax>`_."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:90
msgid "Advanced features"
msgstr "Erweiterte Funktionen"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:93
msgid "Using templates in custom columns"
msgstr "Vorlagen in benutzerdefinierten Spalten verwenden"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:95
msgid ""
"There are sometimes cases where you want to display metadata that calibre "
"does not normally display, or to display data in a way different from how "
"calibre normally does. For example, you might want to display the ISBN, a "
"field that calibre does not display. You can use custom columns for this by "
"creating a column with the type 'column built from other columns' (hereafter"
" called composite columns), and entering a template. Result: calibre will "
"display a column showing the result of evaluating that template. To display "
"the ISBN, create the column and enter ``{identifiers:select(isbn)}`` into "
"the template box. To display a column containing the values of two series "
"custom columns separated by a comma, use ``{#series1:||,}{#series2}``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:97
msgid "Composite columns can use any template option, including formatting."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:99
msgid ""
"You cannot change the data contained in a composite column. If you edit a "
"composite column by double-clicking on any item, you will open the template "
"for editing, not the underlying data. Editing the template on the GUI is a "
"quick way of testing and changing composite columns."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:102
msgid "Using functions in templates - single-function mode"
msgstr "Verwenden von Funktionen in Vorlagen - Einzelfunktionsmodus"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:104
msgid ""
"Suppose you want to display the value of a field in upper case, when that "
"field is normally in title case. You can do this (and many more things) "
"using the functions available for templates. For example, to display the "
"title in upper case, use ``{title:uppercase()}``. To display it in title "
"case, use ``{title:titlecase()}``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:106
msgid ""
"Function references appear in the format part, going after the ``:`` and "
"before the first ``|`` or the closing ``}``. If you have both a format and a"
" function reference, the function comes after another ``:``. Functions must "
"always end with ``()``. Some functions take extra values (arguments), and "
"these go inside the ``()``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:108
msgid ""
"Functions are always applied before format specifications. See further down "
"for an example of using both a format and a function, where this order is "
"demonstrated."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:110
msgid ""
"The syntax for using functions is ``{field:function(arguments)}``, or "
"``{field:function(arguments)|prefix|suffix}``. Arguments are separated by "
"commas. Commas inside arguments must be preceeded by a backslash ( '\\\\' )."
" The last (or only) argument cannot contain a closing parenthesis ( ')' ). "
"Functions return the value of the field used in the template, suitably "
"modified."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:112
msgid ""
"Important: If you have programming experience, please note that the syntax "
"in this mode (single function) is not what you might expect. Strings are not"
" quoted. Spaces are significant. All arguments must be constants; there is "
"no sub-evaluation. **Do not use subtemplates (`{ ... }`) as function "
"arguments.** Instead, use :ref:`template program mode <template_mode>` and "
":ref:`general program mode <general_mode>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:114
msgid ""
"Many functions use regular expressions. In all cases, regular expression "
"matching is case-insensitive."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:116
msgid ""
"The functions available are listed below. Note that the definitive "
"documentation for functions is available in the section :ref:`Function "
"classification <template_functions_reference>`:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:118
msgid "``lowercase()``   -- return value of the field in lower case."
msgstr "``lowercase()`` -- gibt den Wert des Feldes in Kleinbuchstaben zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:119
msgid "``uppercase()``   -- return the value of the field in upper case."
msgstr "``uppercase()`` -- gibt den Wert des Feldes in Großbuchstaben zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:120
msgid "``titlecase()``   -- return the value of the field in title case."
msgstr "``titlecase()`` -- gibt den Wert des Feldes in Überschriftenschreibweise zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:121
msgid ""
"``capitalize()``  -- return the value with the first letter upper case and "
"the rest lower case."
msgstr "``capitalize()`` -- gibt den Wert mit einem großen Anfangsbuchstaben und den Rest in Kleinbuchstaben zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:122
msgid ""
"``contains(pattern, text if match, text if not match)`` -- checks if field "
"contains matches for the regular expression `pattern`. Returns `text if "
"match` if matches are found, otherwise it returns `text if no match`."
msgstr "``contains(Muster, Text_bei_Übereinstimmung, Text_bei_keiner_Übereinstimmung)`` -- überprüft, ob das Feld Übereinstimmungen mit dem regulären Ausdruck `Muster` enthält. Gibt `Text_bei_Übereinstimmung` zurück, falls Übereinstimmungen gefunden wurden, andernfalls wird `Text_bei_keiner_Übereinstimmung` zurückgegeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:123
msgid ""
"``count(separator)`` -- interprets the value as a list of items separated by"
" `separator`, returning the number of items in the list. Most lists use a "
"comma as the separator, but authors uses an ampersand. Examples: "
"`{tags:count(,)}`, `{authors:count(&)}`"
msgstr "``count(Trennzeichen)`` -- interpretiert den Wert als eine durch `Trennzeichen` voneinander getrennte Liste von Elementen und gibt die Anzahl der Elemente in der Liste zurück. Die meisten Listen verwenden ein Komma als Trennzeichen, aber \"Autoren\" verwendet ein Et-Zeichen (\"&\"). Beispiele: {tags:count(,)}, {authors:count(&)}"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:124
msgid ""
"``format_number(template)`` -- interprets the field as a number and format "
"that number using a Python formatting template such as \"{0:5.2f}\" or "
"\"{0:,d}\" or \"${0:5,.2f}\". The field_name part of the template must be a "
"0 (zero) (the \"{0:\" in the above examples). You can leave off the leading "
"\"{0:\" and trailing \"}\" if the template contains only a format. See the "
"template language and Python documentation for more examples. Returns the "
"empty string if formatting fails."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:125
msgid ""
"``human_readable()`` -- expects the value to be a number and returns a "
"string representing that number in KB, MB, GB, etc."
msgstr "``human_readable()`` -- erwartet als Wert eine Zahl und gibt eine Zeichenkette zurück, die diese Zahl in KB, MB, GB etc. darstellt."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:126
msgid ""
"``ifempty(text)`` -- if the field is not empty, return the value of the "
"field. Otherwise return `text`."
msgstr "``ifempty(Text)`` -- falls das Feld nicht leer ist, wird der Wert des Feldes zurückgegeben, andernfalls `Text`."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:127
msgid ""
"``in_list(separator, pattern, found_val, ..., not_found_val)`` -- interpret "
"the field as a list of items separated by `separator`, evaluating the "
"`pattern` against each value in the list. If the `pattern` matches a value, "
"return `found_val`, otherwise return `not_found_val`. The `pattern` and "
"`found_value` can be repeated as many times as desired, permitting returning"
" different values depending on the search. The patterns are checked in "
"order. The first match is returned."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:128
msgid ""
"``language_codes(lang_strings)`` -- return the language codes for the "
"strings passed in `lang_strings`. The strings must be in the language of the"
" current locale. `Lang_strings` is a comma-separated list."
msgstr "``language_codes(Sprachzeichenketten)`` -- gibt die Sprachcodes für die in `Sprachzeichenketten` übergebenen Zeichenketten zurück. Die Zeichenketten müssen der Sprache des aktuellen Gebietsschemas entsprechen. `Sprachzeichenketten` ist eine kommagetrennte Liste."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:129
msgid ""
"``language_strings(lang_codes, localize)`` -- return the strings for the "
"language codes passed in `lang_codes`. If `localize` is zero, return the "
"strings in English. If localize is not zero, return the strings in the "
"language of the current locale. `Lang_codes` is a comma-separated list."
msgstr "``language_strings(Sprachcodes, lokalisieren)`` -- gibt die Zeichenketten für die in `Sprachcodes` übergebenen Sprachcodes zurück. Falls `lokalisieren` gleich null ist, werden die Zeichenketten in Englisch zurückgegeben. Falls `lokalisieren` ungleich null ist, werden die Zeichenketten in der  Sprache das aktuellen Gebietsschemas zurückgegeben. `Sprachcodes` ist eine kommagetrennte Liste."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:130
msgid ""
"``list_item(index, separator)`` -- interpret the field as a list of items "
"separated by `separator`, returning the `index`th item. The first item is "
"number zero. The last item can be returned using `list_item(-1,separator)`. "
"If the item is not in the list, then the empty value is returned. The "
"separator has the same meaning as in the `count` function."
msgstr "``list_item(Index, Trennzeichen)`` -- interpretiert das Feld als eine durch `Trennzeichen` voneinander getrennte Liste von Elementen und gibt das `index`-te Element zurück. Das erste Element besitzt die Indexnummer null. Das letzte Element kann durch \"list_item(-1,`Trennzeichen`)\" zurückgegeben werden. Falls sich das Element nicht in der Liste befindet, wird ein leerer Wert zurückgegeben. Das `Trennzeichen` hat die gleiche Bedeutung wie in der Funktion \"count\"."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:131
msgid ""
"``lookup(pattern, field, pattern, field, ..., else_field)`` -- like switch, "
"except the arguments are field (metadata) names, not text. The value of the "
"appropriate field will be fetched and used. Note that because composite "
"columns are fields, you can use this function in one composite field to use "
"the value of some other composite field. This is extremely useful when "
"constructing variable save paths (more later)."
msgstr "``lookup(Muster, Feld, Muster, Feld, …, sonst_Feld)`` -- wie die Funktion \"switch\", außer, dass die Argumente Feldnamen (Metadaten) sind, und kein Text. Der Wert des entsprechenden Feldes wird abgerufen und verwendet.  Beachten Sie, dass - da zusammengesetzte Spalten Felder sind - Sie diese Funktion in einem zusammengesetzten Feld verwenden können, um den Wert eines anderen zusammengesetzen Feldes zu verwenden. Dies ist äußerst hilfreich bei der Konstruktion von variablen Speicherpfaden (später mehr)."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:132
msgid ""
"``re(pattern, replacement)`` -- return the field after applying the regular "
"expression. All instances of `pattern` are replaced with `replacement`. As "
"in all of calibre, these are Python-compatible regular expressions."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:133
msgid ""
"``select(key)`` -- interpret the field as a comma-separated list of items, "
"with the items being of the form \"id:value\". Find the pair with the id "
"equal to key, and return the corresponding value. This function is "
"particularly useful for extracting a value such as an isbn from the set of "
"identifiers for a book."
msgstr "``select(Schlüssel)`` -- interpretiert das Feld als eine kommagetrennte Liste von Elementen, wobei die Elemente die Form \"ID:Wert\" besitzen. Findet das Paar, bei dem die ID gleich dem `Schlüssel` ist, und gibt den entsprechenden Wert zurück. Diese Funktion ist besonders hilfreich zum Extrahieren eines Wertes, wie z. B. eine ISBN-Nummer von der Reihe der Kennungen für ein Buch."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:134
msgid ""
"``shorten(left chars, middle text, right chars)`` -- Return a shortened "
"version of the field, consisting of `left chars` characters from the "
"beginning of the field, followed by `middle text`, followed by `right chars`"
" characters from the end of the string. `Left chars` and `right chars` must "
"be integers. For example, assume the title of the book is `Ancient English "
"Laws in the Times of Ivanhoe`, and you want it to fit in a space of at most "
"15 characters. If you use ``{title:shorten(9,-,5)}``, the result will be "
"`Ancient E-nhoe`. If the field's length is less than ``left chars`` + "
"``right chars`` + the length of ``middle text``, then the field will be used"
" intact. For example, the title `The Dome` would not be changed."
msgstr "``shorten(Zeichen_links, Text_Mitte, Zeichen_rechts)`` -- gibt eine gekürzte Version des Feldes zurück, bestehend aus einer Anzahl von `Zeichen_links` Zeichen vom Beginn des Feldes, gefolgt von `Text_Mitte`, gefolgt von einer Anzahl von `Zeichen_rechts` Zeichen vom Ende der Zeichenkette. `Zeichen_links` und `Zeichen_rechts` müssen ganze Zahlen sein. Nehmen wir beispielsweise an, der Titel des Buches lautet \"Ancient English Laws in the Times of Ivanhoe\" und Sie möchten, dass er in eine Zeichenkette von maximal 15 Zeichen passt. Falls Sie ``{title:shorten(9,-,5)}`` verwenden, wird das Ergebnis \"Ancient E-nhoe\" sein. Falls die Feldlänge weniger als `Zeichen_links` + `Zeichen_rechts` + Länge von `Text_Mitte` ist, wird das Feld unverändert verwendet. Beispielsweise würde der Titel \"The Dome\" nicht verändert."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:135
msgid ""
"``str_in_list(separator, string, found_val, ..., not_found_val)`` -- "
"interpret the field as a list of items separated by `separator`, comparing "
"the `string` against each value in the list. If the `string` matches a value"
" (ignoring case), return `found_val`, otherwise return `not_found_val`. If "
"the string contains separators, then it is also treated as a list and each "
"value is checked. The `string` and `found_value` can be repeated as many "
"times as desired, permitting returning different values depending on the "
"search. The strings are checked in order. The first match is returned."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:136
msgid ""
"``subitems(start_index, end_index)`` -- This function is used to break apart"
" lists of tag-like hierarchical items such as genres. It interprets the "
"field as a comma-separated list of tag-like items, where each item is a "
"period-separated list. Returns a new list made by first finding all the "
"period-separated tag-like items, then for each such item extracting the "
"components from `start_index` to `end_index`, then combining the results "
"back together. The first component in a period-separated list has an index "
"of zero. If an index is negative, then it counts from the end of the list. "
"As a special case, an end_index of zero is assumed to be the length of the "
"list. Examples::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:146
msgid ""
"``sublist(start_index, end_index, separator)`` -- interpret the field as a "
"list of items separated by `separator`, returning a new list made from the "
"items from `start_index` to `end_index`. The first item is number zero. If "
"an index is negative, then it counts from the end of the list. As a special "
"case, an end_index of zero is assumed to be the length of the list. Examples"
" assuming that the tags column (which is comma-separated) contains \"A, B "
",C\"::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:152
msgid ""
"``swap_around_comma()`` -- given a field with a value of the form ``B, A``, "
"return ``A B``. This is most useful for converting names in LN, FN format to"
" FN LN. If there is no comma, the function returns val unchanged."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:153
msgid ""
"``switch(pattern, value, pattern, value, ..., else_value)`` -- for each "
"``pattern, value`` pair, checks if the field matches the regular expression "
"``pattern`` and if so, returns that ``value``. If no ``pattern`` matches, "
"then ``else_value`` is returned. You can have as many ``pattern, value`` "
"pairs as you want."
msgstr "``switch(Muster, Wert, Muster, Wert, …, sonst_Wert)`` -- für jedes `Muster, Wert`-Paar wird überprüft, ob das Feld dem regulären Ausdruck `Muster` entspricht, und falls ja, wird der entsprechende `Wert` zurückgegeben. Falls kein `Muster` übereinstimmt, wird `sonst_Wert` zurückgegeben. Sie können so viele `Muster, Wert`-Paare angeben, wie Sie möchten."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:154
msgid ""
"``test(text if not empty, text if empty)`` -- return `text if not empty` if "
"the field is not empty, otherwise return `text if empty`."
msgstr "``test(Text_falls_nicht_leer, Text_falls_leer)`` -- gibt `Text_falls_nicht_leer` zurück, falls das Feld nicht leer ist, andernfalls `Text_falls_leer`."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:155
msgid ""
"``transliterate()`` -- Returns a string in a latin alphabet formed by "
"approximating the sound of the words in the source field. For example, if "
"the source field is ``Фёдор Миха́йлович Достоевский`` the function returns "
"``Fiodor Mikhailovich Dostoievskii``.'"
msgstr "``transliterate()`` -- gibt eine Zeichenkette in einem lateinischen Alphabet zurück, gebildet durch Annähern des Klangs der Wörter im Quellfeld. Falls beispielsweise das Quellfeld ``Фёдор Миха́йлович Достоевский`` enthält, gibt die Funktion ``Fiodor Mikhailovich Dostoievskii`` zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:157
msgid ""
"Now, what about using functions and formatting in the same field. Suppose "
"you have an integer custom column called ``#myint`` that you want to see "
"with leading zeros, as in ``003``. To do this, you would use a format of "
"``0>3s``. However, by default, if a number (integer or float) equals zero "
"then the field produces the empty value, so zero values will produce "
"nothing, not ``000``. If you really want to see ``000`` values, then you use"
" both the format string and the ``ifempty`` function to change the empty "
"value back to a zero. The field reference would be::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:161
msgid ""
"Note that you can use the prefix and suffix as well. If you want the number "
"to appear as ``[003]`` or ``[000]``, then use the field::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:168
msgid "Using functions in templates - template program mode"
msgstr "Verwenden von Funktionen in Vorlagen - Vorlageprogrammmodus"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:170
msgid ""
"The template language program mode differs from single-function mode in that"
" it permits you to write template expressions that refer to other metadata "
"fields, modify values, and do arithmetic. It is a reasonably complete "
"programming language."
msgstr "Der Programmmodus der Vorlagensprache unterscheidet sich vom Einzelfunktionsmodus dadurch, dass er Ihnen das Schreiben von Vorlageausdrücken erlaubt, die sich auf andere Metadatenfelder beziehen, Werte verändern und Rechenoperationen durchführen. Er ist eine ziemlich vollständige Programmiersprache."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:172
msgid ""
"You can use the functions documented above in template program mode. See "
"below for details."
msgstr "Sie können die die oben im Vorlageprogrammmodus dokumentierten Funktionen verwenden. Siehe unten für Details."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:174
msgid ""
"Beginning with an example, assume that you want your template to show the "
"series for a book if it has one, otherwise show the value of a custom field "
"#genre. You cannot do this in the basic language because you cannot make "
"reference to another metadata field within a template expression. In program"
" mode, you can. The following expression works::"
msgstr "Um mit einem Beispiel zu beginnen, nehmen wir an, dass Sie Ihre Vorlage die Serie für ein Buch -- falls es eine hat -- anzeigen lassen wollen, andernfalls soll der Wert eines benutzerdefinierten Felds #Genre angezeigt werden. Sie können dies in der einfachen Sprache nicht tun, da Sie innerhalb eines Vorlageausdrucks kein anderes Metadatenfeld referenzieren können. Im Programmmodus können Sie dies tun. Der folgende Ausdruck funktioniert::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:178
msgid "The example shows several things:"
msgstr "Das Beispiel zeigt mehrere Dinge:"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:180
msgid ""
"program mode is used if the expression begins with ``:'`` and ends with "
"``'``. Anything else is assumed to be single-function."
msgstr "Der Programmmodus wird verwendet, falls der Ausdruck mit ``:'`` beginnt und mit ``'`` endet. Andernfalls wird von einer Einzelfunktion ausgegangen."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:181
msgid ""
"the variable ``$`` stands for the field the expression is operating upon, "
"``#series`` in this case."
msgstr "Die Variable ``$`` steht für das Feld, auf das der Ausdruck angewendet wird, in diesem Fall ``#series``."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:182
msgid ""
"functions must be given all their arguments. There is no default value. For "
"example, the standard built-in functions must be given an additional initial"
" parameter indicating the source field, which is a significant difference "
"from single-function mode."
msgstr "Funktionen müssen sämtliche ihrer Variablen übergeben werden. Es existiert kein Standardwert. Beispielsweise muss den standardmäßig integrierten Funktionen ein zusätzlicher, das Quellfeld bezeichnender Ausgangsparameter übergeben werden, der einen wesentlichen Unterschied zum Einzelfunktionsmodus darstellt."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:183
msgid "white space is ignored and can be used anywhere within the expression."
msgstr "Leerzeichen werden ignoriert und können überall innerhalb des Ausdrucks verwendet werden."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:184
msgid ""
"constant strings are enclosed in matching quotes, either ``'`` or ``\"``."
msgstr "Zeichenkettenkonstanten werden in sich entsprechenden Anführungszeichen eingeschlossen, entweder ``'`` oder ``\"``."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:186
msgid ""
"The language is similar to ``functional`` languages in that it is built "
"almost entirely from functions. A statement is a function. An expression is "
"a function. Constants and identifiers can be thought of as functions "
"returning the value indicated by the constant or stored in the identifier."
msgstr "Die Sprache ähnelt ``funktionalen`` Sprachen in der Form, dass sie nahezu vollständig aus Funktionen aufgebaut ist. Eine Anweisung ist eine Funktion. Ein Ausdruck ist eine Funktion. Konstanten und Bezeichner können als Funktionen gesehen werden, die den Wert zurückgeben, der durch die Konstante bezeichnet oder im Bezeichner gespeichert ist."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:188
msgid "The syntax of the language is shown by the following grammar::"
msgstr "Der Syntax der Sprache wird durch die folgende Grammatik gezeigt::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:198
msgid "Comments are lines with a '#' character at the beginning of the line."
msgstr "Kommentare sind Zeilen mit einem '#'-Zeichen am Zeilenanfang."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:200
msgid ""
"An ``expression`` always has a value, either the value of the constant, the "
"value contained in the identifier, or the value returned by a function. The "
"value of a ``statement`` is the value of the last expression in the sequence"
" of statements. As such, the value of the program (statement)::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:204
msgid "is 3."
msgstr "ist 3."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:206
msgid ""
"Another example of a complex but rather silly program might help make things"
" clearer::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:217
msgid "This program does the following:"
msgstr "Dieses Programm macht Folgendes:"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:219
msgid ""
"specify that the field being looked at is series_index. This sets the value "
"of the variable ``$``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:220
msgid ""
"calls the ``substr`` function, which takes 3 parameters ``(str, start, "
"end)``. It returns a string formed by extracting the start through end "
"characters from string, zero-based (the first character is character zero). "
"In this case the string will be computed by the ``strcat`` function, the "
"start is 0, and the end is 6. In this case it will return the first 6 "
"characters of the string returned by ``strcat``, which must be evaluated "
"before substr can return."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:221
msgid ""
"calls the ``strcat`` (string concatenation) function. Strcat accepts 1 or "
"more arguments, and returns a string formed by concatenating all the values."
" In this case there are three arguments. The first parameter is the value in"
" ``$``, which here is the value of ``series_index``. The second paremeter is"
" the constant string ``'->'``. The third parameter is the value returned by "
"the ``cmp`` function, which must be fully evaluated before ``strcat`` can "
"return."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:222
msgid ""
"The ``cmp`` function takes 5 arguments ``(x, y, lt, eq, gt)``. It compares x"
" and y and returns the third argument ``lt`` if x < y, the fourth argument "
"``eq`` if x == y, and the fifth argument ``gt`` if x > y. As with all "
"functions, all of the parameters can be statements. In this case the first "
"parameter (the value for ``x``) is the result of dividing the series_index "
"by 2. The second parameter ``y`` is the constant ``1``. The third parameter "
"``lt`` is a statement (more later). The fourth parameter ``eq`` is the "
"constant string ``'eq'``. The fifth parameter is the constant string "
"``'gt'``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:223
msgid ""
"The third parameter (the one for ``lt``) is a statement, or a sequence of "
"expressions. Remember that a statement (a sequence of semicolon-separated "
"expressions) is also an expression, returning the value of the last "
"expression in the list. In this case, the program first assigns the value "
"``1`` to a local variable ``c``, then returns a substring made by extracting"
" the c'th character to the end. Since c always contains the constant ``1``, "
"the substring will return the second through end'th characters, or "
"``'t123'``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:224
msgid ""
"Once the statement providing the value to the third parameter is executed, "
"``cmp`` can return a value. At that point, ``strcat` can return a value, "
"then ``substr`` can return a value. The program then terminates."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:226
msgid "For various values of series_index, the program returns:"
msgstr "Für verschiedene Werte von series_index gibt das Programm Folgendes aus:"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:228
msgid "series_index == undefined, result = ``prefix ->t123 suffix``"
msgstr "series_index == undefined, result = ``prefix ->t123 suffix``"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:229
msgid "series_index == 0.5, result = ``prefix 0.50-> suffix``"
msgstr "series_index == 0.5, result = ``prefix 0.50-> suffix``"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:230
msgid "series_index == 1, result = ``prefix 1->t12 suffix``"
msgstr "series_index == 1, result = ``prefix 1->t12 suffix``"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:231
msgid "series_index == 2, result = ``prefix 2->eq suffix``"
msgstr "series_index == 2, result = ``prefix 2->eq suffix``"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:232
msgid "series_index == 3, result = ``prefix 3->gt suffix``"
msgstr "series_index == 3, result = ``prefix 3->gt suffix``"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:234
msgid ""
"**All the functions listed under single-function mode can be used in program"
" mode**. To do so, you must supply the value that the function is to act "
"upon as the first parameter, in addition to the parameters documented above."
" For example, in program mode the parameters of the `test` function are "
"``test(x, text_if_not_empty, text_if_empty)``. The `x` parameter, which is "
"the value to be tested, will almost always be a variable or a function call,"
" often `field()`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:236
msgid ""
"The following functions are available in addition to those described in "
"single-function mode. Remember from the example above that the single-"
"function mode functions require an additional first parameter specifying the"
" field to operate on. With the exception of the ``id`` parameter of assign, "
"all parameters can be statements (sequences of expressions). Note that the "
"definitive documentation for functions is available in the section "
":ref:`Function classification <template_functions_reference>`:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:238
msgid ""
"``and(value, value, ...)`` -- returns the string \"1\" if all values are not"
" empty, otherwise returns the empty string. This function works well with "
"test or first_non_empty. You can have as many values as you want."
msgstr "``and(Wert, Wert, …)`` -- gibt die Zeichenkette \"1\" zurück, falls alle `Werte` nicht leer sind, andernfalls wird eine leere Zeichenkette zurückgegeben. Diese Funktion arbeitet gut mit den Funktionen \"test\" oder \"first_non_empty\" zusammen. Sie können so viele Werte wie gewünscht angeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:239
msgid ""
"``add(x, y)`` -- returns x + y. Throws an exception if either x or y are not"
" numbers."
msgstr "``add(x, y)`` -- Gibt `x` + `y` zurück. Löst einen Ausnahmefehler aus, falls `x` und/oder `y` keine Zahl ist."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:240
msgid ""
"``assign(id, val)`` -- assigns val to id, then returns val. id must be an "
"identifier, not an expression"
msgstr "``assign(ID, Wert)`` -- weist `Wert` der `ID` zu und gibt dann `Wert` zurück. `ID` muss ein Bezeichner sein, kein Ausdruck."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:241
msgid ""
"``approximate_formats()`` -- return a comma-separated list of formats that "
"at one point were associated with the book. There is no guarantee that the "
"list is correct, although it probably is. This function can be called in "
"template program mode using the template ``{:'approximate_formats()'}``. "
"Note that format names are always uppercase, as in EPUB."
msgstr "``approximate_formats()`` -- gibt eine kommagetrennte Liste von Formaten zurück, die zu einem bestimmten Zeitpunkt zu dem Buch gehörten. Es existiert keine Garantie, dass diese Liste korrekt ist, wahrscheinlich ist sie es allerdings. Diese Funktion kann im Vorlageprogrammmodus unter Verwendung der Vorlage ``{program:'approximate_formats()'}`` aufgerufen werden. Beachten Sie, dass Formatnamen immer aus Großbuchstaben bestehen, wie z. B. in \"EPUB\"."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:242
msgid ""
"``author_links(val_separator, pair_separator)`` -- returns a string "
"containing a list of authors and that author's link values in the form "
"``author1 val_separator author1link pair_separator author2 val_separator "
"author2link`` etc. An author is separated from its link value by the "
"``val_separator`` string with no added spaces. ``author:linkvalue`` pairs "
"are separated by the ``pair_separator`` string argument with no added "
"spaces. It is up to you to choose separator strings that do not occur in "
"author names or links. An author is included even if the author link is "
"empty."
msgstr "``author_links(Wertetrennzeichen, Paartrennzeichen)`` -- gibt eine Zeichenkette zurück, die eine Liste von Autoren und den Verweiswerten der entsprechenden Autoren enthält, und zwar in der Form ``Autor1 `Wertetrennzeichen` Autor1Verweis `Paartrennzeichen` Autor2 `Wertetrennzeichen` Autor2Verweis …``. Ein Autor wird von dessen Verweiswert durch die `Wertetrennzeichen`-Zeichenkette ohne zusätzlichen Leerzeichen getrennt. ``Autor:Verweiswert``-Paare werden durch die `Paartrennzeichen`-Zeichenkette ohne zusätzlichen Leerzeichen getrennt. Es liegt an Ihnen, Trennzeichen-Zeichenketten auszuwählen, die weder in Autorennamen, noch in Verweisen vorkommen. Ein Autor ist auch dann enthalten, falls der Autorenverweis leer ist."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:243
msgid ""
"``author_sorts(val_separator)`` -- returns a string containing a list of "
"author's sort values for the authors of the book. The sort is the one in the"
" author metadata (different from the author_sort in books). The returned "
"list has the form author sort 1 ``val_separator`` author sort 2 etc. The "
"author sort values in this list are in the same order as the authors of the "
"book. If you want spaces around ``val_separator`` then include them in the "
"separator string"
msgstr "``author_sorts(Wertetrennzeichen)`` -- gibt eine Zeichenkette zurück, die eine Liste von Autorensortierungswerten für die Autoren des Buchs enthält. Die Sortierung ist jene in den Autormetadaten (unterscheidet sich von der Autorensortierung in Büchern). Die zurückgegebene Liste besitzt die Form ``Autorensortierung1 `Wertetrennzeichen` Autorensortierung2 …`` Die Autorensortierungswerte in dieser Liste besitzen die gleiche Reihenfolge wie die Autoren des Buches. Falls Sie Leerzeichen um das `Wertetrennzeichen` herum wollen, so schließen Sie diese in die Trennzeichen-Zeichenkette mit ein."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:244
msgid ""
"``booksize()`` -- returns the value of the calibre 'size' field. Returns '' "
"if there are no formats."
msgstr "``booksize()`` -- gibt den Wert von Calibres Größenfeld zurück. Gibt '' zurück, falls keine Formate vorhanden sind."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:245
msgid ""
"``cmp(x, y, lt, eq, gt)`` -- compares x and y after converting both to "
"numbers. Returns ``lt`` if x < y. Returns ``eq`` if x == y. Otherwise "
"returns ``gt``."
msgstr "``cmp(x, y, kleiner_als, gleich, größer_als)`` -- vergleicht `x` und `y` nach deren Konvertierung in Zahlenwerte. Gibt `kleiner_als` zurück, wenn `x` < `y`. Gibt `gleich` zurück, wenn `x` == `y`. Andernfalls wird `größer_als` zurückgegeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:246
msgid ""
"``current_library_name()`` -- return the last name on the path to the "
"current calibre library. This function can be called in template program "
"mode using the template ``{:'current_library_name()'}``."
msgstr "``current_library_name()`` -- gibt den letzten Namen im Pfad zur aktuellen Calibre-Bibliothek zurück. Diese Funktion kann im Vorlageprogrammmodus durch Verwendung der Vorlage ``{:'current_library_name()'}`` aufgerufen werden."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:247
msgid ""
"``current_library_path()`` -- return the path to the current calibre "
"library. This function can be called in template program mode using the "
"template ``{:'current_library_path()'}``."
msgstr "``current_library_path()`` -- gibt den Pfad zur aktuellen Calibe-Bibliothek zurück. Diese Funktion kann im Vorlageprogrammmodus durch Verwendung der Vorlage ``{:'current_library_path()'}`` aufgerufen werden."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:248
msgid ""
"``days_between(date1, date2)`` -- return the number of days between "
"``date1`` and ``date2``. The number is positive if ``date1`` is greater than"
" ``date2``, otherwise negative. If either ``date1`` or ``date2`` are not "
"dates, the function returns the empty string."
msgstr "``days_between(Datum1, Datum2)`` -- gibt die Anzahl der Tage zwischen `Datum1` und `Datum2` zurück. Die Zahl ist positiv, falls `Datum1` größer als `Datum2` ist, andernfalls negativ. Falls `Datum1` und/oder `Datum2` keine Kalenderdaten sind, wird eine leere Zeichenkette zurückgegeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:249
msgid ""
"``divide(x, y)`` -- returns x / y. Throws an exception if either x or y are "
"not numbers."
msgstr "``divide(x, y)`` -- Gibt `x` / `y` zurück. Löst einen Ausnahmefehler aus, falls `x` und/oder `y` keine Zahl ist."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:250
msgid ""
"``eval(string)`` -- evaluates the string as a program, passing the local "
"variables (those ``assign`` ed to). This permits using the template "
"processor to construct complex results from local variables. Because the `{`"
" and `}` characters are special, you must use `[[` for the `{` character and"
" `]]` for the '}' character; they are converted automatically. Note also "
"that prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in "
"the argument to this function when using template program mode."
msgstr "``eval(Zeichenkette)`` - wertet die `Zeichenkette` als ein Programm aus und gibt die lokalen Variablen (jene, die mittels der Funktion ``assign`` zugewiesen wurden) weiter. Dies erlaubt die Verwendung des Vorlagenprozessors zum Erstellen komplexer Ergebnisse aus lokalen Variablen. Da die \"{\"- und \"}\"-Zeichen Spezialfälle sind, müssen Sie \"[[\" für \"{\" und \"]]\" für \"}\" verwenden; diese werden automatisch umgewandelt. Beachten Sie, dass Präfixe und Suffixe (der Syntax `|prefix|suffix`) nicht innerhalb des Arguments dieser Funktion verwendet werden können, wenn der Vorlageprogrammmodus benutzt wird."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:251
msgid "``field(name)`` -- returns the metadata field named by ``name``."
msgstr "``field(Name)`` -- gibt das durch `Name` bezeichnete Metadatenfeld zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:252
msgid ""
"``first_matching_cmp(val, cmp1, result1, cmp2, r2, ..., else_result)`` -- "
"compares ``val < cmpN`` in sequence, returning resultN for the first "
"comparison that succeeds. Returns else_result if no comparison succeeds. "
"Example::"
msgstr "``first_matching_cmp(Wert, Vergleichswert1, Ergebnis1, Vergleichswert2, Ergebnis2, …, sonst_Ergebnis)`` -- vergleicht nacheinander `Wert` < `VergleichswertN` und gibt für den ersten erfolgreichen Vergleich `ErgebnisN` zurück. Falls kein Vergleich erfolgreich ist, wird `sonst_Ergebnis` zurückgegeben. Beispiel::"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:257
msgid ""
"returns \"large\". The same example with a first value of 16 returns "
"\"giant\"."
msgstr "gibt \"groß\" zurück. Dasselbe Beispiel mit einem ersten Wert von 16 gibt \"riesig\" zurück."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:259
msgid ""
"``first_non_empty(value, value, ...)`` -- returns the first value that is "
"not empty. If all values are empty, then the empty value is returned. You "
"can have as many values as you want."
msgstr "``first_non_empty(Wert, Wert, …)`` -- gibt den ersten nicht leeren `Wert` zurück. Falls alle Werte leer sind, wird ein leerer Wert zurückgegeben. Sie können so viele Werte wie gewünscht angeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:261
msgid ""
"``format_date(val, format_string)`` -- format the value, which must be a "
"date field, using the format_string, returning a string. The formatting "
"codes are::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:286
msgid ""
"You might get unexpected results if the date you are formatting contains "
"localized month names, which can happen if you changed the format tweaks to "
"contain ``MMMM``. In this case, instead of using something like "
"``{pubdate:format_date(yyyy)}``, write the template using template program "
"mode as in ``{:'format_date(raw_field('pubdate'),'yyyy')'}``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:288
msgid ""
"``finish_formatting(val, fmt, prefix, suffix)`` -- apply the format, prefix,"
" and suffix to a value in the same way as done in a template like "
"``{series_index:05.2f| - |- }``. This function is provided to ease "
"conversion of complex single-function- or template-program-mode templates to"
" :ref:`general program mode <general_mode>` (see below) to take advantage of"
" GPM template compilation. For example, the following program produces the "
"same output as the above template::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:299
msgid ""
"Another example: for the template "
"``{series:re(([^\\s])[^\\s]+(\\s|$),\\1)}{series_index:0>2s| - | - "
"}{title}`` use::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:308
msgid ""
"``formats_modtimes(format_string)`` -- return a comma-separated list of "
"colon-separated items representing modification times for the formats of a "
"book. The format_string parameter specifies how the date is to be formatted."
" See the `format_date()` function for details. You can use the select "
"function to get the mod time for a specific format. Note that format names "
"are always uppercase, as in EPUB."
msgstr "``formats_modtimes(Formatzeichenkette)`` -- gibt eine kommagetrennte Liste von doppelpunktgetrennten Elementen zurück, welche die Änderungszeitpunkte für die Formate eines Buches darstellen. Der Parameter `Formatzeichenkette` gibt die Formatierung des Datums an. Siehe die Funktion ``format_date()`` für Details. Sie können die Funktion ``select`` verwenden, um den Änderungszeitpunkt für ein bestimmtes Format zu erhalten. Beachten Sie, dass Formatnamen immer aus Großbuchstaben bestehen, wie z. B. in \"EPUB\"."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:309
msgid ""
"``formats_paths()`` -- return a comma-separated list of colon-separated "
"items representing full path to the formats of a book. You can use the "
"select function to get the path for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_paths()`` -- gibt eine kommagetrennte Liste von doppelpunktgetrennten Elementen zurück, welche den vollen Pfad zu den Formaten eines Buches darstellen. Sie können die Funktion ``select`` verwenden, um den Pfad für ein bestimmtes Format zu erhalten. Beachten Sie, dass Formatnamen immer aus Großbuchstaben bestehen, wie z. B. in \"EPUB\"."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:310
msgid ""
"``formats_sizes()`` -- return a comma-separated list of colon-separated "
"items representing sizes in bytes of the formats of a book. You can use the "
"select function to get the size for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_sizes()`` -- gibt eine kommagetrennte Liste von doppelpunktgetrennten Elementen zurück, welche die Größen in Bytes der Formate eines Buches darstellen. Sie können die Funktion ``select`` verwenden, um die Größe für ein bestimmtes Format zu erhalten. Beachten Sie, dass Formatnamen immer aus Großbuchstaben bestehen, wie z. B. in \"EPUB\"."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:311
msgid ""
"``has_cover()`` -- return ``Yes`` if the book has a cover, otherwise return "
"the empty string"
msgstr "``has_cover()`` -- gibt \"Yes\" zurück, falls das Buch ein Titelbild besitzt, andernfalls wird eine leere Zeichenkette zurückgegeben."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:312
msgid ""
"``not(value)`` -- returns the string \"1\" if the value is empty, otherwise "
"returns the empty string. This function works well with test or "
"first_non_empty."
msgstr "``not(Wert)`` -- gibt die Zeichenkette \"1\" zurück, falls der `Wert` leer ist, andernfalls wird eine leere Zeichenkette zurückgegeben. Diese Funktion arbeitet gut mit den Funktionen ``test`` oder ``first_non_empty`` zusammen."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:313
msgid ""
"``list_difference(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item found in `list2`, using a case-insensitive "
"comparison. The items in `list1` and `list2` are separated by separator, as "
"are the items in the returned list."
msgstr "``list_difference(Liste1, Liste2, Trennzeichen)`` -- gibt eine Liste zurück, die durch Entfernen jedes Elements von `Liste1`, das in `Liste2` gefunden wird, unter Verwendung eines von Groß-/Kleinschreibung unabhängigen Vergleichs erstellt wird. Die Elemente in `Liste1` und `Liste2` werden durch `Trennzeichen` voneinander getrennt, ebenso wie die Elemente der zurückgegebenen Liste."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:314
msgid ""
"``list_equals(list1, sep1, list2, sep2, yes_val, no_val)`` -- return "
"`yes_val` if `list1` and `list2` contain the same items, otherwise return "
"`no_val`. The items are determined by splitting each list using the "
"appropriate separator character (`sep1` or `sep2`). The order of items in "
"the lists is not relevant. The comparison is case-insensitive."
msgstr "``list_equals(Liste1, Trennzeichen1, Liste2, Trennzeichen2, ja_Wert, nein_Wert)`` -- gibt `ja_Wert` zurück, falls `Liste1` und `Liste2` die gleichen Elemente enthalten, andernfalls wird `nein_Wert` zurückgegeben. Die Elemente werden durch Aufteilen jeder Liste unter Verwendung des entsprechenden Trennzeichens (`Trennzeichen1` oder `Trennzeichen2`) bestimmt. Die Reihenfolge der Elemente in den Listen ist dabei irrelevant. Der Vergleich ignoriert die Groß-/Kleinschreibung."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:315
msgid ""
"``list_intersection(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item not found in `list2`, using a case-"
"insensitive comparison. The items in `list1` and `list2` are separated by "
"separator, as are the items in the returned list."
msgstr "``list_intersection(Liste1, Liste2, Trennzeichen)`` -- gibt eine Liste zurück, die durch Entfernen jedes Elements von `Liste1`, das in `Liste2` nicht gefunden wird, unter Verwendung eines von Groß-/Kleinschreibung unabhängigen Vergleichs erstellt wird. Die Elemente in `Liste1` und `Liste2` werden durch `Trennzeichen` voneinander getrennt, ebenso wie die Elemente der zurückgegebenen Liste."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:316
msgid ""
"``list_re(src_list, separator, include_re, opt_replace)`` -- Construct a "
"list by first separating `src_list` into items using the `separator` "
"character. For each item in the list, check if it matches `include_re`. If "
"it does, then add it to the list to be returned. If `opt_replace` is not the"
" empty string, then apply the replacement before adding the item to the "
"returned list."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:317
msgid ""
"``list_re_group(src_list, separator, include_re, search_re, "
"template_for_group_1, for_group_2, ...)`` -- Like list_re except "
"replacements are not optional. It uses re_group(item, search_re, template "
"...) when doing the replacements."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:318
msgid ""
"``list_sort(list, direction, separator)`` -- return list sorted using a "
"case-insensitive sort. If `direction` is zero, the list is sorted ascending,"
" otherwise descending. The list items are separated by separator, as are the"
" items in the returned list."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:319
msgid ""
"``list_union(list1, list2, separator)`` -- return a list made by merging the"
" items in list1 and list2, removing duplicate items using a case-insensitive"
" comparison. If items differ in case, the one in list1 is used. The items in"
" list1 and list2 are separated by separator, as are the items in the "
"returned list."
msgstr "``list_union(Liste1, Liste2, Trennzeichen)`` -- gibt eine Liste zurück, die durch Zusammenführen der Elemente aus `Liste1` und `Liste2` erstellt wird, wobei Elementduplikate durch einen von Groß-/Kleinschreibung unabhängigen Vergleich entfernt werden. Falls sich Elemente in der Groß-/Kleinschreibung unterscheiden, wird das Element aus `Liste1` verwendet. Die Elemente in `Liste1` und `Liste2` werden durch `Trennzeichen` voneinander getrennt, ebenso wie die Elemente der zurückgegebenen Liste."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:320
msgid ""
"``multiply(x, y)`` -- returns x * y. Throws an exception if either x or y "
"are not numbers."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:321
msgid ""
"``ondevice()`` -- return the string \"Yes\" if ondevice is set, otherwise "
"return the empty string"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:322
msgid ""
"``or(value, value, ...)`` -- returns the string \"1\" if any value is not "
"empty, otherwise returns the empty string. This function works well with "
"test or first_non_empty. You can have as many values as you want."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:323
msgid ""
"``print(a, b, ...)`` -- prints the arguments to standard output. Unless you "
"start calibre from the command line (``calibre-debug -g``), the output will "
"go to a black hole."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:324
msgid ""
"``raw_field(name)`` -- returns the metadata field named by name without "
"applying any formatting."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:325
msgid ""
"``raw_list(name, separator)`` -- returns the metadata list named by name "
"without applying any formatting or sorting and with items separated by "
"separator."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:326
msgid ""
"``re_group(val, pattern, template_for_group_1, for_group_2, ...)`` --  "
"return a string made by applying the regular expression pattern to the val "
"and replacing each matched instance with the string computed by replacing "
"each matched group by the value returned by the corresponding template. The "
"original matched value for the group is available as $. In template program "
"mode, like for the template and the eval functions, you use [[ for { and ]] "
"for }. The following example in template program mode looks for series with "
"more than one word and uppercases the first word::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:330
msgid "``series_sort()`` -- returns the series sort value."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:331
msgid ""
"``strcat(a, b, ...)`` -- can take any number of arguments. Returns a string "
"formed by concatenating all the arguments."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:332
msgid ""
"``strcat_max(max, string1, prefix2, string2, ...)`` -- Returns a string "
"formed by concatenating the arguments. The returned value is initialized to "
"string1. `Prefix, string` pairs are added to the end of the value as long as"
" the resulting string length is less than `max`. String1 is returned even if"
" string1 is longer than max. You can pass as many `prefix, string` pairs as "
"you wish."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:333
msgid ""
"``strcmp(x, y, lt, eq, gt)`` -- does a case-insensitive comparison x and y "
"as strings. Returns ``lt`` if x < y. Returns ``eq`` if x == y. Otherwise "
"returns ``gt``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:334
msgid ""
"``strlen(a)`` -- Returns the length of the string passed as the argument."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:335
msgid ""
"``substr(str, start, end)`` -- returns the ``start``'th through the "
"``end``'th characters of ``str``. The first character in ``str`` is the "
"zero'th character. If end is negative, then it indicates that many "
"characters counting from the right. If end is zero, then it indicates the "
"last character. For example, ``substr('12345', 1, 0)`` returns ``'2345'``, "
"and ``substr('12345', 1, -1)`` returns ``'234'``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:336
msgid ""
"``subtract(x, y)`` -- returns x - y. Throws an exception if either x or y "
"are not numbers."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:337
msgid ""
"``today()`` -- return a date string for today. This value is designed for "
"use in format_date or days_between, but can be manipulated like any other "
"string. The date is in ISO format."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:338
msgid ""
"``template(x)`` -- evaluates x as a template. The evaluation is done in its "
"own context, meaning that variables are not shared between the caller and "
"the template evaluation. Because the `{` and `}` characters are special, you"
" must use `[[` for the `{` character and `]]` for the '}' character; they "
"are converted automatically. For example, ``template('[[title_sort]]') will "
"evaluate the template ``{title_sort}`` and return its value. Note also that "
"prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in the "
"argument to this function when using template program mode."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:343
msgid "Function classification"
msgstr "Funktionsklassifikation"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:354
msgid "Using general program mode"
msgstr "Verwenden des Allgemeinen Programmmodus"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:356
msgid ""
"For more complicated template programs, it is sometimes easier to avoid "
"template syntax (all the `{` and `}` characters), instead writing a more "
"classical-looking program. You can do this in calibre by beginning the "
"template with `program:`. In this case, no template processing is done. The "
"special variable `$` is not set. It is up to your program to produce the "
"correct results."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:358
msgid ""
"One advantage of `program:` mode is that the brackets are no longer special."
" For example, it is not necessary to use `[[` and `]]` when using the "
"`template()` function. Another advantage is that program mode templates are "
"compiled to Python and can run much faster than  templates in the other two "
"modes. Speed improvement depends on the complexity of the templates; the "
"more complicated the template the more the improvement. Compilation is "
"turned off or on using the tweak ``compile_gpm_templates`` (Compile General "
"Program Mode templates to Python). The main reason to turn off compilation "
"is if a compiled template does not work, in which case please file a bug "
"report."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:360
msgid ""
"The following example is a `program:` mode implementation of a recipe on the"
" MobileRead forum: \"Put series into the title, using either initials or a "
"shortened form. Strip leading articles from the series name (any).\" For "
"example, for the book The Two Towers in the Lord of the Rings series, the "
"recipe gives `LotR [02] The Two Towers`. Using standard templates, the "
"recipe requires three custom columns and a plugboard, as explained in the "
"following:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:362
msgid ""
"The solution requires creating three composite columns. The first column is "
"used to remove the leading articles. The second is used to compute the "
"'shorten' form. The third is to compute the 'initials' form. Once you have "
"these columns, the plugboard selects between them. You can hide any or all "
"of the three columns on the library view::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:401
msgid ""
"The following program produces the same results as the original recipe, "
"using only one custom column to hold the results of a program that computes "
"the special title value::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:438
msgid ""
"It would be possible to do the above with no custom columns by putting the "
"program into the template box of the plugboard. However, to do so, all "
"comments must be removed because the plugboard text box does not support "
"multi-line editing. It is debatable whether the gain of not having the "
"custom column is worth the vast increase in difficulty caused by the program"
" being one giant line."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:442
msgid "User-defined template functions"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:444
msgid ""
"You can add your own functions to the template processor. Such functions are"
" written in Python, and can be used in any of the three template programming"
" modes. The functions are added by going to Preferences -> Advanced -> "
"Template functions. Instructions are shown in that dialog."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:447
msgid "Special notes for save/send templates"
msgstr "Besondere Hinweise für Speicher-/Sendevorlagen"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:449
msgid ""
"Special processing is applied when a template is used in a `save to disk` or"
" `send to device` template. The values of the fields are cleaned, replacing "
"characters that are special to file systems with underscores, including "
"slashes. This means that field text cannot be used to create folders. "
"However, slashes are not changed in prefix or suffix strings, so slashes in "
"these strings will cause folders to be created. Because of this, you can "
"create variable-depth folder structure."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:451
msgid ""
"For example, assume we want the folder structure `series/series_index - "
"title`, with the caveat that if series does not exist, then the title should"
" be in the top folder. The template to do this is::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:455
msgid "The slash and the hyphen appear only if series is not empty."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:457
msgid ""
"The lookup function lets us do even fancier processing. For example, assume "
"that if a book has a series, then we want the folder structure "
"`series/series index - title.fmt`. If the book does not have a series, then "
"we want the folder structure `genre/author_sort/title.fmt`. If the book has "
"no genre, we want to use 'Unknown'. We want two completely different paths, "
"depending on the value of series."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:462
msgid "To accomplish this, we:"
msgstr "Um das zu erreichen:"

#: ../../home/kovid/work/calibre/manual/template_lang.rst:460
msgid ""
"Create a composite field (give it lookup name #AA) containing "
"``{series}/{series_index} - {title}``. If the series is not empty, then this"
" template will produce `series/series_index - title`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:461
msgid ""
"Create a composite field (give it lookup name #BB) containing "
"``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. This template produces "
"`genre/author_sort/title`, where an empty genre is replaced with `Unknown`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:462
msgid ""
"Set the save template to ``{series:lookup(.,#AA,#BB)}``. This template "
"chooses composite field #AA if series is not empty, and composite field #BB "
"if series is empty. We therefore have two completely different save paths, "
"depending on whether or not `series` is empty."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:465
msgid "Templates and plugboards"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:467
msgid ""
"Plugboards are used for changing the metadata written into books during "
"send-to-device and save-to-disk operations. A plugboard permits you to "
"specify a template to provide the data to write into the book's metadata. "
"You can use plugboards to modify the following fields: authors, author_sort,"
" language, publisher, tags, title, title_sort. This feature helps people who"
" want to use different metadata in books on devices to solve sorting or "
"display issues."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:469
msgid ""
"When you create a plugboard, you specify the format and device for which the"
" plugboard is to be used. A special device is provided, save_to_disk, that "
"is used when saving formats (as opposed to sending them to a device). Once "
"you have chosen the format and device, you choose the metadata fields to "
"change, providing templates to supply the new values. These templates are "
"`connected` to their destination fields, hence the name `plugboards`. You "
"can, of course, use composite columns in these templates."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:471
msgid ""
"When a plugboard might apply (Content server, save to disk, or send to "
"device), calibre searches the defined plugboards to choose the correct one "
"for the given format and device. For example, to find the appropriate "
"plugboard for an EPUB book being sent to an ANDROID device, calibre searches"
" the plugboards using the following search order:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:473
msgid ""
"a plugboard with an exact match on format and device, e.g., ``EPUB`` and "
"``ANDROID``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:474
msgid ""
"a plugboard with an exact match on format and the special ``any device`` "
"choice, e.g., ``EPUB`` and ``any device``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:475
msgid ""
"a plugboard with the special ``any format`` choice and an exact match on "
"device, e.g., ``any format`` and ``ANDROID``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:476
msgid "a plugboard with ``any format`` and ``any device``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:478
msgid ""
"The tags and authors fields have special treatment, because both of these "
"fields can hold more than one item. A book can have many tags and many "
"authors. When you specify that one of these two fields is to be changed, the"
" template's result is examined to see if more than one item is there. For "
"tags, the result is cut apart wherever calibre finds a comma. For example, "
"if the template produces the value ``Thriller, Horror``, then the result "
"will be two tags, ``Thriller`` and ``Horror``. There is no way to put a "
"comma in the middle of a tag."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:480
msgid ""
"The same thing happens for authors, but using a different character for the "
"cut, a `&` (ampersand) instead of a comma. For example, if the template "
"produces the value ``Blogs, Joe&Posts, Susan``, then the book will end up "
"with two authors, ``Blogs, Joe`` and ``Posts, Susan``. If the template "
"produces the value ``Blogs, Joe;Posts, Susan``, then the book will have one "
"author with a rather strange name."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:482
msgid ""
"Plugboards affect the metadata written into the book when it is saved to "
"disk or written to the device. Plugboards do not affect the metadata used by"
" ``save to disk`` and ``send to device`` to create the file names. Instead, "
"file names are constructed using the templates entered on the appropriate "
"preferences window."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:485
msgid "Helpful tips"
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:487
msgid "You might find the following tips useful."
msgstr "Vielleicht finden Sie die folgenden Ratschläge hilfreich."

#: ../../home/kovid/work/calibre/manual/template_lang.rst:489
msgid ""
"Create a custom composite column to test templates. Once you have the "
"column, you can change its template simply by double-clicking on the column."
" Hide the column when you are not testing."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:490
msgid ""
"Templates can use other templates by referencing a composite custom column."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:491
msgid ""
"In a plugboard, you can set a field to empty (or whatever is equivalent to "
"empty) by using the special template ``{}``. This template will always "
"evaluate to an empty string."
msgstr ""

#: ../../home/kovid/work/calibre/manual/template_lang.rst:492
msgid ""
"The technique described above to show numbers even if they have a zero value"
" works with the standard field series_index."
msgstr ""
