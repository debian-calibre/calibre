# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-14 08:53+0530\n"
"PO-Revision-Date: 2014-11-14 03:24+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Uzbek (Latin) (http://www.transifex.com/projects/p/calibre/language/uz@Latn/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uz@Latn\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 663a3f58110344409bf7e288348823b3
#: ../../home/kovid/work/calibre/manual/xpath.rst:4
msgid "XPath Tutorial"
msgstr ""

# 6e2bd3263f6c4923b52975497bd6627e
#: ../../home/kovid/work/calibre/manual/xpath.rst:6
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<http://en.wikipedia.org/wiki/XPath>`_, a query language that can be used to"
" select arbitrary parts of `HTML <http://en.wikipedia.org/wiki/HTML>`_ "
"documents in calibre. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for ebook related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr ""

# 299a11a7be644854a40ad8d86ed24b8e
#: ../../home/kovid/work/calibre/manual/xpath.rst:0
msgid "Contents"
msgstr ""

# 31696b5cb32742c183962e3b034ec21b
#: ../../home/kovid/work/calibre/manual/xpath.rst:19
msgid "Selecting by tagname"
msgstr ""

# 421d23c8c170420f9b6f038d8ea123e4
#: ../../home/kovid/work/calibre/manual/xpath.rst:21
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr ""

# 96c68a22e0da4a8f8e1f0d6fa186b078
#: ../../home/kovid/work/calibre/manual/xpath.rst:27
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr ""

# 9a7fb2485ce543bfb6bb2ce4adbaf5ee
#: ../../home/kovid/work/calibre/manual/xpath.rst:33
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr ""

# 9e40e47b11cb460bb8d65e3b71ac27dd
#: ../../home/kovid/work/calibre/manual/xpath.rst:39
msgid ""
"This will match only ``<p>A very short ebook to demonstrate the use of "
"XPath.</p>`` in the :ref:`sample_ebook` but not any of the other ``<p>`` "
"tags. The ``h:`` prefix in the above examples is needed to match XHTML tags."
" This is because internally, calibre represents all content as XHTML. In "
"XHTML tags have a *namespace*, and ``h:`` is the namespace prefix for HTML "
"tags."
msgstr ""

# 1aa0d894c1ce463ab2236c24e5d35852
#: ../../home/kovid/work/calibre/manual/xpath.rst:45
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr ""

# 74338dd354e74d00a5754cec965d65d4
#: ../../home/kovid/work/calibre/manual/xpath.rst:53
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr ""

# 990b7fdd929a46118d3eda5ecacb02ec
#: ../../home/kovid/work/calibre/manual/xpath.rst:62
msgid "Selecting by attributes"
msgstr ""

# a76d11286507431e9e0d3f8cae336203
#: ../../home/kovid/work/calibre/manual/xpath.rst:64
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr ""

# 4614f5dfd9f24b24b12033f8c218e9cd
#: ../../home/kovid/work/calibre/manual/xpath.rst:70
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr ""

# c827d1ba92994d38ab85fb06d591f3f9
#: ../../home/kovid/work/calibre/manual/xpath.rst:76
msgid "Selecting by tag content"
msgstr ""

# a9da8266107d4ba48d7d6a6f5725cbf6
#: ../../home/kovid/work/calibre/manual/xpath.rst:78
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr ""

# 9645bc2d2ac54b2b9be3519da3054657
#: ../../home/kovid/work/calibre/manual/xpath.rst:84
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr ""

# 50be2092c0844ac5a1b16e85d517be5a
#: ../../home/kovid/work/calibre/manual/xpath.rst:90
msgid "Sample ebook"
msgstr ""

# db1671b4cf3749fda6d3b3956be97c5f
#: ../../home/kovid/work/calibre/manual/xpath.rst:96
msgid "XPath built-in functions"
msgstr ""

# 0a5415ca2352480cb5ade0d67ad17abe
#: ../../home/kovid/work/calibre/manual/xpath.rst:99
msgid "name()"
msgstr ""

# a881ca697bc14043a5a0072006f6f133
#: ../../home/kovid/work/calibre/manual/xpath.rst:101
msgid "The name of the current tag."
msgstr ""

# ec6d8e91b4074ba69b18bc317ba566bd
#: ../../home/kovid/work/calibre/manual/xpath.rst:102
msgid "contains()"
msgstr ""

# 408e4503087c428ba4f53c5242728712
#: ../../home/kovid/work/calibre/manual/xpath.rst:104
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr ""

# f6aa761b917d4d5783ab4931a09f35be
#: ../../home/kovid/work/calibre/manual/xpath.rst:105
msgid "re:test()"
msgstr ""

# 11e079fefa46499db1d2107298732690
#: ../../home/kovid/work/calibre/manual/xpath.rst:107
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax "
"<https://docs.python.org/2.7/library/re.html>`_"
msgstr ""
