# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Xotes <alois.glibert@gmail.com>, 2014-2015
# Ptit Prince <leporello1791@gmail.com>, 2014-2016
# Nicolas F. <fernetn@gmail.com>, 2017
# Ptit Prince <leporello1791@gmail.com>, 2014
# Ptit Prince <leporello1791@gmail.com>, 2016-2020
# Xotes <alois.glibert@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-26 07:03+0000\n"
"PO-Revision-Date: 2020-11-13 03:15+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: French (http://www.transifex.com/calibre/calibre/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:4
msgid "API documentation for plugins"
msgstr "Documentation API pour les extensions"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:9
msgid ""
"Defines various abstract base classes that can be subclassed to create "
"powerful plugins. The useful classes are:"
msgstr "Définit différentes classes abstraites de base qui peuvent être sous-classées pour créer de puissantes extensions. Les classes utiles sont :"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:19
msgid "Plugin"
msgstr "Extension"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:28
msgid "FileTypePlugin"
msgstr "FileTypePlugin"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin:1
msgid "Bases: :class:`calibre.customize.Plugin`"
msgstr "Les bases: :class:`calibre.customize.Plugin`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:39
msgid "Metadata plugins"
msgstr "Les extensions métadonnées"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:54
msgid "Catalog plugins"
msgstr "Extension de catalogue"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:64
msgid "Metadata download plugins"
msgstr "Extension de téléchargement de métadonnées"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:76
msgid "Conversion plugins"
msgstr "Extension de conversion"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.description:1
msgid ""
"str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str"
msgstr "str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.description:4
msgid ""
"Create a new string object from the given object. If encoding or errors is "
"specified, then the object must expose a data buffer that will be decoded "
"using the given encoding and error handler. Otherwise, returns the result of"
" object.__str__() (if defined) or repr(object). encoding defaults to "
"sys.getdefaultencoding(). errors defaults to 'strict'."
msgstr "Créez un nouvel objet chaîne à partir de l'objet donné. Si un encodage ou des erreurs sont spécifiés, l'objet doit alors exposer un tampon de données qui sera décodé en utilisant l'encodage et le gestionnaire d'erreurs donnés. Sinon, renvoie le résultat de object.__str__() (si défini) ou repr(object). encoding default to sys.getdefaultencoding(). errors default to 'strict'."

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:91
msgid "Device drivers"
msgstr "Pilotes de périphérique"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:95
msgid ""
"The base class for all device drivers is :class:`DevicePlugin`. However, if "
"your device exposes itself as a USBMS drive to the operating system, you "
"should use the USBMS class instead as it implements all the logic needed to "
"support these kinds of devices."
msgstr "La classe de base pour tous les pilotes de périphérique est :class:`DevicePlugin`. Cependant, si votre périphérique expose un port USBMS au système opérateur, vous devriez utiliser la classe USBMS à la place car elle implémente toute la logique nécessaire pour supporter ce genre de périphérique."

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.interface.BookList:1
msgid "Bases: :class:`list`"
msgstr "Les bases :class:`liste`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:109
msgid "USB Mass Storage based devices"
msgstr "Périphérique basé sur du stockage de masse USB"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:111
msgid ""
"The base class for such devices is "
":class:`calibre.devices.usbms.driver.USBMS`. This class in turn inherits "
"some of its functionality from its bases, documented below. A typical basic "
"USBMS based driver looks like this:"
msgstr "La classe de base pour ces périphériques est :class:`calibre.devices.usbms.driver.USBMS`. Cette classe hérite certaines de ces fonctionnalité de ces bases, documentée plus bas. Un pilote basique typique USBMS (USB Mass Storage) ressemble à ceci :"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device:1
msgid ""
"Bases: :class:`calibre.devices.usbms.deviceconfig.DeviceConfig`, "
":class:`calibre.devices.interface.DevicePlugin`"
msgstr "Les bases: :class:`calibre.devices.usbms.deviceconfig.DeviceConfig`, :class:`calibre.devices.interface.DevicePlugin`"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS:1
msgid ""
"Bases: :class:`calibre.devices.usbms.cli.CLI`, "
":class:`calibre.devices.usbms.device.Device`"
msgstr "Les bases: :class:`calibre.devices.usbms.cli.CLI`, :class:`calibre.devices.usbms.device.Device`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:155
msgid "User Interface Actions"
msgstr "Action d'Interface Utilisateur"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:157
msgid ""
"If you are adding your own plugin in a ZIP file, you should subclass both "
"InterfaceActionBase and InterfaceAction. The :meth:`load_actual_plugin` "
"method of your InterfaceActionBase subclass must return an instantiated "
"object of your InterfaceBase subclass."
msgstr "Si vous ajoutez votre propre extension dans un fichier ZIP, vous devriez sous-classer InterfaceActionBase et InterfaceAction. La méthode :meth:`load_actual_plugin`  de votre sous-classe InterfaceActionBase doit renvoyer un objet instancié de  votre sous-classe InterfaceBase."

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction:1
msgid "Bases: :class:`PyQt5.QtCore.QObject`"
msgstr "Les bases: :class:`PyQt5.QtCore.QObject`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:172
msgid "Preferences plugins"
msgstr "Extensions préférences"
