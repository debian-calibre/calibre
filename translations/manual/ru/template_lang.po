# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Aleksandr P, 2019
# ashed <craysy@gmail.com>, 2020-2024
# Caarmi, 2021
# Vlad Loktionov, 2015
# Victor, 2022
# Родион Р., 2020
# Родион Р., 2019
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-21 15:47+0000\n"
"PO-Revision-Date: 2014-06-17 08:34+0000\n"
"Last-Translator: ashed <craysy@gmail.com>, 2020-2024\n"
"Language-Team: Russian (http://app.transifex.com/calibre/calibre/language/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../__w/calibre/calibre/manual/template_lang.rst:4
msgid "The calibre template language"
msgstr "Язык шаблонов calibre"

#: ../../__w/calibre/calibre/manual/template_lang.rst:6
msgid ""
"The calibre template language is a calibre-specific language used throughout"
" calibre for tasks such as specifying file paths, formatting values, and "
"computing the value for user-specified columns. Examples:"
msgstr "Язык шаблонов calibre — это специфичный для calibre язык, используемый в calibre для таких задач, как указание путей к файлам, форматирование значений и вычисление значений для столбцов, указанных пользователем. Примеры:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:8
msgid ""
"Specify the folder structure and file names when saving files from the "
"calibre library to the disk or e-book reader."
msgstr "Укажите структуру папок и имена файлов при сохранении файлов из библиотеки calibre на диск или в читалку электронных книг"

#: ../../__w/calibre/calibre/manual/template_lang.rst:9
msgid "Define rules for adding icons and colors to the calibre book list."
msgstr "Определите правила добавления значков и цветов в список книг calibre."

#: ../../__w/calibre/calibre/manual/template_lang.rst:10
msgid "Define `virtual columns` that contain data from other columns."
msgstr "Определите виртуальные столбцы, содержащие данные из других столбцов."

#: ../../__w/calibre/calibre/manual/template_lang.rst:11
msgid "Advanced library searching."
msgstr "Расширенный поиск в библиотеке."

#: ../../__w/calibre/calibre/manual/template_lang.rst:12
msgid "Advanced metadata search and replace."
msgstr "Расширенный поиск и замена метаданных."

#: ../../__w/calibre/calibre/manual/template_lang.rst:14
msgid ""
"The language is built around the notion of a `template`, which specifies "
"which book metadata to use, computations on that metadata, and how it is to "
"be formatted."
msgstr "Язык построен на понятии «шаблон», который определяет, какие метаданные книги использовать, вычисления над этими метаданными и способ их форматирования."

#: ../../__w/calibre/calibre/manual/template_lang.rst:17
msgid "Basic templates"
msgstr "Базовые шаблоны"

#: ../../__w/calibre/calibre/manual/template_lang.rst:19
msgid ""
"A basic template consists one or more ``template expressions``. A ``template"
" expression`` consists of text and names in curly brackets (``{}``) that is "
"replaced by the corresponding metadata from the book being processed. For "
"example, the default template in calibre used for saving books to device has"
" 4 ``template expressions``::"
msgstr "Базовый шаблон состоит из одного или нескольких ``шаблонных выражений``. ``Шаблонное выражение`` состоит из текста и имен в фигурных скобках (``{}``), которые заменяются соответствующими метаданными из обрабатываемой книги. Например, шаблон по умолчанию в calibre, используемый для сохранения книг на устройство, имеет 4 ``шаблонных выражения``::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:23
msgid "For the book \"The Foundation\" by \"Isaac Asimov\" the  will become::"
msgstr "Для книги Айзека Азимова «Основание» \"The Foundation\" by \"Isaac Asimov\" им станет:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:27
msgid ""
"The slashes are not ``template expressions`` because they are in between in "
"``{}``. Such text is left where it appears. For example, if the template "
"is::"
msgstr "Косые черты не являются ``шаблонными выражениями``, потому что они находятся между ними в ``{}``. Такой текст остается там, где он появляется. Например, если шаблон::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:31
msgid "then for \"The Foundation\" the template produces::"
msgstr "затем для книги «Основание» шаблон создает::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:35
msgid ""
"A ``template expression`` can access all the metadata available in calibre, "
"including custom columns (columns you create yourself), by using a column's "
"``lookup name``. To find the lookup name for a `column` (sometimes called "
"`fields`), hover your mouse over the column header in calibre's book list. "
"Lookup names for custom columns always begin with ``#``. For series type "
"columns there is an additional field named ``#lookup name_index`` that is "
"the series index for that book in the series. For example, if you have a "
"custom series column named ``#myseries``, there will also be a column named "
"``#myseries_index``. The standard series column's index is named "
"``series_index``."
msgstr "``Шаблонное выражение`` может получить доступ ко всем метаданным, доступным в calibre, включая настраиваемые столбцы (столбцы, которые вы создаете самостоятельно), используя ``имя поиска`` столбца. Чтобы найти поисковое имя для столбца (иногда называемых полями), наведите указатель мыши на заголовок столбца в списке книг calibre. Имена подстановки для настраиваемых столбцов всегда начинаются с символа ``#``. Для столбцов типа серии есть дополнительное поле с именем ``#lookup name_index``, которое является индексом серии для этой книги в серии. Например, если у вас есть столбец настраиваемой серии с именем ``#myseries``, также будет столбец с именем ``#myseries_index``. Индекс столбца стандартной серии называется ``series_index``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:37
msgid "In addition to the standard column based fields, you also can use:"
msgstr "В дополнение к стандартным полям на основе столбцов вы также можете использовать:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:39
msgid ""
"``{formats}`` - A list of formats available in the calibre library for a "
"book"
msgstr "``{formats}``- Список форматов, доступных в библиотеке calibre для книги"

#: ../../__w/calibre/calibre/manual/template_lang.rst:40
msgid "``{identifiers:select(isbn)}`` - The ISBN of the book"
msgstr "``{identifiers:select(isbn)}`` - ISBN книги"

#: ../../__w/calibre/calibre/manual/template_lang.rst:42
msgid ""
"If the metadata for the field for a given book is not defined then the field"
" in the template is replaced by the empty string (``''``). For example, "
"consider the following template::"
msgstr "Если метаданные для поля для данной книги не определены, тогда поле в шаблоне заменяется пустой строкой (``''``). Например, рассмотрим следующий шаблон::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:46
msgid ""
"If Asimov's book \"Second Foundation\" is in the series \"Foundation\" then "
"the template produces::"
msgstr "Если книга Азимова «Второе основание» входит в серию «Основание», то шаблон дает::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:50
msgid ""
"If a series has not been entered for the book then the template produces::"
msgstr "Если для книги не введена серия, то шаблон выдает::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:54
msgid ""
"The template processor automatically removes multiple slashes and leading or"
" trailing spaces."
msgstr "Обработчик шаблонов автоматически удаляет несколько косых черт и начальные или конечные пробелы."

#: ../../__w/calibre/calibre/manual/template_lang.rst:57
msgid "Advanced formatting"
msgstr "Расширенное форматирование"

#: ../../__w/calibre/calibre/manual/template_lang.rst:59
msgid ""
"In addition to metadata substitution, templates can conditionally include "
"additional text and control how substituted data is formatted."
msgstr "Помимо подстановки метаданных, шаблоны могут условно включать дополнительный текст и управлять форматированием заменяемых данных."

#: ../../__w/calibre/calibre/manual/template_lang.rst:61
msgid "**Conditionally including text**"
msgstr "**Условно включая текст**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:63
msgid ""
"Sometimes you want text to appear in the output only if a field is not "
"empty. A common case is ``series`` and ``series_index`` where you want "
"either nothing or the two values separated by a hyphen. calibre handles this"
" case using a special ``template expression`` syntax."
msgstr "Иногда вы хотите, чтобы текст отображался в выводе, только если поле не пустое. Обычный случай - это series и series_index, когда вы не хотите ничего или два значения, разделенные дефисом. calibre обрабатывает этот случай, используя специальный синтаксис ``шаблонного выражения``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:65
msgid ""
"For example and using the above Foundation example, assume you want the "
"template to produce `Foundation - 3 - Second Foundation`. This template "
"produces that output:"
msgstr "Например, используя приведенный выше пример Foundation, предположим, что вы хотите, чтобы шаблон создавал `Foundation - 3 - Second Foundation`. Этот шаблон производит такой вывод:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:67
msgid "``{series} - {series_index} - {title}``"
msgstr "``{series} - {series_index} - {title}``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:69
msgid ""
"However, if a book has no series the template will produce `- - the title`, "
"which is probably not what you want. Generally, people want the result be "
"the title without the extraneous hyphens. You can accomplish this using the "
"following template syntax:"
msgstr "Однако, если в книге нет серии, шаблон создаст `- - title`, что, вероятно, не то, что вам нужно. Обычно люди хотят, чтобы в результате получился заголовок без лишних дефисов. Вы можете сделать это, используя следующий синтаксис шаблона:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:71
msgid "``{field:|prefix_text|suffix_text}``"
msgstr "``{field:|prefix_text|suffix_text}``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:73
msgid ""
"This ``template expression`` says that if ``field`` has the value `XXXX` "
"then the result will be `prefix_textXXXXXsuffix_text`. If ``field`` is empty"
" (has no value) then the result will be the empty string (nothing) because "
"the prefix and suffix are ignored. The prefix and suffix can contain blanks."
msgstr "Это ``шаблонное выражение`` говорит, что если ``field`` имеет значение ``XXXX``, то результатом будет ``prefix_textXXXXXsuffix_text``. Если поле пусто (не имеет значения), результатом будет пустая строка (ничего), потому что префикс и суффикс игнорируются. Префикс и суффикс могут содержать пробелы."

#: ../../__w/calibre/calibre/manual/template_lang.rst:75
msgid ""
"**Do not use subtemplates (`{ ... }`) or functions (see below) in the prefix"
" or the suffix.**"
msgstr "**Не используйте подшаблоны (`{ ... }`) или функции (см. Ниже) в префиксе или суффиксе.**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:77
msgid ""
"Using this syntax, we can solve the above no-series problem with the "
"template::"
msgstr "Используя этот синтаксис, мы можем решить указанную выше проблему без серии с шаблоном::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:81
msgid ""
"The hyphens will be included only if the book has a series index, which it "
"has only if it has a series. Continuing the Foundation example again, the "
"template will produce `Foundation - 1 - Second Foundation`."
msgstr "Дефисы будут добавлены только в том случае, если у книги есть индекс серии, который есть только в том случае, если в ней есть серия. Продолжая пример с Foundation снова, шаблон создаст `Foundation - 1 - Second Foundation`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:83
#: ../../__w/calibre/calibre/manual/template_lang.rst:289
#: ../../__w/calibre/calibre/manual/template_lang.rst:438
msgid "Notes:"
msgstr "Примечания:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:85
msgid ""
"You must include the colon after the ``lookup name`` if you are using a "
"prefix or a suffix."
msgstr "Вы должны включить двоеточие после ``имени поиска``, если используете префикс или суффикс."

#: ../../__w/calibre/calibre/manual/template_lang.rst:86
msgid ""
"You must either use either no or both ``|`` characters. Using one, as in "
"``{field:| - }``, is not allowed."
msgstr "Вы должны использовать либо никакой, либо оба символа ``|``. Использовать один, как в ``{field:| -}``, не допускается."

#: ../../__w/calibre/calibre/manual/template_lang.rst:87
msgid ""
"It is OK to provide no text for either the prefix or the suffix, such as in "
"``{series:|| - }``. The template ``{title:||}`` is the same as ``{title}``."
msgstr "Допускается отсутствие текста для префикса или суффикса, например, в ``{series:|| -}``. Шаблон ``{title:||}`` такой же, как ``{title}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:89
msgid "**Formatting**"
msgstr "**Форматирование**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:91
msgid ""
"Suppose you want the ``series_index`` to be formatted as three digits with "
"leading zeros. This does the trick:"
msgstr "Предположим, вы хотите, чтобы ``series_index`` был отформатирован как три цифры с ведущими нулями. Это помогает:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:93
msgid "``{series_index:0>3s}`` - Three digits with leading zeros"
msgstr "``{series_index: 0>3s}`` - три цифры с ведущими нулями"

#: ../../__w/calibre/calibre/manual/template_lang.rst:95
msgid "For trailing zeros, use:"
msgstr "Для завершающих нулей используйте:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:97
msgid "``{series_index:0<3s}`` - Three digits with trailing zeros"
msgstr "``{series_index: 0<3s}``- три цифры с завершающими нулями"

#: ../../__w/calibre/calibre/manual/template_lang.rst:99
msgid ""
"If you use series indices with fractional values, e.g., 1.1, you might want "
"the decimal points to line up. For example, you might want the indices 1 and"
" 2.5 to appear as 01.00 and 02.50 so that they will sort correctly on a "
"device that does lexical sorting. To do this, use:"
msgstr "Если вы используете индексы серий с дробными значениями, например 1.1, и нужно чтобы десятичные точки совпадали. Например, чтобы индексы 1 и 2.5 отображались как 01.00 и 02.50 и правильно сортировались на устройстве, которое выполняет лексическую сортировку. Для этого используйте:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:101
msgid ""
"``{series_index:0>5.2f}`` - Five characters consisting of two digits with "
"leading zeros, a decimal point, then 2 digits after the decimal point."
msgstr "``{series_index: 05.2f}`` - пять символов, состоящих из двух цифр с ведущими нулями, десятичной точкой и двумя цифрами после десятичной точки."

#: ../../__w/calibre/calibre/manual/template_lang.rst:103
msgid "If you want only the first two letters of the data, use:"
msgstr "Если вам нужны только первые две буквы данных, используйте:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:105
msgid ""
"``{author_sort:.2}`` - Only the first two letters of the author sort name"
msgstr "``{author_sort:.2}`` - Только первые две буквы сортировочного имени автора"

#: ../../__w/calibre/calibre/manual/template_lang.rst:107
msgid ""
"Much of the calibre template language formatting comes from Python. For more"
" details on the syntax of these advanced formatting operations see the "
"`Python documentation "
"<https://docs.python.org/3/library/string.html#formatstrings>`_."
msgstr "Большая часть форматирования языка шаблонов calibre из Python. Дополнительные сведения о синтаксисе расширенных операций форматирования см. в `Python documentation <https://docs.python.org/3/library/string.html#formatstrings>`_."

#: ../../__w/calibre/calibre/manual/template_lang.rst:111
msgid "Using templates to define custom columns"
msgstr "Использование шаблонов для определения пользовательских столбцов"

#: ../../__w/calibre/calibre/manual/template_lang.rst:113
msgid ""
"Templates can be used to display information that isn't in calibre metadata,"
" or to display metadata differently from calibre's normal format. For "
"example, you might want to show the ``ISBN``, a field that calibre does not "
"display. You can accomplish this creating a custom column with the type "
"`Column built from other columns` (hereafter called `composite columns`) and"
" providing a template to generate the displayed text. The column will "
"display the result of evaluating the template. For example, to display the "
"ISBN, create the column and enter ``{identifiers:select(isbn)}`` in the "
"template box. To display a column containing the values of two series custom"
" columns, separated by a comma, use ``{#series1:||,}{#series2}``."
msgstr "Шаблоны могут использоваться для отображения информации, которая не входит в метаданные calibre, или для отображения метаданных, отличных от обычного формата calibre. Например, чтобы отобразить ``ISBN``, поле, которое штатно не отображается в calibre. Создайте настраиваемый столбец с типом `Столбец, построенный из других столбцов` (в дальнейшем называемый `составные столбцы`) и предоставьте шаблон для генерации отображаемого текста. В столбце отобразится результат оценки шаблона. Чтобы отобразить ISBN, создайте составной столбец и введите ``{identifiers:select (isbn)}`` в поле шаблона. Чтобы отобразить столбец, содержащий значения двух пользовательских столбцов серий, разделённых запятой, используйте ``{#series1:||,}{#series2}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:115
msgid "Composite columns can use any template option, including formatting."
msgstr "В составных столбцах можно использовать любой параметр шаблона, включая форматирование."

#: ../../__w/calibre/calibre/manual/template_lang.rst:117
msgid ""
"Note: You cannot edit the data displayed in a composite column. Instead you "
"edit the source columns. If you edit a composite column, for example by "
"double-clicking it, calibre will open the template for editing, not the "
"underlying data."
msgstr "Примечание. Вы не можете редактировать данные, отображаемые в составном столбце. Вместо этого вы редактируете исходные столбцы. Если вы редактируете составной столбец, например, дважды щелкнув по нему, calibre откроет для редактирования шаблон, а не базовые данные."

#: ../../__w/calibre/calibre/manual/template_lang.rst:121
msgid "Templates and plugboards"
msgstr "Шаблоны и коммутации"

#: ../../__w/calibre/calibre/manual/template_lang.rst:123
msgid ""
"Plugboards are used for changing the metadata written into books during "
"send-to-device and save-to-disk operations. A plugboard permits you to "
"specify a template to provide the data to write into the book's metadata. "
"You can use plugboards to modify the following fields: authors, author_sort,"
" language, publisher, tags, title, title_sort. This feature helps people who"
" want to use different metadata in books on devices to solve sorting or "
"display issues."
msgstr "Коммутационные панели используются для изменения метаданных, записанных в книги, во время операций отправки на устройство и сохранения на диск. Коммутационная панель позволяет указать шаблон предоставления данных для записи в метаданные книги. Вы можете использовать коммутационные панели для изменения следующих полей: authors, author_sort, language, publisher, tags, title, title_sort. Эта функция помогает в использовании разных метаданных в книгах на устройствах, решении проблем сортировки или отображения."

#: ../../__w/calibre/calibre/manual/template_lang.rst:125
msgid ""
"When you create a plugboard, you specify the format and device for which the"
" plugboard is to be used. A special device is provided, ``save_to_disk``, "
"that is used when saving formats (as opposed to sending them to a device). "
"Once you have chosen the format and device, you choose the metadata fields "
"to change, providing templates to supply the new values. These templates are"
" `connected` to their destination fields, hence the name `plugboards`. You "
"can of course use composite columns in these templates."
msgstr "При создании коммутационной панели вы указываете формат и устройство, для которых она будет использоваться. Предоставляется специальное устройство ``save_to_disk``, которое используется при сохранении форматов (в отличие от их отправки на устройство). После того, как вы выбрали формат и устройство, вы выбираете поля метаданных, которые нужно изменить, предоставляя шаблоны для предоставления новых значений. Эти шаблоны `присоединены` к своим полям назначения, отсюда и название `plugboards`. Конечно, в этих шаблонах можно использовать составные столбцы."

#: ../../__w/calibre/calibre/manual/template_lang.rst:127
msgid ""
"Plugboards are quite flexible and can be written in Single Function Mode, "
"Template Program Mode, General Program Mode, or Python Template mode."
msgstr "Плагборды довольно гибкие и могут быть написаны в режиме Single Function Mode, Template Program Mode, General Program Mode, или Python Template mode."

#: ../../__w/calibre/calibre/manual/template_lang.rst:129
msgid ""
"When a plugboard might apply (Content server, save to disk, or send to "
"device), calibre searches the defined plugboards to choose the correct one "
"for the given format and device. For example, to find the appropriate "
"plugboard for an EPUB book being sent to an ANDROID device, calibre searches"
" the plugboards using the following search order:"
msgstr "Когда может применяться коммутационная панель (контент-сервер, сохранение на диск или отправка на устройство), calibre выполняет поиск определенных подключаемых модулей, чтобы выбрать правильный вариант для данного формата и устройства. Например, чтобы найти подходящую коммутационную панель для книги EPUB, отправляемой на устройство ANDROID, calibre выполняет поиск в коммутационных панелях, используя следующий порядок поиска:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:133
msgid ""
"a plugboard with an exact match on format and device, e.g., ``EPUB`` and "
"``ANDROID``"
msgstr "коммутационная панель с точным соответствием по формату и устройству, например, ``EPUB`` и ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:134
msgid ""
"a plugboard with an exact match on format and the special ``any device`` "
"choice, e.g., ``EPUB`` and ``any device``"
msgstr "коммутационная панель с точным соответствием по формату и специальным выбором ``any device``, например, ``EPUB`` и ``any device``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:135
msgid ""
"a plugboard with the special ``any format`` choice and an exact match on "
"device, e.g., ``any format`` and ``ANDROID``"
msgstr "коммутационная панель со специальным выбором ``any format`` и точным соответствием на устройстве, например, ``any format`` и ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:136
msgid "a plugboard with ``any format`` and ``any device``"
msgstr "коммутационная панель с ``any format`` и ``any device``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:138
msgid ""
"The tags and authors fields have special treatment, because both of these "
"fields can hold more than one item. A book can have many tags and many "
"authors. When you specify that one of these two fields is to be changed, the"
" template's result is examined to see if more than one item is there. For "
"tags, the result is cut apart wherever calibre finds a comma. For example, "
"if the template produces the value ``Thriller, Horror``, then the result "
"will be two tags, ``Thriller`` and ``Horror``. There is no way to put a "
"comma in the middle of a tag."
msgstr "Поля тегов и авторов обрабатываются по-особому, потому что оба эти поля могут содержать более одного элемента. У книги может быть много тегов и много авторов. Когда вы указываете, что одно из этих двух полей должно быть изменено, результат шаблона проверяется, чтобы увидеть, есть ли там более одного элемента. Для тегов результат будет разделен на части, если calibre найдет запятую. Например, если в шаблоне выдается значение ``Thriller, Horror``, результатом будут два тега: ``Thriller`` и ``Horror``. Невозможно поставить запятую в середине тега."

#: ../../__w/calibre/calibre/manual/template_lang.rst:141
msgid ""
"The same thing happens for authors, but using a different character for the "
"cut, a `&` (ampersand) instead of a comma. For example, if the template "
"produces the value ``Blogs, Joe&Posts, Susan``, then the book will end up "
"with two authors, ``Blogs, Joe`` and ``Posts, Susan``. If the template "
"produces the value ``Blogs, Joe;Posts, Susan``, then the book will have one "
"author with a rather strange name."
msgstr "То же самое происходит с авторами, но с использованием другого символа для сокращения, `&` (амперсанд) вместо запятой. Например, если в шаблоне указано значение ``Blogs, Joe&Posts, Susan``, тогда в книге будет два автора: ``Blogs, Joe`` и ``Posts, Susan``. Если шаблон выдает значение ``Blogs, Joe;Posts, Susan``, то у книги будет один автор с довольно странным именем."

#: ../../__w/calibre/calibre/manual/template_lang.rst:143
msgid ""
"Plugboards affect the metadata written into the book when it is saved to "
"disk or written to the device. Plugboards do not affect the metadata used by"
" ``save to disk`` and ``send to device`` to create the file names. Instead, "
"file names are constructed using the templates entered on the appropriate "
"preferences window."
msgstr "Плагины влияют на метаданные, записанные в книгу, когда они сохраняются на диск или записываются на устройство. Плагины не влияют на метаданные, используемые командами «сохранить на диск» и «отправить на устройство» для создания имен файлов. Вместо этого имена файлов создаются с использованием шаблонов, введенных в соответствующем окне настроек."

#: ../../__w/calibre/calibre/manual/template_lang.rst:148
msgid "Using functions in templates - Single Function Mode"
msgstr "Использование функций в шаблонах - режим одной функции"

#: ../../__w/calibre/calibre/manual/template_lang.rst:150
msgid ""
"Suppose you want to display the value of a field in upper case when that "
"field is normally in title case. You can do this using `template functions`."
" For example, to display the title in upper case use the ``uppercase`` "
"function, as in ``{title:uppercase()}``. To display it in title case, use "
"``{title:titlecase()}``."
msgstr "Предположим, вы хотите отобразить значение поля в верхнем регистре, когда это поле обычно находится в регистре заголовков. Вы можете сделать это с помощью шаблонных функций. Например, чтобы отобразить заголовок в верхнем регистре, используйте функцию ``uppercase``, как в ``{title:uppercase()}``. Чтобы отобразить его в регистре заголовка, используйте ``{title:titlecase()}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:152
msgid ""
"Functions go into the format part of the template, after the ``:`` and "
"before the first ``|`` or the closing ``}`` if no prefix/suffix is used. If "
"you have both a format and a function reference, the function comes after a "
"second ``:``.  Functions return the value of the column specified in the "
"template, suitably modified."
msgstr "Функции входят в форматную часть шаблона после ``:`` и перед первым ``|`` или закрывающим ``}``, если не используется префикс/суффикс. Если у вас есть и формат, и ссылка на функцию, функция появляется после второго ``:``. Функции возвращают соответствующее измененное значение столбца, указанного в шаблоне."

#: ../../__w/calibre/calibre/manual/template_lang.rst:154
msgid "The syntax for using functions is one of::"
msgstr "Синтаксис использования функций - один из::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:161
msgid ""
"Function names must always be followed by opening and closing parentheses. "
"Some functions require extra values (arguments), and these go inside the "
"parentheses. Arguments are separated by commas. Literal commas (commas as "
"text, not argument separators) must be preceded by a backslash (``\\``) . "
"The last (or only) argument cannot contain a textual closing parenthesis."
msgstr "За именами функций всегда должны стоять открывающие и закрывающие круглые скобки. Некоторым функциям требуются дополнительные значения (аргументы), и они заключаются в круглые скобки. Аргументы разделяются запятыми. Буквальным запятым (запятым как тексту, а не разделителям аргументов) должна предшествовать обратная косая черта (``\\\\``). Последний (или единственный) аргумент не может содержать закрывающую текстовую скобку."

#: ../../__w/calibre/calibre/manual/template_lang.rst:163
msgid ""
"Functions are evaluated before format specifications and the prefix/suffix. "
"See further down for an example of using both a format and a function."
msgstr "Функции оцениваются до спецификации формата и префикса/суффикса. См. Ниже пример использования формата и функции."

#: ../../__w/calibre/calibre/manual/template_lang.rst:165
msgid ""
"**Important**: If you have programming experience, please note that the "
"syntax in `Single Function Mode` is not what you expect. Strings are not "
"quoted and spaces are significant. All arguments are considered to be "
"constants; there are no expressions."
msgstr "**Важно**: если у вас есть опыт программирования, обратите внимание, что синтаксис в `Single Function Mode` не соответствует вашим ожиданиям. Строки не заключаются в кавычки, а пробелы имеют значение. Все аргументы считаются константами; нет выражений."

#: ../../__w/calibre/calibre/manual/template_lang.rst:167
msgid ""
"**Do not use subtemplates (`{ ... }`) as function arguments.** Instead, use "
":ref:`Template Program Mode <template_mode>` and :ref:`General Program Mode "
"<general_mode>`."
msgstr "**Не используйте подшаблоны (`{ ... }`) в качестве аргументов функции.** Вместо этого используйте :ref:`Template Program Mode <template_mode>` и :ref:`General Program Mode <general_mode>`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:169
msgid "Notes on calling functions in Single Function Mode:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:171
msgid ""
"When functions are used in Single Function Mode, the first parameter, "
"``value``, is automatically replaced by the content of the field specified "
"in the template. For example, when the template ``{title:capitalize()}`` is "
"processed, the content of the ``title`` field is passed as the parameter "
"``value`` to the capitalize function."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:172
msgid ""
"In the function documentation, the notation ``[something]*`` means that "
"``something`` can be repeated zero or more times. The notation "
"``[something]+`` means that the ``something`` is repeated one or more times "
"(must exist at least one time)."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:173
msgid ""
"Some functions use regular expressions. In the template language regular "
"expression matching is case-insensitive."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:175
msgid ""
"Functions are documented in :ref:`template_functions_reference`. The "
"documentation tells you what arguments the functions require and what the "
"functions do. For example, here is the documentation of the "
":ref:`ff_ifempty` function."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:179
msgid ""
"You see that the function requires two arguments, ``value`` and "
"``text_if_empty``. However, because we are using Single Function Mode, we "
"omit the ``value`` argument, passing only ``text_if_empty``. For example, "
"this template::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:183
msgid ""
"shows the tags for a book, if any. If it has no tags then it show `No tags "
"on this book`."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:185
msgid ""
"The following functions are usable in Single Function Mode because their "
"first parameter is ``value``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:225
msgid "**Using functions and formatting in the same template**"
msgstr "**Использование функций и форматирования в одном шаблоне**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:227
msgid ""
"Suppose you have an integer custom column ``#myint`` that you want displayed"
" with leading zeros, as in ``003``. One way to do this is to use a format of"
" ``0>3s``. However, by default if a number (integer or float) equals zero "
"then the value is displayed as the empty string so zero values will produce "
"the empty string, not ``000``. If you want to see ``000`` values then you "
"use both the format string and the ``ifempty`` function to change the empty "
"value back to a zero. The template would be::"
msgstr "Предположим, у вас есть целочисленный настраиваемый столбец ``#myint``, который вы хотите отображать с ведущими нулями, как в ``003``. Один из способов сделать это - использовать формат 03. Однако по умолчанию, если число (целое или с плавающей запятой) равно нулю, тогда значение отображается как пустая строка, поэтому нулевые значения будут давать пустую строку, а не ``000``. Если вы хотите увидеть значения ``000``, используйте как строку формата, так и функцию ifempty, чтобы изменить пустое значение обратно в ноль. Шаблон будет::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:231
msgid ""
"Note that you can use the prefix and suffix as well. If you want the number "
"to appear as ``[003]`` or ``[000]``, then use the template::"
msgstr "Обратите внимание, что вы также можете использовать префикс и суффикс. Если вы хотите, чтобы номер отображался как ``[003]`` или ``[000]``, то используйте шаблон::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:238
msgid "General Program Mode"
msgstr "Общий программный режим"

#: ../../__w/calibre/calibre/manual/template_lang.rst:240
msgid ""
"`General Program Mode` (`GPM`) replaces `template expressions` with a "
"program written in the `template language`. The syntax of the language is "
"defined by the following grammar::"
msgstr "``Общий программный режим`` (``GPM``) заменяет ``шаблонные выражения``  программой, написанной на ``языке шаблонов``. Синтаксис языка определяется следующей грамматикой::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:291
msgid ""
"a ``top_expression`` always has a value. The value of an ``expression_list``"
" is the value of the last ``top_expression`` in the list. For example, the "
"value of the expression list ``1;2;'foobar';3`` is ``3``."
msgstr "``top_expression`` всегда имеет значение. Значение ``expression_list`` - это значение последнего ``top_expression`` в списке. Например, значение списка выражений ``1;2;'foobar';3`` равно ``3``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:292
msgid "In a logical context, any non-empty value is ``True``"
msgstr "В логическом контексте любое непустое значение - ``True``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:293
msgid "In a logical context, the empty value is ``False``"
msgstr "В логическом контексте пустым значением является ``False``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:294
msgid ""
"Strings and numbers can be used interchangeably. For example, ``10`` and "
"``'10'`` are the same thing."
msgstr "Строки и числа могут использоваться как взаимозаменяемые. Например, ``10`` и ``'10'`` - это одно и то же."

#: ../../__w/calibre/calibre/manual/template_lang.rst:295
msgid ""
"Comments are lines starting with a '#' character. Comments beginning later "
"in a line are not supported."
msgstr "Комментарии - это строки, начинающиеся с символа '#'. Комментарии, начинающиеся позже в строке, не поддерживаются."

#: ../../__w/calibre/calibre/manual/template_lang.rst:297
msgid "**Operator precedence**"
msgstr "**Приоритет оператора**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:299
msgid ""
"The operator precedence (order of evaluation) from highest (evaluated first)"
" to lowest (evaluated last) is:"
msgstr "Приоритет оператора (порядок оценки) от наивысшего (оценивается первым) до самого низкого (оценивается последним):"

#: ../../__w/calibre/calibre/manual/template_lang.rst:301
msgid ""
"Function calls, constants, parenthesized expressions, statement expressions,"
" assignment expressions, field references."
msgstr "Вызовы функций, константы, выражения в скобках, выражения операторов, выражения присваивания, ссылки на поля."

#: ../../__w/calibre/calibre/manual/template_lang.rst:302
msgid ""
"Unary plus (``+``) and minus (``-``). These operators evaluate right to "
"left."
msgstr "Унарный плюс (``+``) и минус (``-``). Эти операторы вычисляют справа налево."

#: ../../__w/calibre/calibre/manual/template_lang.rst:304
msgid ""
"These and all the other arithmetic operators return integers if the "
"expression results in a fractional part equal to zero. For example, if an "
"expression returns ``3.0`` it is changed to ``3``."
msgstr "Эти и все другие арифметические операторы возвращают целые числа, если результат выражения дает дробную часть, равную нулю. Например, если выражение возвращает ``3.0``, оно изменяется на ``3``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:305
msgid ""
"Multiply (``*``) and divide (``/``). These operators are associative and "
"evaluate left to right. Use parentheses if you want to change the order of "
"evaluation."
msgstr "Умножение (``*``) и деление (``/``). Эти операторы ассоциативны и выполняются слева направо. Используйте круглые скобки, если хотите изменить порядок оценки."

#: ../../__w/calibre/calibre/manual/template_lang.rst:306
msgid ""
"Add (``+``) and subtract (``-``). These operators are associative and "
"evaluate left to right."
msgstr "Сложение (``+``) и вычитание (``-``). Эти операторы ассоциативны и выполняются слева направо."

#: ../../__w/calibre/calibre/manual/template_lang.rst:307
msgid ""
"Numeric and string comparisons. These operators return ``'1'`` if the "
"comparison succeeds, otherwise the empty string (``''``). Comparisons are "
"not associative: ``a < b < c`` is a syntax error."
msgstr "Числовые и строковые сравнения. Эти операторы возвращают ``1``, если сравнение прошло успешно, в противном случае - пустую строку (``''``). Сравнения не ассоциативны: ``a < b < c`` - синтаксическая ошибка."

#: ../../__w/calibre/calibre/manual/template_lang.rst:308
msgid ""
"String concatenation (``&``). The ``&`` operator returns a string formed by "
"concatenating the left-hand and right-hand expressions. Example: ``'aaa' & "
"'bbb'`` returns ``'aaabbb'``. The operator is associative and evaluates left"
" to right."
msgstr "Конкатенация строк (``&``). Оператор ``&`` возвращает строку сформированную путем объединения левого и правого выражений. Пример: ``'aaa' & 'bbb'` возвращает ``'aaabbb'``. Оператор является ассоциативным и оценивает слева направо."

#: ../../__w/calibre/calibre/manual/template_lang.rst:309
msgid ""
"Unary logical not (``!``). This operator returns ``'1'`` if the expression "
"is False (evaluates to the empty string), otherwise ``''``."
msgstr "Унарное логическое НЕ (``!``). Этот оператор возвращает ``'1'``, если выражение ложно (возвращает пустую строку), в противном случае ``''``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:310
msgid ""
"Logical and (``&&``). This operator returns '1' if both the left-hand and "
"right-hand expressions are True, or the empty string ``''`` if either is "
"False. It is associative, evaluates left to right, and does `short-"
"circuiting <https://chortle.ccsu.edu/java5/Notes/chap40/ch40_2.html>`_."
msgstr "Логическое и (``&&``). Этот оператор возвращает '1', если и левое, и правое выражения имеют значение True, или пустую строку ``''``, если любое из них имеет значение False. Он ассоциативен, вычисляется слева направо и выполняет `short-circuiting `_."

#: ../../__w/calibre/calibre/manual/template_lang.rst:311
msgid ""
"Logical or (``||``). This operator returns ``'1'`` if either the left-hand "
"or right-hand expression is True, or ``''`` if both are False. It is "
"associative, evaluates left to right, and does `short-circuiting "
"<https://chortle.ccsu.edu/java5/Notes/chap40/ch40_2.html>`_. It is an "
"`inclusive or`, returning ``'1'`` if both the left- and right-hand "
"expressions are True."
msgstr "Логическое ИЛИ (``||``). Этот оператор возвращает ``1``, если левое или правое выражение истинно, или ``''``, если оба ложны. Он ассоциативен, вычисляется слева направо и выполняет `short-circuiting `_. Это `включающее ИЛИ`, возвращающее``'1'``, если и левое, и правое выражения истинны."

#: ../../__w/calibre/calibre/manual/template_lang.rst:313
msgid "**Field references**"
msgstr "**Ссылки на поля**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:315
msgid ""
"A ``field_reference`` evaluates to the value of the metadata field named by "
"lookup name that follows the ``$`` or ``$$``. Using ``$`` is equivalent to "
"using the :ref:`ff_field` function. Using ``$$`` is equivalent to using the "
":ref:`ff_raw_field` function. Examples::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:322
msgid "**If expressions**"
msgstr "**If выражения** "

#: ../../__w/calibre/calibre/manual/template_lang.rst:324
msgid ""
"``If`` expressions first evaluate the ``condition``. If the ``condition`` is"
" True (a non-empty value) then the ``expression_list`` in the ``then`` "
"clause is evaluated. If it is False then if present the ``expression_list`` "
"in the ``elif`` or ``else`` clause is evaluated. The ``elif`` and ``else`` "
"parts are optional. The words ``if``, ``then``, ``elif``, ``else``, and "
"``fi`` are reserved; you cannot use them as identifier names. You can put "
"newlines and white space wherever they make sense. The ``condition`` is a "
"``top_expression`` not an ``expression_list``; semicolons are not allowed. "
"The ``expression_lists`` are semicolon-separated sequences of "
"``top_expressions``. An ``if`` expression returns the result of the last "
"``top_expression`` in the evaluated ``expression_list``, or the empty string"
" if no expression list was evaluated."
msgstr "Выражения ``if`` сначала оценивают условие. Если ``condition`` равно True (непустое значение), тогда ``expression_list`` в предложении ``then`` оценивается. Если оно равно False, то при его наличии вычисляется список выражений в предложении ``elif`` или ``else``. Части ``elif`` и ``else`` не являются обязательными. Слова ``if``, ``then``, ``elif``, ``else`` и ``fi`` зарезервированы; вы не можете использовать их в качестве имен идентификаторов. Вы можете помещать символы новой строки и пробелы везде, где они имеют смысл. ``condition`` - это ``top_expression``, а не ``expression_list``; точки с запятой не допускаются. ``expression_list`` - это разделенные точкой с запятой последовательности «top_expressions». Выражение ``if`` возвращает результат последнего выражения ``top_expression`` в вычисленном списке выражений или пустую строку, если список выражений не оценивался."

#: ../../__w/calibre/calibre/manual/template_lang.rst:326
msgid "Examples::"
msgstr "Примеры::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:339
msgid "Nested ``if`` example::"
msgstr "Пример вложенного ``if``::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:352
msgid ""
"As said above, an ``if`` produces a value. This means that all the following"
" are equivalent::"
msgstr "Как сказано выше, ``if`` выдаёт значение. Это означает, что всё следующее эквивалентно::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:358
msgid ""
"For example, this program returns the value of the ``series`` column if the "
"book has a series, otherwise the value of the ``title`` column::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:362
msgid "**For expressions**"
msgstr "**For выражения**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:364
msgid ""
"The ``for`` expression iterates over a list of values, processing them one "
"at a time. The ``list_expression`` must evaluate either to a metadata field "
"``lookup name`` e.g., ``tags`` or ``#genre``, or to a list of values. The "
":ref:`ff_range` generates a list of numbers. If the result is a valid "
"``lookup name`` then the field's value is fetched and the separator "
"specified for that field type is used. If the result isn't a valid lookup "
"name then it is assumed to be a list of values. The list is assumed to be "
"separated by commas unless the optional keyword ``separator`` is supplied, "
"in which case the list values must be separated by the result of evaluating "
"the ``separator_expr``. A separator cannot be used if the list is generated "
"by ``range()``. Each value in the list is assigned to the specified variable"
" then the ``expression_list`` is evaluated. You can use ``break`` to jump "
"out of the loop, and ``continue`` to jump to the beginning of the loop for "
"the next iteration."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:366
msgid ""
"Example: This template removes the first hierarchical name for each value in"
" Genre (``#genre``), constructing a list with the new names::"
msgstr "Пример: этот шаблон удаляет первое иерархическое имя для каждого значения в жанре (``#genre``), создавая список с новыми именами::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:376
msgid ""
"If the original Genre is `History.Military, Science Fiction.Alternate "
"History, ReadMe` then the template returns `Military, Alternate History, "
"ReadMe`. You could use this template in calibre's :guilabel:`Edit metadata "
"in bulk -> Search & replace` with :guilabel:`Search for` set to ``template``"
" to strip off the first level of the hierarchy and assign the resulting "
"value to Genre."
msgstr "Если исходный жанр -  `History.Military, Science Fiction.Alternate History, ReadMe`, то шаблон возвращает `Military, Alternate History, ReadMe`. Вы можете использовать этот шаблон в calibre :guilabel:`Массовое редактирование метаданных - Поиск и замена` с помощью: guilabel:` Search for`, установленного на ``template``, чтобы удалить первый уровень иерархии и присвоить полученное значение Жанру."

#: ../../__w/calibre/calibre/manual/template_lang.rst:379
msgid ""
"Note: the last line in the template, ``new_tags``, isn't strictly necessary "
"in this case because ``for`` returns the value of the last top_expression in"
" the expression list. The value of an assignment is the value of its "
"expression, so the value of the ``for`` statement is what was assigned to "
"``new_tags``."
msgstr "Примечание: последняя строка в шаблоне, ``new_tags``, в этом случае не является строго необходимой, потому что ``for`` возвращает значение последнего ``top_expression`` в списке выражений. Значение присваивания - это значение его выражения, поэтому значение оператора ``for`` - это то, что было присвоено ``new_tags``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:381
msgid "**Function definition**"
msgstr "**Определение функции**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:383
msgid ""
"If you have repeated code in a template then you can put that code into a "
"local function. The ``def`` keyword starts the definition. It is followed by"
" the function name, the argument list, then the code in the function. The "
"function definition ends with the ``fed`` keyword."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:385
msgid ""
"Arguments are positional. When a function is called the supplied arguments "
"are matched left to right against the defined parameters, with the value of "
"the argument assigned to the parameter. It is an error to provide more "
"arguments than defined parameters. Parameters can have default values, such "
"as ``a = 25``. If an argument is not supplied for that parameter then the "
"default value is used, otherwise the parameter is set to the empty string."
msgstr "Аргументы позиционные. При вызове функции предоставленные аргументы сопоставляются слева направо с определенными параметрами, при этом значение аргумента присваивается параметру. Будет ошибкой указывать больше аргументов, чем определено параметров. Параметры могут иметь значения по умолчанию, например ``a = 25``. Если для этого параметра не указан аргумент, используется значение по умолчанию, в противном случае параметру присваивается пустая строка."

#: ../../__w/calibre/calibre/manual/template_lang.rst:387
msgid "The ``return`` statement can be used in a local function."
msgstr "Оператор ``return`` можно использовать в локальной функции."

#: ../../__w/calibre/calibre/manual/template_lang.rst:389
msgid "A function must be defined before it can be used."
msgstr "Функция должна быть определена до того, как её можно будет использовать."

#: ../../__w/calibre/calibre/manual/template_lang.rst:391
msgid ""
"Example: This template computes an approximate duration in years, months, "
"and days from a number of days. The function ``to_plural()`` formats the "
"computed values. Note that the example also uses the ``&`` operator::"
msgstr "Пример. Этот шаблон вычисляет приблизительную продолжительность в годах, месяцах и днях из числа дней. Функция ``to_plural()`` форматирует вычисляемые значения. Обратите внимание, что в примере также используется оператор ``&``::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:406
msgid "**Relational operators**"
msgstr "**Операторы отношения**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:408
msgid ""
"Relational operators return ``'1'`` if the comparison is true, otherwise the"
" empty string (``''``)."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:410
msgid ""
"There are two forms of relational operators: string comparisons and numeric "
"comparisons."
msgstr "Есть две формы операторов отношения: сравнение строк и сравнение чисел."

#: ../../__w/calibre/calibre/manual/template_lang.rst:412
msgid ""
"String comparisons do case-insensitive string comparison using lexical "
"order. The supported string comparison operators are ``==``, ``!=``, ``<``, "
"``<=``, ``>``, ``>=``, ``in``, ``inlist``, and ``inlist_field``. For the "
"``in`` operator, the result of the left hand expression is interpreted as a "
"regular expression pattern. The ``in`` operator is True if the value of "
"left-hand regular expression matches the value of the right hand expression."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:415
msgid ""
"The ``inlist`` operator is true if the left hand regular expression matches "
"any one of the items in the right hand list where the items in the list are "
"separated by commas. The ``inlist_field`` operator is true if the left hand "
"regular expression matches any of the items in the field (column) named by "
"the right hand expression, using the separator defined for the field. NB: "
"the ``inlist_field`` operator requires the right hand expression to evaluate"
" to a field name, while the ``inlist`` operator requires the right hand "
"expression to evaluate to a string containing a comma-separated list. "
"Because of this difference, ``inlist_field`` is substantially faster than "
"``inlist`` because no string conversions or list constructions are done. The"
" regular expressions are case-insensitive."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:417
msgid ""
"The numeric comparison operators are ``==#``, ``!=#``, ``<#``, ``<=#``, "
"``>#``, ``>=#``. The left and right expressions must evaluate to numeric "
"values with two exceptions: both the string value \"None\" (undefined field)"
" and the empty string evaluate to the value zero."
msgstr "Операторы сравнения чисел: ``==#``, ``!=#``, ``<#``, ``<=#``, ``>#``, ``>=#``. Левое и правое выражения должны оцениваться как числовые значения с двумя исключениями: как строковое значение \"None\" (неопределенное поле), так и пустая строка оцениваются как нулевое значение."

#: ../../__w/calibre/calibre/manual/template_lang.rst:419
msgid "Examples:"
msgstr "Примеры:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:421
msgid ""
"``program: field('series') == 'foo'`` returns ``'1'`` if the book's series "
"is `foo`, otherwise ``''``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:422
msgid ""
"``program: 'f.o' in field('series')`` returns ``'1'`` if the book's series "
"matches the regular expression ``f.o`` (e.g., `foo`, `Off Onyx`, etc.), "
"otherwise ``''``."
msgstr "``program: 'f.o' in field('series')`` вернёт ``'1'`` если серия книги соответствует регулярному выражению ``f.o`` (например, `foo`, `Off Onyx` и т. д.), иначе ``''``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:423
msgid ""
"``program: 'science' inlist $#genre`` returns ``'1'`` if any of the values "
"retrieved from the book's genres match the regular expression ``science``, "
"e.g., `Science`, `History of Science`, `Science Fiction` etc., otherwise "
"``''``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:424
msgid ""
"``program: '^science$' inlist $#genre`` returns ``'1'`` if any of the book's"
" genres exactly match the regular expression ``^science$``, e.g., `Science`,"
" otherwise ``''``. The genres `History of Science` and `Science Fiction` "
"don't match."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:425
msgid ""
"``program: 'asimov' inlist $authors`` returns ``'1'`` if any author matches "
"the regular expression ``asimov``, e.g., `Asimov, Isaac` or `Isaac Asimov`, "
"otherwise ``''``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:426
msgid ""
"``program: 'asimov' inlist_field 'authors'`` returns ``'1'`` if any author "
"matches the regular expression ``asimov``, e.g., `Asimov, Isaac` or `Isaac "
"Asimov`, otherwise ``''``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:427
msgid ""
"``program: 'asimov$' inlist_field 'authors'`` returns ``'1'`` if any author "
"matches the regular expression ``asimov$``, e.g., `Isaac Asimov`, otherwise "
"``''``. It doesn't match `Asimov, Isaac` because of the ``$`` anchor in the "
"regular expression."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:428
msgid ""
"``program: if field('series') != 'foo' then 'bar' else 'mumble' fi`` returns"
" ``'bar'`` if the book's series is not `foo`. Otherwise it returns "
"``'mumble'``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:429
msgid ""
"``program: if field('series') == 'foo' || field('series') == '1632' then "
"'yes' else 'no' fi`` returns ``'yes'`` if series is either `foo` or `1632`, "
"otherwise ``'no'``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:430
msgid ""
"``program: if '^(foo|1632)$' in field('series') then 'yes' else 'no' fi`` "
"returns ``'yes'`` if series is either `foo` or `1632`, otherwise ``'no'``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:431
msgid ""
"``program: if 11 > 2 then 'yes' else 'no' fi`` returns ``'no'`` because the "
"``>`` operator does a lexical comparison."
msgstr "``program: if 11 > 2 then 'yes' else 'no' fi`` returns ``'no'`` because the ``>`` оператор выполняет лексическое сравнение."

#: ../../__w/calibre/calibre/manual/template_lang.rst:432
msgid ""
"``program: if 11 ># 2 then 'yes' else 'no' fi`` returns ``'yes'`` because "
"the ``>#`` operator does a numeric comparison."
msgstr "``program: if 11 ># 2 then 'yes' else 'no' fi`` вернёт ``'yes'``  потому что оператор  ``>#`` выполняет числовое сравнение."

#: ../../__w/calibre/calibre/manual/template_lang.rst:434
msgid "**Functions in General Program Mode**"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:436
msgid ""
"See :ref:`template_functions_reference` for the list of functions built into"
" the template language."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:440
msgid ""
"As opposed to :ref:`Single Function Mode <single_mode>`, in General Program "
"Mode you must specify the first parameter ``value``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:441
msgid "All parameters are expression_lists (see the grammar above)."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:446
msgid "More complex programs in template expressions - Template Program Mode"
msgstr "Более сложные программы в шаблонных выражениях - Template Program Mode"

#: ../../__w/calibre/calibre/manual/template_lang.rst:448
msgid ""
"`Template Program Mode` (`TPM`) is a blend of :ref:`General Program Mode "
"<general_mode>` and :ref:`Single Function Mode <single_mode>`. `TPM` differs"
" from Single Function Mode in that it permits writing template expressions "
"that refer to other metadata fields, use nested functions, modify variables,"
" and do arithmetic. It differs from `General Program Mode` in that the "
"template is contained between ``{`` and ``}`` characters and doesn't begin "
"with the word ``program:``. The program portion of the template is a General"
" Program Mode expression list."
msgstr "`Template Program Mode` (`TPM`) - смесь :ref:`General Program Mode` и :ref:` Single Function Mode`. TPM отличается от режима одиночной функции тем, что он позволяет писать шаблонные выражения, которые ссылаются на другие поля метаданных, используют вложенные функции, изменяют переменные и выполняют арифметические операции. Он отличается от `General Program Mode` тем, что шаблон заключен между символами``{`` и``}``и не начинается со слова ``program:``. Программная часть шаблона - это список выражений General Program Mode."

#: ../../__w/calibre/calibre/manual/template_lang.rst:451
msgid ""
"Example: assume you want a template to show the series for a book if it has "
"one, otherwise show the value of a custom field #genre. You cannot do this "
"in the :ref:`Single Function Mode <single_mode>` because you cannot make "
"reference to another metadata field within a template expression. In `TPM` "
"you can, as the following expression demonstrates::"
msgstr "Пример: предположим, что вы хотите, чтобы шаблон отображал серию книги, если она есть, в противном случае показывала бы значение настраиваемого поля #genre. Вы не можете сделать это в :ref:`Single Function Mode <single_mode>`, потому что вы не можете ссылаться на другое поле метаданных в выражении шаблона. В `TPM` это можно сделать, как демонстрирует следующее выражение::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:456
msgid "The example shows several things:"
msgstr "Пример показывает несколько вещей:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:458
msgid ""
"`TPM` is used if the expression begins with ``:'`` and ends with ``'}``. "
"Anything else is assumed to be in :ref:`Single Function Mode <single_mode>`."
msgstr "`TPM` используется, если выражение начинается с ``:'`` и заканчивается ``'}``. Предполагается, что все остальное находится в :ref:`Single Function Mode<single_mode>`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:460
msgid ""
"If the template contains a prefix and suffix, the expression ends with "
"``'|`` where the ``|`` is the delimiter for the prefix. Example::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:464
msgid ""
"Functions must be given all their arguments. For example, the standard "
"built-in functions must be given the initial parameter ``value``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:465
msgid ""
"The variable ``$`` is usable as the ``value`` argument and stands for the "
"value of the field named in the template, ``series_index`` in this case."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:466
msgid "white space is ignored and can be used anywhere within the expression."
msgstr "пробелы игнорируются и могут использоваться в любом месте выражения."

#: ../../__w/calibre/calibre/manual/template_lang.rst:467
msgid ""
"constant strings are enclosed in matching quotes, either ``'`` or ``\"``."
msgstr "константные строки заключаются в соответствующие кавычки, либо ``'``, либо ``''``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:469
msgid ""
"In `TPM`, using ``{`` and ``}`` characters in string literals can lead to "
"errors or unexpected results because they confuse the template processor. It"
" tries to treat them as template expression boundaries, not characters. In "
"some but not all cases you can replace a ``{`` with ``[[`` and a ``}`` with "
"`]]`. Generally, if your program contains ``{`` and ``}`` characters then "
"you should use `General Program Mode`."
msgstr "В TPM использование символов ``{`` и ``}`` в строковых литералах может привести к ошибкам или неожиданным результатам, поскольку они сбивают с толку обработчик шаблонов. Он пытается рассматривать их как границы выражения шаблона, а не как символы. В некоторых, но не во всех случаях, вы можете заменить ``{`` на ``[[`` и ``}`` на ``]]``. Как правило, если ваша программа содержит символы ``{`` и ​​``}``, вам следует использовать `General Program Mode`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:474
msgid "Python Template Mode"
msgstr "Режим шаблона Python"

#: ../../__w/calibre/calibre/manual/template_lang.rst:476
msgid ""
"Python Template Mode (PTM) lets you write templates using native Python and "
"the `calibre API <https://manual.calibre-ebook.com/develop.html#api-"
"documentation-for-various-parts-of-calibre>`_. The database API will be of "
"most use; further discussion is beyond the scope of this manual. PTM "
"templates are faster and can do more complicated operations but you must "
"know how to write code in Python using the calibre API."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:478
msgid "A PTM template begins with:"
msgstr "Шаблон PTM начинается с:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:496
msgid ""
"You can add the above text to your template using the context menu, usually "
"accessed with a right click. The comments are not significant and can be "
"removed. You must use python indenting."
msgstr "Вы можете добавить приведенный выше текст в свой шаблон с помощью контекстного меню, доступ к которому обычно осуществляется с помощью щелчка правой кнопкой мыши. Комментарии несущественны и могут быть удалены. Вы должны использовать отступы Python."

#: ../../__w/calibre/calibre/manual/template_lang.rst:498
msgid ""
"The context object supports ``str(context)`` that returns a string of the "
"context's contents, and ``context.attributes`` that returns a list of the "
"attribute names in the context."
msgstr "Объект контекста поддерживает ``str(context)``, который возвращает строку содержимого контекста, и ``context.attributes``, который возвращает список имён атрибутов в контексте."

#: ../../__w/calibre/calibre/manual/template_lang.rst:500
msgid ""
"The ``context.funcs`` attribute allows calling Built-in and User template "
"functions, and Stored GPM/Python templates, so that you can execute them "
"directly in your code. The functions are retrieved using their names. If the"
" name conflicts with a Python keyword, add an underscore to the end of the "
"name. Examples:"
msgstr "Атрибут ``context.funcs`` позволяет вызывать встроенные и пользовательские функции шаблонов, а также Сохранённые шаблоны GPM/Python, чтобы вы могли выполнять их непосредственно в своем коде. Функции извлекаются по их именам. Если имя конфликтует с ключевым словом Python, добавьте в конце имени символ подчеркивания. Примеры:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:507
msgid ""
"Here is an example of a PTM template that produces a list of all the authors"
" for a series. The list is stored in a `Column built from other columns, "
"behaves like tags`. It shows in :guilabel:`Book details` and has the "
":guilabel:`on separate lines` checked (in :guilabel:`Preferences->Look & "
"feel->Book details`). That option requires the list to be comma-separated. "
"To satisfy that requirement the template converts commas in author names to "
"semicolons then builds a comma-separated list of authors. The authors are "
"then sorted, which is why the template uses author_sort."
msgstr "Вот пример шаблона PTM, который создает список всех авторов серии. Список хранится как  `Столбец, состоящий из других столбцов, ведущих себя как теги`. Он отображается в :guilabel:`Описание книги` и отмечен как :guilabel:`Категории в отдельных строках` (в :guilabel:`Настройки->Оформление->Описание книги`). Этот параметр требует, чтобы список был разделён запятыми. Чтобы удовлетворить это требование, шаблон преобразует запятые в именах авторов в точки с запятой, а затем создаёт список авторов, разделённых запятыми. Затем авторы сортируются, поэтому в шаблоне используется author_sort."

#: ../../__w/calibre/calibre/manual/template_lang.rst:528
msgid "The output in :guilabel:`Book details` looks like this:"
msgstr "Вывод в :guilabel:`Описание книги` выглядит так:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:530
msgid "E-book conversion dialog"
msgstr "Диалог конвертации электронной книги"

#: ../../__w/calibre/calibre/manual/template_lang.rst:536
msgid "Stored templates"
msgstr "Сохранённые шаблоны"

#: ../../__w/calibre/calibre/manual/template_lang.rst:538
msgid ""
"Both :ref:`General Program Mode <general_mode>` and :ref:`Python Template "
"Mode <python_mode>` support saving templates and calling those templates "
"from another template, much like calling stored functions. You save "
"templates using :guilabel:`Preferences->Advanced->Template functions`. More "
"information is provided in that dialog. You call a template the same way you"
" call a function, passing positional arguments if desired. An argument can "
"be any expression. Examples of calling a template, assuming the stored "
"template is named ``foo``:"
msgstr "И :ref:`Общий программный режим <general_mode>`, и :ref:`Режим шаблона Python <python_mode>` поддерживают сохранение шаблонов и вызов этих шаблонов из другого шаблона, во многом аналогично вызову хранимых функций. Вы сохраняете шаблоны, используя :guilabel:`Настройки->Расширенные->Шаблонные функции`. В этом диалоговом окне - ​​дополнительная информация. Вы вызываете шаблон так же, как вызываете функцию, передавая позиционные аргументы, если необходимо. Аргументом может быть любое выражение. Примеры вызова шаблона, предполагая, что сохраненный шаблон называется ``foo``:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:540
msgid "``foo()`` -- call the template passing no arguments."
msgstr "``foo()`` -- вызов шаблона без аргументов."

#: ../../__w/calibre/calibre/manual/template_lang.rst:541
msgid ""
"``foo(a, b)`` call the template passing the values of the two variables "
"``a`` and ``b``."
msgstr "``foo(a, b)`` вызывает шаблон, передавая значения переменных ``a`` и ``b``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:542
msgid ""
"``foo(if field('series') then field('series_index') else 0 fi)`` -- if the "
"book has a ``series`` then pass the ``series_index``, otherwise pass the "
"value ``0``."
msgstr "``foo(if field('series') then field('series_index') else 0 fi)`` -- если в книге есть ``series``, то передать ``series_index``, в противном случае - значение ``0``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:544
msgid ""
"In GPM you retrieve the arguments passed in the call to the stored template "
"using the ``arguments`` function. It both declares and initializes local "
"variables, effectively parameters. The variables are positional; they get "
"the value of the parameter given in the call in the same position. If the "
"corresponding parameter is not provided in the call then ``arguments`` "
"assigns that variable the provided default value. If there is no default "
"value then the variable is set to the empty string. For example, the "
"following ``arguments`` function declares 2 variables, ``key``, "
"``alternate``::"
msgstr "В GPM вы извлекаете аргументы, переданные при вызове сохраненного шаблона, с помощью функции ``arguments``. Она и объявляет, и инициализирует локальные переменные, фактически параметры. Переменные являются позиционными; они получают значение параметра, заданного при вызове, в той же позиции. Если соответствующий параметр не указан в вызове, тогда ``arguments`` присваивает этой переменной предоставленное значение по умолчанию. Если значение по умолчанию отсутствует, переменной присваивается пустая строка. Например, следующая функция ``arguments`` объявляет 2 переменные, ``key``, ``alternate``::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:548
msgid "Examples, again assuming the stored template is named ``foo``:"
msgstr "Примеры, снова предполагаем, что сохраненный шаблон назван ``foo``:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:550
msgid ""
"``foo('#myseries')`` -- argument ``key`` is assigned the value "
"``'myseries'`` and the argument ``alternate`` is assigned the default value "
"``'series'``."
msgstr "``foo('#myseries')`` -- аргументу ``key`` присваивается значение ``'myseries'``, а аргументу ``alternate`` присваивается значение по умолчанию ``'series'``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:551
msgid ""
"``foo('series', '#genre')`` the variable ``key`` is assigned the value "
"``'series'`` and the variable ``alternate`` is assigned the value "
"``'#genre'``."
msgstr "``foo('series', '#genre') переменной ``key`` присваивается значение ``'series'``, а переменной ``alternate`` присваивается значение ``'#genre'``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:552
msgid ""
"``foo()`` -- the variable ``key`` is assigned the empty string and the "
"variable ``alternate`` is assigned the value ``'series'``."
msgstr "``foo()`` - переменной ``key`` присваивается пустая строка, а переменной ``alternate`` присваивается значение ``'series'``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:554
msgid ""
"In PTM the arguments are passed in the ``arguments`` parameter, which is a "
"list of strings. There isn't any way to specify default values. You must "
"check the length of the ``arguments`` list to be sure that the number of "
"arguments is what you expect."
msgstr "В PTM аргументы передаются в параметре ``arguments``, который представляет собой список строк. Невозможно указать значения по умолчанию. Вы должны проверить длину списка ``аргументов``, чтобы убедиться, что количество аргументов соответствует ожидаемому."

#: ../../__w/calibre/calibre/manual/template_lang.rst:556
msgid ""
"An easy way to test stored templates is using the ``Template tester`` "
"dialog. For ease of access give it a keyboard shortcut in "
":guilabel:`Preferences->Advanced->Keyboard shortcuts->Template tester`. "
"Giving the ``Stored templates`` dialog a shortcut will help switching more "
"rapidly between the tester and editing the stored template's source code."
msgstr "Простой способ проверить сохраненные шаблоны - использовать диалоговое окно ``Тестер шаблонов``. Для облегчения доступа используйте сочетание клавиш в :guilabel:`Preferences-Advanced-Keyboard shortcuts-Template tester`. Ярлык для диалогового окна ``Сохраненные шаблоны``' поможет быстрее переключаться между тестером и редактированием исходного кода сохраненного шаблона."

#: ../../__w/calibre/calibre/manual/template_lang.rst:559
msgid "Providing additional information to templates"
msgstr "Передача шаблонам дополнительной информации"

#: ../../__w/calibre/calibre/manual/template_lang.rst:561
msgid ""
"A developer can choose to pass additional information to the template "
"processor, such as application-specific book metadata or information about "
"what the processor is being asked to do. A template can access this "
"information and use it during the evaluation."
msgstr "Разработчик может выбрать передачу дополнительной информации процессору шаблонов, например метаданные книги для конкретного приложения или информацию о том, что процессору предлагается сделать. Шаблон может получить доступ к этой информации и использовать ее во время оценки."

#: ../../__w/calibre/calibre/manual/template_lang.rst:563
msgid "**Developer: how to pass additional information**"
msgstr "** Разработчик: как передать дополнительную информацию **"

#: ../../__w/calibre/calibre/manual/template_lang.rst:565
msgid ""
"The additional information is a Python dictionary containing pairs "
"``variable_name: variable_value`` where the values must be strings. The "
"template can access the dictionary, creating template local variables named "
"``variable_name`` containing the value ``variable_value``. The user cannot "
"change the name so it is best to use names that won't collide with other "
"template local variables, for example by prefixing the name with an "
"underscore."
msgstr "Дополнительная информация - это словарь ``dict`` Python, содержащий пары ``variable_name: variable_value``, где значения должны быть строками. Шаблон может получить доступ к ``dict``, создавая локальные переменные шаблона с именем ``variable_name``, содержащие значение ``variable_value``. Пользователь не может изменить имя, поэтому лучше использовать имена, которые не будут конфликтовать с другими локальными переменными шаблона, например, добавив к имени префикс подчеркивания _."

#: ../../__w/calibre/calibre/manual/template_lang.rst:567
msgid ""
"This dictionary is passed to the template processor (the ``formatter``) "
"using the named parameter ``global_vars=your_dict``. The full method "
"signature is::"
msgstr "Этот dict передается процессору шаблонов (``formatter``) с использованием именованного параметра ``global_vars=your_dict``. Полная сигнатура метода::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:575
msgid "**Template writer: how to access the additional information**"
msgstr "** Автор шаблона: как получить доступ к дополнительной информации **"

#: ../../__w/calibre/calibre/manual/template_lang.rst:577
msgid ""
"You access the additional information (the ``globals`` dictionary) in a "
"template using the template function::"
msgstr "Вы получаете доступ к дополнительной информации (словарю ``globals``) в шаблоне с помощью шаблонной функции::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:581
msgid ""
"where ``id`` is any legal variable name. This function checks whether the "
"additional information provided by the developer contains the name. If it "
"does then the function assigns the provided value to a template local "
"variable with that name. If the name is not in the additional information "
"and if an ``expression`` is provided, the ``expression`` is evaluated and "
"the result is assigned to the local variable. If neither a value nor an "
"expression is provided, the function assigns the empty string (``''``) to "
"the local variable."
msgstr "где ``id`` - любое допустимое имя переменной. Эта функция проверяет, содержит ли дополнительная информация, предоставленная разработчиком, имя. Если это так, функция присваивает предоставленное значение локальной переменной шаблона с этим именем. Если имя отсутствует в дополнительной информации и если предоставлено ``expression``, то ``expression`` оценивается, и результат присваивается локальной переменной. Если ни значение, ни выражение не предоставлены, функция присваивает пустую строку  (``''``) локальной переменной."

#: ../../__w/calibre/calibre/manual/template_lang.rst:583
msgid ""
"A template can set a value in the ``globals`` dictionary using the template "
"function::"
msgstr "Шаблон может установить значение в словаре ``globals`` с помощью шаблонной функции::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:587
msgid ""
"This function sets the ``globals`` dictionary key:value pair ``id:value`` "
"where ``value`` is the value of the template local variable ``id``. If that "
"local variable doesn't exist then ``value`` is set to the result of "
"evaluating ``expression``."
msgstr "Эта функция устанавливает ``globals`` dict key:value пару ``id:value``, где ``value`` - значение шаблонной локальной переменной ``id``. Если эта локальная переменная не существует, тогда ``value`` устанавливается равным результату вычисления выражения ``expression``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:590
msgid "Notes on the difference between modes"
msgstr "Замечания о разнице между режимами"

#: ../../__w/calibre/calibre/manual/template_lang.rst:592
msgid ""
"The three program modes, :ref:`Single Function Mode <single_mode>` (SFM), "
":ref:`Template Program Mode <template_mode>` (`TPM`), and :ref:`General "
"Program Mode <general_mode>` (`GPM`), work differently. SFM is intended to "
"be 'simple' so it hides a lot of programming language bits."
msgstr "Три программных режима :ref:`Single Function Mode <single_mode>` (SFM), :ref:`Template Program Mode <template_mode>` (`TPM`) и :ref:`General Program Mode <general_mode>` (`GPM`) работают по-разному. SFM задуман как 'простой', поэтому он скрывает много тонкостей в языке программирования."

#: ../../__w/calibre/calibre/manual/template_lang.rst:594
msgid "Differences:"
msgstr "Различия:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:596
msgid ""
"In SFM the value of the column is always passed as an 'invisible' first "
"argument to a function included in the template."
msgstr "В SFM значение столбца всегда передается как 'invisible' «невидимый» первый аргумент функции, включенной в шаблон."

#: ../../__w/calibre/calibre/manual/template_lang.rst:597
msgid ""
"SFM doesn't support the difference between variables and strings; all values"
" are strings."
msgstr "SFM не поддерживает разницу между переменными и строками; все значения являются строками."

#: ../../__w/calibre/calibre/manual/template_lang.rst:598
msgid ""
"The following SFM template returns either the series name or the string \"no"
" series\"::"
msgstr "Следующий шаблон SFM возвращает либо название серии, либо строку \"no series\"::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:602
msgid "The equivalent template in `TPM` is ::"
msgstr "Эквивалентный шаблон в `TPM` ::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:606
msgid "The equivalent template in `GPM` is::"
msgstr "Эквивалентный шаблон в `GPM` ::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:610
msgid ""
"The first argument to ``ifempty`` is the value of the field ``series``. The "
"second argument is the string ``no series``. In SFM the first argument, the "
"value of the field, is automatically passed (the invisible argument)."
msgstr "Первый аргумент ``ifempty`` - это значение поля ``series``. Второй аргумент - это строка ``no series``. В SFM автоматически передается первый аргумент, значение поля (невидимый аргумент)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:611
msgid ""
"Several template functions, for example ``booksize()`` and "
"``current_library_name()``, take no arguments. Because of the 'invisible "
"argument' you cannot use these functions in SFM."
msgstr "Некоторые функции-шаблоны, например, ``booksize()`` и ``current_library_name()``, не принимают аргументов. Из-за 'невидимого аргумента' вы не можете использовать эти функции в SFM."

#: ../../__w/calibre/calibre/manual/template_lang.rst:612
msgid ""
"Nested functions, where a function calls another function to compute an "
"argument, cannot be used in SFM. For example this template, intended to "
"return the first 5 characters of the series value uppercased, won't work in "
"SFM::"
msgstr "Вложенные функции, когда функция вызывает другую функцию для вычисления аргумента, не могут использоваться в SFM. Например, этот шаблон, предназначенный для возврата первых 5 символов значения серии в верхнем регистре, не будет работать в SFM::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:616
msgid ""
"`TPM` and `GPM` support nested functions. The above template in `TPM` would "
"be::"
msgstr "`TPM` и `GPM` поддерживают вложенные функции. Вышеупомянутый шаблон в `TPM` будет::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:620
msgid "In `GPM` it would be::"
msgstr "В GPM это было бы::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:624
msgid ""
"As noted in the above :ref:`Template Program Mode <template_mode>` section, "
"using ``{`` and ``}`` characters in `TPM` string literals can lead to errors"
" or unexpected results because they confuse the template processor. It tries"
" to treat them as template boundaries, not characters. In some but not all "
"cases you can replace a ``{`` with ``[[`` and a ``}`` with `]]`. Generally, "
"if your program contains ``{`` and ``}`` characters then you should use "
"`General Program Mode`."
msgstr "Как отмечалось выше в разделе :ref:`Template Program Mode`, использование символов ``{`` и``}`` в строковых литералах `TPM` может привести к ошибкам или неожиданным результатам, поскольку они сбивают с толку обработчик шаблонов. Он пытается рассматривать их как границы шаблона, а не как символы. В некоторых, но не во всех случаях, вы можете заменить ``{`` на ``[[`` и ``}`` на `]]`. Как правило, если ваша программа содержит символы ``{`` и ​​``}``, вам следует использовать `General Program Mode`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:628
msgid "User-defined Python template functions"
msgstr "Пользовательские шаблонные функции Python"

#: ../../__w/calibre/calibre/manual/template_lang.rst:630
msgid ""
"You can add your own Python functions to the template processor. Such "
"functions can be used in any of the three template programming modes. The "
"functions are added by going to :guilabel:`Preferences -> Advanced -> "
"Template functions`. Instructions are shown in that dialog. Note that you "
"can use `Python Templates` for a similar purpose. As calling user-defined "
"functions is faster than calling a Python template, user-defined functions "
"might be more efficient depending on the complexity of what the function or "
"template does."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:633
msgid "Special notes for save/send templates"
msgstr "Особые примечания для шаблонов сохранения/отправки"

#: ../../__w/calibre/calibre/manual/template_lang.rst:635
msgid ""
"Special processing is applied when a template is used in a `save to disk` or"
" `send to device` template. The values of the fields are cleaned, replacing "
"characters that are special to file systems with underscores, including "
"slashes. This means that field text cannot be used to create folders. "
"However, slashes are not changed in prefix or suffix strings, so slashes in "
"these strings will cause folders to be created. Because of this, you can "
"create variable-depth folder structure."
msgstr "Специальная обработка применяется, когда шаблон используется в шаблоне `save to disk` или `send to device`. Значения полей очищаются, заменяя символы, специальные для файловых систем, подчеркиванием, включая косую черту. Это означает, что текст поля нельзя использовать для создания папок. Однако косые черты не изменяются в строках префиксов или суффиксов, поэтому косые черты в этих строках вызовут создание папок. Благодаря этому вы можете создать структуру папок переменной глубины."

#: ../../__w/calibre/calibre/manual/template_lang.rst:637
msgid ""
"For example, assume we want the folder structure `series/series_index - "
"title`, with the caveat that if series does not exist, then the title should"
" be in the top folder. The template to do this is::"
msgstr "Например, предположим, что нам нужна структура папок `series/series_index - title`, с оговоркой, что если серия не существует, то заголовок должен находиться в верхней папке. Шаблон для этого::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:641
msgid "The slash and the hyphen appear only if series is not empty."
msgstr "Косая черта и дефис появляются только в том случае, если серия не пуста."

#: ../../__w/calibre/calibre/manual/template_lang.rst:643
msgid ""
"The lookup function lets us do even fancier processing. For example, assume "
"that if a book has a series, then we want the folder structure "
"`series/series index - title.fmt`. If the book does not have a series then "
"we want the folder structure `genre/author_sort/title.fmt`. If the book has "
"no genre then we want to use 'Unknown'. We want two completely different "
"paths, depending on the value of series."
msgstr "Функция поиска позволяет нам выполнять еще более интересную обработку. Например, предположим, что если в книге есть серия, то нам нужна структура папок `series/series index - title.fmt`. Если в книге нет серии, нам нужна структура папок `genre/author_sort/title.fmt`. Если у книги нет жанра, мы хотим использовать 'Unknown'. Нам нужны два совершенно разных пути, в зависимости от значения серии."

#: ../../__w/calibre/calibre/manual/template_lang.rst:645
msgid "To accomplish this, we:"
msgstr "Чтобы этого добиться, мы:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:647
msgid ""
"Create a composite field (give it lookup name #aa) containing "
"``{series}/{series_index} - {title}``. If the series is not empty, then this"
" template will produce `series/series_index - title`."
msgstr "Создать составное поле (дать ему имя для поиска #aa), содержащее ``{series}/{series_index} - {title}``. Если серия не пуста, тогда этот шаблон создаст `series/series_index - title`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:648
msgid ""
"Create a composite field (give it lookup name #bb) containing "
"``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. This template produces "
"`genre/author_sort/title`, where an empty genre is replaced with `Unknown`."
msgstr "Создать составное поле (дать ему имя для поиска #bb), содержащее ``{#genre: ifempty (Unknown)}/{author_sort}/{title}``. Этот шаблон создаст `genre /author_sort/title`, где пустой жанр заменяется на `Unknown`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:649
msgid ""
"Set the save template to ``{series:lookup(.,#aa,#bb)}``. This template "
"chooses composite field ``#aa`` if series is not empty and composite field "
"``#bb`` if series is empty. We therefore have two completely different save "
"paths, depending on whether or not `series` is empty."
msgstr "Установить для шаблона сохранения значение ``{series:lookup(.,#aa,#bb}``. Этот шаблон выбирает составное поле ``#aa``, если серия не пуста, и составное поле ``#bb``, если серия пуста, поэтому у нас есть два совершенно разных пути сохранения, в зависимости от того, пуста ли `series`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:652
msgid "Tips"
msgstr "Советы"

#: ../../__w/calibre/calibre/manual/template_lang.rst:654
msgid ""
"Use the Template Tester to test templates. Add the tester to the context "
"menu for books in the library and/or give it a keyboard shortcut."
msgstr "Используйте тестер шаблонов для тестирования шаблонов. Добавьте тестер в контекстное меню для книг в библиотеке и/или назначьте ему сочетание клавиш."

#: ../../__w/calibre/calibre/manual/template_lang.rst:655
msgid ""
"Templates can use other templates by referencing composite columns built "
"with the desired template. Alternatively, you can use Stored Templates."
msgstr "Шаблоны могут использовать другие шаблоны, ссылаясь на составные столбцы, построенные с помощью желаемого шаблона. В качестве альтернативы вы можете использовать сохраненные шаблоны."

#: ../../__w/calibre/calibre/manual/template_lang.rst:656
msgid ""
"In a plugboard, you can set a field to empty (or whatever is equivalent to "
"empty) by using the special template ``{}``. This template will always "
"evaluate to an empty string."
msgstr "В коммутации полю можно назначить соответствующее его типу пустое значение при помощи специального шаблона ``{}``. Он всегда соответствует пустой строке."

#: ../../__w/calibre/calibre/manual/template_lang.rst:657
msgid ""
"The technique described above to show numbers even if they have a zero value"
" works with the standard field series_index."
msgstr "Описанный выше метод отображения чисел, даже если они имеют нулевое значение, работает со стандартным полем series_index."

#: ../../__w/calibre/calibre/manual/template_lang.rst:662
msgid "Template function reference"
msgstr "Справочник по шаблонным функциям"
