# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Ömer Kaan Gürbüz <omerkaan0101omerkaangrbz@gmail.com>, 2017
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-25 09:23+0530\n"
"PO-Revision-Date: 2017-09-20 05:41+0000\n"
"Last-Translator: Ömer Kaan Gürbüz <omerkaan0101omerkaangrbz@gmail.com>\n"
"Language-Team: Turkish (http://www.transifex.com/calibre/calibre/language/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../home/kovid/work/calibre/manual/xpath.rst:4
msgid "XPath tutorial"
msgstr "XPath Rehberi"

#: ../../home/kovid/work/calibre/manual/xpath.rst:6
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<https://en.wikipedia.org/wiki/XPath>`_, a query language that can be used "
"to select arbitrary parts of `HTML <https://en.wikipedia.org/wiki/HTML>`_ "
"documents in calibre. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for e-book related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr ""

#: ../../home/kovid/work/calibre/manual/xpath.rst:19
msgid "Selecting by tag name"
msgstr "Etiket ismine göre seçim"

#: ../../home/kovid/work/calibre/manual/xpath.rst:21
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr "Seçimin en basit formu etiketleri isme göre seçmektir. Örneğin; belgedeki tüm ``<h2>`` etiketlerini seçmek istediğinizi düşünelim. XPath sorgusu basitçe şöyle olacaktır::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:27
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr "Baştaki `//` öneki *belgedeki tüm düzeylerde ara* anlamına gelmektedir. Şimdi ise ``<a>`` etiketi içindeki ``<span>``etiketlerini arıyor olalım. Bunu yapan sorgu::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:33
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr "Eğer belgedeki belirli bir düzeydeki etiketleri arayacak olursanız öneki değiştirin::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:39
msgid ""
"This will match only ``<p>A very short e-book to demonstrate the use of "
"XPath.</p>`` in the :ref:`sample_ebook` but not any of the other ``<p>`` "
"tags. The ``h:`` prefix in the above examples is needed to match XHTML tags."
" This is because internally, calibre represents all content as XHTML. In "
"XHTML tags have a *namespace*, and ``h:`` is the namespace prefix for HTML "
"tags."
msgstr ""

#: ../../home/kovid/work/calibre/manual/xpath.rst:45
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr "Şimdi ``<h1>`` ve ``<h2>`` etiketlerini seçmek isteyelim. Bunu yapabilmek için XPath'in *predicate* isimli yapısına ihtiyacımız vardır. Bir :dfn:`predicate` basitçe etiketleri seçmek için bir testtir. Testler keyfi güçlü olabilir ve bu rehber ilerledikçe, daha güçlü örneklerini göreceksiniz. Bir predicate, test ifadesinin kare parantezler içine alınmasıyla oluşturulur::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:53
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr "Bu XPath ifadesinde pek çok yenilik bulunmaktadır. Bunların ilki ``*`` karakteridir. *herhangi bir etiketle eşleş* anlamına gelmektedir. Şimdi test ifadesine bakalım ``name()='h1' or name()='h2'``. :term:`name()` *tümleşik fonksiyona* bir örnektir. Basitçe etiketin adını değerlendirir. Bu nedenle onu kullanarak, isimleri `h1` veya `h2` olan etiketleri seçebiliriz. :term:`name()` fonksiyonunun isim alanlarını yok saydığını ve bu nedenle ``h:`` ön ekine ihtiyaç olmadığına dikkat edin. XPath çok fazla tümleşik fonksiyona sahiptir. Bunlardan bir kaçına bu rehberde değinilecektir."

#: ../../home/kovid/work/calibre/manual/xpath.rst:62
msgid "Selecting by attributes"
msgstr "Özniteliğe göre seçmek"

#: ../../home/kovid/work/calibre/manual/xpath.rst:64
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr "Etiketleri özniteliklerine göre seçmek için bu ifadelerin kullanılması gereklidir::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:70
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr "Buradaki ``@`` operatörü etiketin özniteliğine karşılık gelir. Öznitelik değerleriyle ilgili daha karmaşık eşleşmeler için `XPath tümleşik fonksiyonlarını`_ kullanabilirsiniz."

#: ../../home/kovid/work/calibre/manual/xpath.rst:76
msgid "Selecting by tag content"
msgstr "Etiket içeriğine göre seçmek"

#: ../../home/kovid/work/calibre/manual/xpath.rst:78
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr "XPath kullanarak etiketleri içerdikleri metinlere göre seçebilirsiniz. Bunu yapmanın en iyi yolu :term:`re:test()` tümleşik fonksiyonunun *düzenli ifadelerini* kullanmaktır::"

#: ../../home/kovid/work/calibre/manual/xpath.rst:84
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr "Buradaki ``.`` operatörü etiketin içeriğine karşılık gelir, ``@`` operatörünün özniteliklere karşılık gelmesi gibidir."

#: ../../home/kovid/work/calibre/manual/xpath.rst:90
msgid "Sample e-book"
msgstr "Örnek e-kitap"

#: ../../home/kovid/work/calibre/manual/xpath.rst:96
msgid "XPath built-in functions"
msgstr "XPath tümleşik fonksiyonları"

#: ../../home/kovid/work/calibre/manual/xpath.rst:99
msgid "name()"
msgstr "name()"

#: ../../home/kovid/work/calibre/manual/xpath.rst:101
msgid "The name of the current tag."
msgstr "Mevcut etiketin adı."

#: ../../home/kovid/work/calibre/manual/xpath.rst:102
msgid "contains()"
msgstr "contains()"

#: ../../home/kovid/work/calibre/manual/xpath.rst:104
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr "``contains(s1, s2)`` ifadesi eğer s1, s2'yi içerirse `true` döndürür."

#: ../../home/kovid/work/calibre/manual/xpath.rst:105
msgid "re:test()"
msgstr "re:test()"

#: ../../home/kovid/work/calibre/manual/xpath.rst:107
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax "
"<https://docs.python.org/2.7/library/re.html>`_"
msgstr "``re:test(src, desen, bayraklar)`` ifadesi eğer `src` karakter dizisi `desen` düzenli ifadesiyle eşleşirse  `true` döndürür. Eşleşmeyi büyük küçük harfe duyarlı yapan ``i`` özellikle yararlı bir bayraktır. Düzenli ifadeler için iyi bir giriş `regexp sözdizimi <https://docs.python.org/2.7/library/re.html>`_ sayfasında bulunabilir"
