# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Artur de Carvalho Alves <arturcalves@gmail.com>, 2015
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2020
# JOÃO PEDRO SLONGO, 2020
# Paulo_Neto <layoutbr@lexxa.com.br>, 2014
# Patricia de Albuquerque Garcia Redondo <prbioeng@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-10 17:06+0000\n"
"PO-Revision-Date: 2014-06-17 08:35+0000\n"
"Last-Translator: Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2020\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/calibre/calibre/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:4
msgid "Writing your own plugins to extend calibre's functionality"
msgstr "Escrever seus próprios plugins para extender as funcionalidades do calibre."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:6
msgid ""
"calibre has a very modular design. Almost all functionality in calibre comes"
" in the form of plugins. Plugins are used for conversion, for downloading "
"news (though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to calibre and so on. You can get a complete list of all the built-in "
"plugins in calibre by going to :guilabel:`Preferences->Advanced->Plugins`."
msgstr "O calibre possui um design muito modular. Quase todas as funcionalidades do calibre vêm na forma de plugins. Os plug-ins são usados para conversão, para baixar notícias (embora sejam chamadas de receitas), para vários componentes da interface do usuário, para conectar-se a dispositivos diferentes, para processar arquivos ao adicioná-los ao calibre e assim por diante. Você pode obter uma lista completa de todos os plugins integrados no calibre, visitando: guilabel: `Preferências-> Avançado-> Plugins`."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:8
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to calibre."
msgstr "Aqui vamos mostrar a você como criar seus próprios plugins e adicionar novos atributos para o calibre"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:13
msgid "Contents"
msgstr "Conteúdo"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:15
msgid "This only applies to calibre releases >= 0.8.60"
msgstr "Somente se aplica as versões do calibre >= 0.8.60"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:18
msgid "Anatomy of a calibre plugin"
msgstr "Anatomia de um plugin do calibre"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:20
msgid ""
"A calibre plugin is very simple, it's just a ZIP file that contains some "
"Python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr "Um plugin de calibre é muito simples, é apenas um arquivo ZIP que contém algum código Python e outros recursos, como arquivos de imagem necessários ao plugin. Sem mais delongas, vamos ver um exemplo básico."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:24
msgid ""
"Suppose you have an installation of calibre that you are using to self "
"publish various e-documents in EPUB and MOBI formats. You would like all "
"files generated by calibre to have their publisher set as \"Hello world\", "
"here's how to do it. Create a file named :file:`__init__.py` (this is a "
"special name and must always be used for the main file of your plugin) and "
"enter the following Python code into it:"
msgstr "Suponha que você tenha uma instalação de calibre que esteja usando para publicar automaticamente vários documentos eletrônicos nos formatos EPUB e MOBI. Você deseja que todos os arquivos gerados pelo calibre tenham o editor definido como \"Olá, mundo\", veja como fazê-lo. Crie um arquivo chamado: file: `__init __. Py` (este é um nome especial e sempre deve ser usado para o arquivo principal do seu plugin) e insira o seguinte código Python nele:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:32
msgid ""
"That's all. To add this code to calibre as a plugin, simply run the "
"following in the folder in which you created :file:`__init__.py`::"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:38
msgid ""
"On macOS, the command line tools are inside the calibre bundle, for example,"
" if you installed calibre in :file:`/Applications` the command line tools "
"are in :file:`/Applications/calibre.app/Contents/MacOS/`."
msgstr "No macOS, as ferramentas de linha de comando estão dentro do pacote do calibre. Por exemplo, se você instalou o calibre em :file:`/Applications` , as ferramentas de linha de comando estão em :file:`/Applications/calibre.app/Contents/MacOS/`."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:42
msgid ""
"You can download the Hello World plugin from "
":download_file:`helloworld_plugin.zip`."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:45
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr "Toda vez que você usar o calibre para converter um livro, o método plugin: meth: `run` será chamado e o livro convertido terá seu editor definido como\" Hello World \". Este é um plugin trivial, vamos para um exemplo mais complexo que realmente adiciona um componente à interface do usuário."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:50
msgid "A User Interface plugin"
msgstr "Um plugin de Interface de Usuário"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:52
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"ZIP file, allow users to configure your plugin, how to create elements in "
"the calibre user interface and how to access and query the books database in"
" calibre."
msgstr "Este plugin será espalhado por alguns arquivos (para manter o código limpo). Ele mostrará como obter recursos (imagens ou arquivos de dados) do arquivo ZIP do plug-in, permitir que os usuários configurem seu plug-in, como criar elementos na interface do usuário do calibre e como acessar e consultar o banco de dados de livros no calibre."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:57
msgid ""
"You can download this plugin from :download_file:`interface_demo_plugin.zip`"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:61
msgid ""
"The first thing to note is that this ZIP file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr "A primeira coisa a observar é que esse arquivo ZIP contém muito mais arquivos, explicados abaixo, e preste atenção ``plugin-import-name-interface_demo.txt``."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:77
msgid "**plugin-import-name-interface_demo.txt**"
msgstr "plugin-import-name-interface_demo.tx"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:65
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: ``plugin-import-"
"name-**some_name**.txt``. The presence of this file allows you to import "
"code from the .py files present inside the ZIP file, using a statement "
"like::"
msgstr "Um arquivo de texto vazio usado para ativar a mágica do plug-in com vários arquivos. Este arquivo deve estar presente em todos os plugins que usam mais de um arquivo .py. Ele deve estar vazio e seu nome de arquivo deve estar no formato:  plugin-import-name-**some_name**.txt``. A presença desse arquivo permite importar código dos arquivos .py presentes dentro do arquivo ZIP, usando uma instrução como:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:71
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the ZIP file. Note that this importing is"
" just as powerful as regular Python imports. You can create packages and "
"subpackages of .py modules inside the ZIP file, just like you would normally"
" (by defining __init__.py in each sub-folder), and everything should \"just "
"work\"."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:76
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid Python identifier (only alphabets, numbers and the underscore)."
msgstr "O nome que você usa para `` some_name`` entra em um namespace global compartilhado por todos os plugins, ** para torná-lo o mais exclusivo possível **. Mas lembre-se de que deve ser um identificador Python válido (apenas alfabetos, números e sublinhado)"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:80
msgid "**__init__.py**"
msgstr "__init__.py"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:80
msgid "As before, the file that defines the plugin class"
msgstr "Como antes, o arquivo que define a classe de plug-in"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:83
msgid "**main.py**"
msgstr "**main.py**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:83
msgid "This file contains the actual code that does something useful"
msgstr "Este arquivo contém o código real que faz algo útil"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:86
msgid "**ui.py**"
msgstr "**ui.py**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:86
msgid "This file defines the interface part of the plugin"
msgstr "Esse arquivo define a parte de interface do plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:89
msgid "**images/icon.png**"
msgstr "**images/icon.png**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:89
msgid "The icon for this plugin"
msgstr "O ícone deste plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:92
msgid "**about.txt**"
msgstr "**about.txt**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:92
msgid "A text file with information about the plugin"
msgstr "Um arquivo de texto com informações sobre o plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:97
msgid "**translations**"
msgstr "**translations**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:95
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr "Uma pasta contendo arquivos ``.mo`` com as traduções da interface do usuário do seu plugin para diferentes idiomas. Veja abaixo os detalhes."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:99
msgid "Now let's look at the code."
msgstr "Agora vamos ver o código"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:102
msgid "__init__.py"
msgstr "__init__.py"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:104
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr "Primeiro, o obrigatório ``__init__.py`` para definir os metadados do plugin:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:109
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since "
"calibre has both command line and GUI interfaces, GUI plugins like this one "
"should not load any GUI libraries in __init__.py. The actual_plugin field "
"does this for you, by telling calibre that the actual plugin is to be found "
"in another file inside your ZIP archive, which will only be loaded in a GUI "
"context."
msgstr "O único recurso digno de nota é o campo :attr:`actual_plugin`. Como o *Calibre* tem linha de comando e interfaces *GUI*, plug-ins *GUI* como este não devem carregar nenhuma biblioteca *GUI* em ``__init__.py``. O campo ``actual_plugin`` faz isso para você, informando ao *Calibre* que o plugin real deve ser encontrado em outro arquivo dentro do seu arquivo ZIP, que só será carregado em um contexto GUI."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:114
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin ZIP file, as discussed above."
msgstr "Lembre-se de que, para que isso funcione, você deve ter um arquivo ``plugin-import-name-some_name.txt`` no arquivo ZIP do plugin, conforme discutido acima."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:117
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr "Também existem alguns métodos para habilitar a configuração do plugin pelo usuário. Eles são discutidos abaixo."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:120
msgid "ui.py"
msgstr "ui.py"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:122
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr "Agora vamos dar uma olhada em ``ui.py`` que define o plugin GUI real. O código-fonte é muito comentado e deve ser autoexplicativo:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:128
#: ../../__w/calibre/calibre/manual/creating_plugins.rst:220
msgid "main.py"
msgstr "main.py"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:130
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr "A lógica real para implementar a caixa de diálogo das *Interface Plugin Demo*."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:136
msgid "Getting resources from the plugin ZIP file"
msgstr "Obtendo recursos do arquivo *ZIP* do plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:138
msgid ""
"calibre's plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin ZIP file."
msgstr "o sistema de carregamento do plugin do calibre define algumas funções built-in que permitem obter convenientemente os arquivos do arquivo ZIP do plugin."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:148
msgid "**get_resources(name_or_list_of_names)**"
msgstr "**get_resources(name_or_list_of_names)**"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:141
msgid ""
"This function should be called with a list of paths to files inside the ZIP "
"file. For example to access the file :file:`icon.png` in the folder images "
"in the ZIP file, you would use: ``images/icon.png``. Always use a forward "
"slash as the path separator, even on Windows. When you pass in a single "
"name, the function will return the raw bytes of that file or None if the "
"name was not found in the ZIP file. If you pass in more than one name then "
"it returns a dict mapping the names to bytes.  If a name is not found, it "
"will not be present in the returned dict."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:157
msgid "**get_icons(name_or_list_of_names, plugin_name='')**"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:151
msgid ""
"A wrapper for get_resources() that creates QIcon objects from the raw bytes "
"returned by get_resources. If a name is not found in the ZIP file the "
"corresponding QIcon will be null. In order to support icon theme-ing, pass "
"in the human friendly name of your plugin as ``plugin_name``. If the user is"
" using an icon theme with icons for your plugin, they will be loaded "
"preferentially."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:160
msgid "Enabling user configuration of your plugin"
msgstr "Habilitando configuração de usuário do seu plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:162
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, **is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr "Para permitir que os usuários configurem seu plug-in, você deve definir três métodos em sua classe base de plug-in, **is_customizable()**, **config_widget()** e **save_settings()** conforme mostrado abaixo:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:173
msgid ""
"calibre has many different ways to store configuration data (a legacy of its"
" long history). The recommended way is to use the **JSONConfig** class, "
"which stores your configuration information in a .json file."
msgstr "calibre tem muitas maneiras diferentes de armazenar dados de configuração (um legado de sua longa história). A maneira recomendada é usar a classe **JSONConfig**, que armazena suas informações de configuração em um arquivo ``.json``."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:175
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr "O código para gerenciar os dados de configuração no plug-in demo está em ``config.py``:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:180
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr "O objeto ``prefs`` agora está disponível em todo o código do plugin por um simples::"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:185
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr "É possível ver o objeto ``prefs`` sendo usado em ``main.py``:"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:192
msgid "Edit book plugins"
msgstr "Editar plug-ins de livros"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:194
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the calibre book editor. The plugin is available here: "
":download_file:`editor_demo_plugin.zip`."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:198
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:202
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:208
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:212
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:222
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:230
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:234
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:237
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:245
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:251
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:259
msgid "Adding translations to your plugin"
msgstr "Adicionando traduções para o seu plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:261
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:264
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:269
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`Poedit <https://poedit.net/>`_ program for this."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:274
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use Poedit for that, or just do::"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:279
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:281
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:287
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under :guilabel:`Preferences->Interface->Look & feel` "
"or by running calibre like this::"
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:293
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:296
msgid "The plugin API"
msgstr "A API do plugin"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:298
msgid ""
"As you may have noticed above, a plugin in calibre is a class. There are "
"different classes for the different types of plugins in calibre. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:301
msgid ""
"Your plugin is almost certainly going to use code from calibre. To learn how"
" to find various bits of functionality in the calibre code base, read the "
"section on the calibre :ref:`code_layout`."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:306
msgid "Debugging plugins"
msgstr "Depurando plugins"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:308
msgid ""
"The first, most important step is to run calibre in debug mode. You can do "
"this from the command line with::"
msgstr "A primeira e mais importante etapa é executar o calibre no modo de depuração. Você pode fazer isso na linha de comando com::"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:312
msgid ""
"Or from within calibre by right-clicking the :guilabel:`Preferences` button "
"or using the :kbd:`Ctrl+Shift+R` keyboard shortcut."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:314
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within calibre the output will go to a txt file."
msgstr "Ao executar a partir da linha de comando, a saída de depuração será impressa no console; ao executar a partir do *Calibre*, a saída irá para um arquivo ``.txt``."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:316
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is Python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of calibre "
"using just this debugging technique."
msgstr "É possível inserir declarações ``print()`` em qualquer lugar do código do plugin, elas serão geradas no modo de depuração. Lembre-se, isso é *Python*, você realmente não precisa de nada além de declarações ``print()`` para depurar ;) Desenvolvi todo o *Calibre* usando apenas esta técnica de depuração."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:318
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr "Você pode testar rapidamente as alterações em seu plug-in usando a seguinte linha de comando::"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:323
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in calibre and relaunch calibre."
msgstr "Isso desligará o calibre em execução, esperará até que o desligamento seja concluído e, em seguida, atualizará o calibre do plug-in e o reiniciará."

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:326
msgid "More plugin examples"
msgstr "Mais exemplos de plugins"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:328
msgid ""
"You can find a list of many sophisticated calibre plugins `here "
"<https://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:331
msgid "Sharing your plugins with others"
msgstr "Compartilhando seus plugins com os outros"

#: ../../__w/calibre/calibre/manual/creating_plugins.rst:333
msgid ""
"If you would like to share the plugins you have created with other users of "
"calibre, post your plugin in a new thread in the `calibre plugins forum "
"<https://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr "Se você gostaria de compartilhar os plug-ins que criou com outros usuários do calibre, poste seu plug-in em um novo tópico no `fórum de plug-ins do calibre <https://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
