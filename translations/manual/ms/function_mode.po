# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# abuyop <abuyop@gmail.com>, 2015-2017
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-15 19:42+0530\n"
"PO-Revision-Date: 2017-12-21 05:12+0000\n"
"Last-Translator: abuyop <abuyop@gmail.com>\n"
"Language-Team: Malay (http://www.transifex.com/calibre/calibre/language/ms/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ms\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
msgid "Function mode for Search & replace in the Editor"
msgstr "Mod Fungsi untuk Gelintar & Ganti di dalam Penyunting"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
msgid ""
"The :guilabel:`Search & replace` tool in the editor support a *function "
"mode*. In this mode, you can combine regular expressions (see :doc:`regexp`)"
" with arbitrarily powerful Python functions to do all sorts of advanced text"
" processing."
msgstr "Alat Gelintar & Ganti dalam penyunting menyokong *mod fungsi*. Dalam mod ini, anda boleh gabungkan ungkapan nalar (rujuk :doc:`regexp`) dengan fungsi hebat Python secara arbitrari untuk membuat semua bentuk pemprosesan teks lanjutan."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
msgid ""
"In the standard *regexp* mode for search and replace, you specify both a "
"regular expression to search for as well as a template that is used to "
"replace all found matches. In function mode, instead of using a fixed "
"template, you specify an arbitrary function, in the `Python programming "
"language <https://docs.python.org/2.7/>`_. This allows you to do lots of "
"things that are not possible with simple templates."
msgstr "Dalam mod *regexp* piawai bagi gelintar dan ganti, anda nyatakan kedua-dua ungkapan nalar untuk menggelintar pada templat yang menggantikan semua padanan yang ditemuinya. Manakala, mod fungsi pula, selain menggunakan templat tetap. anda boleh nyatakan fungsi arbitrari, dalam `bahasa pengaturcaraan Python <https://docs.python.org/2.7/>`_. Ia membolehkan anda buat banyak perkara yang mustahil dilakukan dengan templat ringkas."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
msgid ""
"Techniques for using function mode and the syntax will be described by means"
" of examples, showing you how to create functions to perform progressively "
"more complex tasks."
msgstr "Teknik penggunaan mod fungsi dan sintaks akan dijelaskan bersama-sama dengan contoh, memudahkan penjelasan bagaimana hendak cipta fungsi yang dapat melakukan tugas yang lebih kompleks."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
msgid "Automatically fixing the case of headings in the document"
msgstr "Membaiki huruf (case) tajuk dokumen secara automatik"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
msgid ""
"Here, we will leverage one of the builtin functions in the editor to "
"automatically change the case of all text inside heading tags to title "
"case::"
msgstr "Di sini, kita akan guna salah satu fungsi terbina-dalam di dalam penyunting untuk mengubah huruf semua teks dalam tag tajuk menjadi title case iaitu huruf besar pertama dalam setiap perkataan::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
msgid ""
"For the function, simply choose the :guilabel:`Title-case text (ignore "
"tags)` builtin function. The will change titles that look like: ``<h1>some "
"TITLE</h1>`` to ``<h1>Some Title</h1>``. It will work even if there are "
"other HTML tags inside the heading tags."
msgstr "Untuk fungsi, hanya pilih fungsi terbina-dalam :guilabel:`teks Title-case (abai tag)`. Ia akan mengubah tajuk menjadi seperti berikut: ``<h1>some TITLE</h1>`` menjadi ``<h1>Some Title</h1>``. Ia masih berfungsi walaupun masih terdapat tag HTML lain di dalam tag pengepala."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:40
msgid "Your first custom function - smartening hyphens"
msgstr "Fungsi suai pertama anda - hypen pintar"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:42
msgid ""
"The real power of function mode comes from being able to create your own "
"functions to process text in arbitrary ways. The Smarten Punctuation tool in"
" the editor leaves individual hyphens alone, so you can use the this "
"function to replace them with em-dashes."
msgstr "Kehebatan mod fungsi sebenarnya berasal dari keupayaan mencipta fungsi anda sendiri untuk memproses teks mengikut kehendak sendiri. Alat Tanda Baca Pintar di dalam penyunting membolehkan tanda sempang ditinggalkan, supaya anda boleh guna fungsi ini untuk menggantikannya dengan tanda sengkang-em."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:47
msgid ""
"To create a new function, simply click the :guilabel:`Create/edit` button to"
" create a new function and copy the Python code from below."
msgstr "Untuk mencipta satu fungsi baharu, hanya klik butang :guilabel:`Cipta/sunting` untuk mencipta satu fungsi baharu dan salin kod Python dari bawah."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:55
msgid ""
"Every :guilabel:`Search & replace` custom function must have a unique name "
"and consist of a Python function named replace, that accepts all the "
"arguments shown above. For the moment, we wont worry about all the different"
" arguments to ``replace()`` function. Just focus on the ``match`` argument. "
"It represents a match when running a search and replace. Its full "
"documentation in available `here "
"<https://docs.python.org/2.7/library/re.html#match-objects>`_. "
"``match.group()`` simply returns all the matched text and all we do is "
"replace hyphens in that text with em-dashes, first replacing double hyphens "
"and then single hyphens."
msgstr "Setiap fungsi suai :guilabel:`Gelintar & ganti` mesti mempunyai nama unik dan mengandungi nama fungsi Python digantikan, yang mana menerima semua argumen yang ditunjukkan seperti di atas. Buat masa ini, kami tidak risau dengan semua argumen yang berlainan untuk fungsi ``replace()``. Hanya tumpukan pada argumen ``match``. Ia mewakili padanan ketika menjalankan gelintar dan ganti. Satu dokumentasi lengkap berkenaan ini tersedia `di sini <https://docs.python.org/2.7/library/re.html#match-objects>`_. ``match.group()`` hanya mengembalikan semua teks yang sepadan dan apa yang kita perlu buat adalah menggantikan tanda sempang dalam teks tersebut dengan tanda sengkang-em, mula-mula menggantikan tanda dwi-sempang dan kemudian satu tanda sempang."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:65
msgid "Use this function with the find regular expression::"
msgstr "Guna fungsi ini dengan ungkapan nalar find::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:69
msgid ""
"And it will replace all hyphens with em-dashes, but only in actual text and "
"not inside HTML tag definitions."
msgstr "Dan ia akan gantikan semua tanda sengkang dengan sengkang-em, tetapi hanya dalam teks sebenar dan tidak di dalam takrifan tag HTML/"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:74
msgid ""
"The power of function mode - using a spelling dictionary to fix mis-"
"hyphenated words"
msgstr "Kehebatan mod fungsi - menggunakan kamus ejaan untuk baiki perkataan tertinggal-sempang"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:76
msgid ""
"Often, e-books created from scans of printed books contain mis-hyphenated "
"words -- words that were split at the end of the line on the printed page. "
"We will write a simple function to automatically find and fix such words."
msgstr "Biasanya, e-buku dicipta dari imbasan buku bercetak yang menganfungi perkataan tertinggal-sempang -- perkataan yang mana dipisah pada akhir baris pada halaman bercetak. Kami akan hasilkan fungsi ringkas untuk cari dan baiki perkataan tersebut secara automatik."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:101
msgid "Use this function with the same find expression as before, namely::"
msgstr "Guna fungsi ini dengan ungkapan find yang sama sebelum ini, iaitu::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:105
msgid ""
"And it will magically fix all mis-hyphenated words in the text of the book. "
"The main trick is to use one of the useful extra arguments to the replace "
"function, ``dictionaries``.  This refers to the dictionaries the editor "
"itself uses to spell check text in the book. What this function does is look"
" for words separated by a hyphen, remove the hyphen and check if the "
"dictionary recognizes the composite word, if it does, the original words are"
" replaced by the hyphen free composite word."
msgstr "Dan ia akan membaiki secara magik semua perkataan yang tiada-sempang dalam teks buku. Caranya adalah guna salah satu argumen tambahan untuk menggantikan fungsi, ``dictionaries``.  Ini merujuk pada kamus penyunting itu sendiri menggunakan semakan ejaan teks di dalam buku tersebut. Fungsi ini mencari perkataan yang diasing dengan tanda sempang, buang tanda sempang tersebut dan periksa jika kamus mengenalpasti perkataan komposit itu, jika ada, perkataan asal akan digantikan dengan perkataan yang tidak menggunakan tanda sempang tersebut."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:113
msgid ""
"Note that one limitation of this technique is it will only work for mono-"
"lingual books, because, by default, ``dictionaries.recognized()`` uses the "
"main language of the book."
msgstr "Perhatian satu kekangan bagi teknik ini adalah ia hanya berfungsi baik dengan buku satu bahasa, kerana, secara lalai, ``dictionaries.recognized()`` menggunakan bahasa utama buku."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:119
msgid "Auto numbering sections"
msgstr "Seksyen pernomboran automatik"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:121
msgid ""
"Now we will see something a little different. Suppose your HTML file has "
"many sections, each with a heading in an :code:`<h2>` tag that looks like "
":code:`<h2>Some text</h2>`. You can create a custom function that will "
"automatically number these headings with consecutive section numbers, so "
"that they look like :code:`<h2>1. Some text</h2>`."
msgstr "Sekarang kita dapati ada beberapa perkara berlainan. Anggaplah fail HTML anda mempunyai banyak seksyen, setiapnya dengan pengepala dengan :code:`<h2>` tag seperti :code:`<h2>Some text</h2>`. Anda boleh hasilkan fungsi suai yang dapat menomborkan pengepala ini dengan nombor seksyen yang berturuan, supaya ia kelihatan seperti :code:`<h2>1. Some text</h2>`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:137
msgid "Use it with the find expression::"
msgstr "Guna ia dengan ungkapan cari::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:141
msgid ""
"Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr "Letak kursor di bahagian atas fail dan klik :guilabel:`Ganti semua`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:143
msgid ""
"This function uses another of the useful extra arguments to ``replace()``: "
"the ``number`` argument. When doing a :guilabel:`Replace All` number is "
"automatically incremented for every successive match."
msgstr "Fungsi ini menggunakan argumen tambahan yang berguna pada ``replace()``: argumen ``number``. Ketika membuat :guilabel:`Replace All` nombor secara automatik ditokok bagi setiap padanan yang berjaya."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:147
msgid ""
"Another new feature is the use of ``replace.file_order`` -- setting that to "
"``'spine'`` means that if this search is run on multiple HTML files, the "
"files are processed in the order in which they appear in the book. See "
":ref:`file_order_replace_all` for details."
msgstr "Satu fitur baharu lain yang boleh digunakan ialah penggunaan ``replace.file_order`` -- menetapkan ``'spine'`` bermaksud jika gelintar ini dijalankan pada fail HTML berbilang, fail diproses dengan tertib mengikut kemunculannya di dalam buku. Sila rujuk :ref:`file_order_replace_all` untuk perinciannya."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
msgid "Auto create a Table of Contents"
msgstr "Auto jana Senarai Kandungan"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:156
msgid ""
"Finally, lets try something a little more ambitious. Suppose your book has "
"headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some "
"Text</h1>``. We will auto-generate an HTML Table of Contents based on these "
"headings. Create the custom function below:"
msgstr "Akhir sekali, cuba lakukan yang lebih sukar. Anggap buku anda mempunyai pengepala dengan tag ``h1`` dan ``h2`` seperi ``<h1 id=\"someid\">Some Text</h1>``. Kita akan auto-janakan Senarai Kandungan HTML berdasarkan pengeapala ini. Cipta fungsi suai seperti di bawah:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:199
msgid "And use it with the find expression::"
msgstr "Guna ia dengan ungkapan cari::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:203
msgid ""
"Run the search on :guilabel:`All text files` and at the end of the search, a"
" window will popup with \"Debug output from your function\" which will have "
"the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr "Jalankan penggelintaran pada :guilabel:`All text files` dan dipenghujung gelintar, satu tetingkap timbul dengan \"Debug output from your function\" yang mana akan mempunyai Senarai Kandungan HTML, sedia untuk ditampal ke dalam :file:`toc.html`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:207
msgid ""
"The function above is heavily commented, so it should be easy to follow. The"
" key new feature is the use of another useful extra argument to the "
"``replace()`` function, the ``data`` object. The ``data`` object is a Python"
" *dict* that persists between all successive invocations of ``replace()`` "
"during a single :guilabel:`Replace All` operation."
msgstr "Fungsi di atas boleh diberikan ulasan, supaya ia mudah diikuti. Fitur utama baharu ini ialah penggunaan argumen tambahan lain yang berguna pada fungsi ``replace()``, objek ``data``. Objek ``data`` ialah *dic* Python yang berterusan diantara semua invokasi ``replace()`` yang berjaya semasa satu operasi :guilabel:`Replace All`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:213
msgid ""
"Another new feature is the use of ``call_after_last_match`` -- setting that "
"to ``True`` on the ``replace()`` function means that the editor will call "
"``replace()`` one extra time after all matches have been found. For this "
"extra call, the match object will be ``None``."
msgstr "Lain-lain fitur baharu yang digunakan ialah ``call_after_last_match`` -- menetapkannya ``True`` pada fungsi ``replace()`` bermaksud penyunting akan memanggil ``replace()`` sekali laig selepas semua padanan telah ditemui. Untuk panggilan ekstra ini, objek padanan akan menjadi ``None``."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:218
msgid ""
"This was just a demonstration to show you the power of function mode, if you"
" really needed to generate a Table of Contents from headings in your book, "
"you would be better off using the dedicated Table of Contents tool in "
":guilabel:`Tools->Table of Contents`."
msgstr "Ini hanyalah demonstrasi untuk menunjukkan kehebatan mod fungsi, jika anda perlu jana Senarai Kandungan dari pengepala dalam buku anda, anda digalakkan guna alat Senarai Kandungan yang disediakan dalam :guilabel:`Alat->Senarai Kandungan`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
msgid "The API for the function mode"
msgstr "API untuk mod fungsi"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:226
msgid ""
"All function mode functions must be Python functions named replace, with the"
" following signature::"
msgstr "Semua fungsi mod fungsi mestilah fungsi Python yang bernama replace, dengan tandatangan berikut::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:232
msgid ""
"When a find/replace is run, for every match that is found, the ``replace()``"
" function will be called, it must return the replacement string for that "
"match. If no replacements are to be done, it should return ``match.group()``"
" which is the original string. The various arguments to the ``replace()`` "
"function are documented below."
msgstr "Bila cari/ganti dijalankan, bagi setiap padanan yang ditemui, fungsi ``replace()`` akan dipanggilkan, ia mesti  kembalikan rentetan penggantian untuk padanan tersebut. Jika tiada penggantian dibuat, ia seharusnya kembalikan ``match.group()`` yang mana merupakan rentetan asal. Pelbagai dokumentasi argumen berkenaan fungsi ``replace()`` seperti di bawah."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
msgid "The ``match`` argument"
msgstr "Argumen ``match``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:241
msgid ""
"The ``match`` argument represents the currently found match. It is a `Python"
" Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_."
" Its most useful method is ``group()`` which can be used to get the matched "
"text corresponding to individual capture groups in the search regular "
"expression."
msgstr "Argumen ``match`` mewakili padanan semasa yang ditemui. Ia merupakan  `Objek Padanan Python <https://docs.python.org/2.7/library/re.html#match-objects>`_. Kaedah paling bergunanya ialah ``group()`` yang boleh digunakan untuk mendapatkan teks sepadan yang berkaitan dengan kumpulan tangkapan individu dalam ungkapan nalar gelintar."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
msgid "The ``number`` argument"
msgstr "Argumen ``number``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:250
msgid ""
"The ``number`` argument is the number of the current match. When you run "
":guilabel:`Replace All`, every successive match will cause ``replace()`` to "
"be called with an increasing number. The first match has number 1."
msgstr "Argumen ``number`` ialah bilangan padanan semasa. Ketika anda menjalankan :guilabel:`Ganti Semua`, setiap padanan yang berjaya akan menyebabkan ``replace()`` diganti dengan bilangan menaik. Padanan pertama mempunyai nilai 1."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
msgid "The ``file_name`` argument"
msgstr "Argumen ``file_name``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:257
msgid ""
"This is the filename of the file in which the current match was found. When "
"searching inside marked text, the ``file_name`` is empty. The ``file_name`` "
"is in canonical form, a path relative to the root of the book, using ``/`` "
"as the path separator."
msgstr "Ia merupaakn nama fail bagi fail yang mana padanan semasa ditemui. Ketika menggelintar di dalam teks bertanda, ``file_name`` adalah kosong. ``file_name`` adalah dalam bentuk canonical, iaitu laluan berkaitan dengan root buku, menggunakan ``/`` sebagai pemisah laluan."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
msgid "The ``metadata`` argument"
msgstr "Argumen ``metadata``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:265
msgid ""
"This represents the metadata of the current book, such as title, authors, "
"language, etc. It is an object of class "
":class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes "
"include, ``title``, ``authors`` (a list of authors) and ``language`` (the "
"language code)."
msgstr "Ia mewakili data meta bagi sesebuah buku, seperti tajuk, pengarang, bahasa, dll. Ia merupakan objek bagi sesebuah kelas :class:`calibre.ebooks.metadata.book.base.Metadata`. Atribut yang berguna termasuklah, ``title``, ``authors`` (senarai pengarang) dan ``language`` (kod bahasa)."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
msgid "The ``dictionaries`` argument"
msgstr "Argumen ``dictionaries``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:273
msgid ""
"This represents the collection of dictionaries used for spell checking the "
"current book. Its most useful method is ``dictionaries.recognized(word)`` "
"which will return ``True`` if the passed in word is recognized by the "
"dictionary for the current book's language."
msgstr "Ia mewakili koleksi kamus yang digunakan untuk penyemakan ejaan buku semasa. Merupakan kaedah paling berguna iaitu ``dictionaries.recognized(word)`` yang akan kembalikan ``True`` jika perkataan dikenalpasti oleh kamus bagi bahasa buku semasa."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
msgid "The ``data`` argument"
msgstr "Argumen ``data``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:281
msgid ""
"This a simple Python ``dict``. When you run :guilabel:`Replace all`, every "
"successive match will cause ``replace()`` to be called with the same "
"``dict`` as data. You can thus use it to store arbitrary data between "
"invocations of ``replace()`` during a :guilabel:`Replace all` operation."
msgstr "Ia merupakan ``dict`` Python ringkas. Kitika anda menjalankan :guilabel:`Ganti semua`, setiap padanan berjaya akan menyebabkan ``replace()`` dipanggil dengan ``dict`` yang sama sebagai data. Maka anda boleh guna ia untuk menyimpan data arbitrari diantara penyeruan ``replace()`` semasa operasi :guilabel:`Ganti semua`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
msgid "The ``functions`` argument"
msgstr "Argumen ``functions``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:290
msgid ""
"The ``functions`` argument gives you access to all other user defined "
"functions. This is useful for code re-use. You can define utility functions "
"in one place and re-use them in all your other functions. For example, "
"suppose you create a function name ``My Function`` like this:"
msgstr "Argumen ``functions`` memberikan anda capaian ke semua lain-lain fungsi ditakrif pengguna. Ia berguna untuk guna-semula kod. Anda boleh takrifkan fungsi utiliti dari satu tempat dan guna-semula ia dalam fungsi yang lain. Sebagai contoh, anggap anda menghasilkan satu fungsi bernama``My Function`` seperti di bawah:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:303
msgid ""
"Then, in another function, you can access the ``utility()`` function like "
"this:"
msgstr "Oleh itu, dalam fungsi lain, anda boleh boleh mencapai fungsi ``utility()`` seperti ini:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:311
msgid ""
"You can also use the functions object to store persistent data, that can be "
"re-used by other functions. For example, you could have one function that "
"when run with :guilabel:`Replace All` collects some data and another "
"function that uses it when it is run afterwards. Consider the following two "
"functions:"
msgstr "Anda juga boleh menggunakan objek fungsi untuk menyimpan data tekal, yang boleh diguna-semula oleh fungsi lain. Sebagai contoh, anda boleh mempunyai satu fungsi yang mana bila dijalankan dengan :guilabel:`Ganti Semua` dapat mengutip beberapa data dan lain-lain fungsi yang menggunakannya jika ia dijalankan selepas itu. Pertimbangkan dua fungsi berikut:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
msgid "Debugging your functions"
msgstr "Meyahpepijat fungsi anda"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:333
msgid ""
"You can debug the functions you create by using the standard ``print()`` "
"function from Python. The output of print will be displayed in a popup "
"window after the Find/replace has completed. You saw an example of using "
"``print()`` to output an entire table of contents above."
msgstr "Anda boleh menyahpepijat fungsi yang telah dicipta menggunakan fungsi piawai ``print()`` daripada Python. Output print akan dipaparkan dalam tetingkap timbul selepas Find/replace telah selesai. Didapati terdapat contoh penggunaan ``print()`` untuk outputkan keseluruhan jadual kandungan di atas."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:341
msgid "Choose file order when running on multiple HTML files"
msgstr "Pilih tertib fail bila dijalankan pada fail HTML berbilang"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:343
msgid ""
"When you run a :guilabel:`Replace all` on multiple HTML files, the order in "
"which the files are processes depends on what files you have open for "
"editing. You can force the search to process files in the order in which the"
" appear by setting the ``file_order`` attribute on your function, like this:"
msgstr "Bila anda menjalankan :guilabel:`Ganti semua` pada fail HTML berbilang, tertib fail diproses bergantung pada apakah fail anda telah buka untuk penyuntingan. Anda boleh paksa menggelintar untuk  proses fail mengikut tertib yang muncul berdasarkan tetapan atribut ``file_order`` dalam fungsi anda, seperti berikut:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:355
msgid ""
"``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which "
"cause the search to process multiple files in the order they appear in the "
"book, either forwards or backwards, respectively."
msgstr "``file_order`` menerima dua nilai, ``spine`` dan ``spine-reverse`` yang menyebabkan gelintar memproses fail berbilang mengikut tertib muncul di dalam buku, sama ada maju atau mengundur."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:360
msgid ""
"Having your function called an extra time after the last match is found"
msgstr "Menambah masa tambahan ke dalam fungsi anda selepas padanan terakhir ditemui"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:362
msgid ""
"Sometimes, as in the auto generate table of contents example above, it is "
"useful to have your function called an extra time after the last match is "
"found. You can do this by setting the ``call_after_last_match`` attribute on"
" your function, like this:"
msgstr "Dalam senarai kandungan diauto-jana seperti ciontoh di atas, Lebih berguna anda menambah masa tambahan selepas padanan terakhir ditemui. Anda boleh membuatnya dengan menetapkan atribut ``call_after_last_match`` ke dalam fungsi anda, seperti di bawah:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:376
msgid "Appending the output from the function to marked text"
msgstr "Menambah output dari fungsi ke teks betanda"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:378
msgid ""
"When running search and replace on marked text, it is sometimes useful to "
"append so text to the end of the marked text. You can do that by setting the"
" ``append_final_output_to_marked`` attribute on your function (note that you"
" also need to set ``call_after_last_match``), like this:"
msgstr "Ketika menjalankan gelintar dan ganti pada teks bertanda, kadang kala berguna membuat penambahan di bahagian hujung teksd bertanda. Anda boleh membuatnya dengan menetapkan atribut ``append_final_output_to_marked`` pada fungsi anda (perhatian anda juga perlu tetapkan ``call_after_last_match``), seperti berikut:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:393
msgid "Suppressing the result dialog when performing searches on marked text"
msgstr "Memaksa dialog keputusan ketika membuat penggelintaran pada teks bertanda"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:395
msgid ""
"You can also suppress the result dialog (which can slow down the repeated "
"application of a search/replace on many blocks of text) by setting the "
"``suppress_result_dialog`` attribute on your function, like this:"
msgstr "Anda juga memaksa dialog keputusan (yang boleh memperlahankan aplikasi menggelintar/mengganti yang berulang pada kebanyakan blok teks) dengan menetapkan atribut ``suppress_result_dialog`` pada fungsi anda, seperti ini:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:408
msgid "More examples"
msgstr "Lagi banyak contoh"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:410
msgid ""
"More useful examples, contributed by calibre users, can be found in the "
"`calibre Editor forum "
"<https://www.mobileread.com/forums/showthread.php?t=237181>`_."
msgstr "Banyak lagi contoh berguna, yang disumbang oleh pengguna calibre, boleh didapati dalam forum Penyunting `calibre <https://www.mobileread.com/forums/showthread.php?t=237181>`_."
