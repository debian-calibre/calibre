# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# math1985 <transifex@matthijsmelissen.nl>, 2016
# M. de Boer <de.boer.melle@gmail.com>, 2018-2019
# Meteor0id, 2019
# Rodolfo_Jadon, 2015
# peter <luc@ditbenik.be>, 2021-2022
# Rodolfo_Jadon, 2015
# math1985 <transifex@matthijsmelissen.nl>, 2016
# Volluta <volluta@tutanota.com>, 2016
# W.P.M.E. Hofland <wpme.hofland@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-12 10:34+0000\n"
"PO-Revision-Date: 2014-06-17 08:34+0000\n"
"Last-Translator: peter <luc@ditbenik.be>, 2021-2022\n"
"Language-Team: Dutch (http://www.transifex.com/calibre/calibre/language/nl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../__w/calibre/calibre/manual/develop.rst:4
msgid "Setting up a calibre development environment"
msgstr "Opzetten van Calibre in een development omgeving"

#: ../../__w/calibre/calibre/manual/develop.rst:6
msgid ""
"calibre is completely open source, licensed under the `GNU GPL v3 "
"<https://www.gnu.org/licenses/gpl.html>`_. This means that you are free to "
"download and modify the program to your heart's content. In this section, "
"you will learn how to get a calibre development environment set up on the "
"operating system of your choice. calibre is written primarily in `Python "
"<https://www.python.org>`_ with some C/C++ code for speed and system "
"interfacing. Note that calibre requires at least Python 3.8."
msgstr "calibre is volledig open source, onder de `GNU GPL v3 licentie <https://www.gnu.org/licenses/gpl.html>` _. Dit betekent dat u vrij bent om het programma naar hartenlust te downloaden en aan te passen. In dit gedeelte leert u hoe u een calibre ontwikkelingsomgeving kunt opzetten voor het besturingssysteem van uw keuze. calibre wordt voornamelijk geschreven in `Python <https://www.python.org>` _ met wat C/C++ code voor snelheid en systeeminterface. Merk op dat calibre minstens Python 3.8 nodig heeft."

#: ../../__w/calibre/calibre/manual/develop.rst:14
msgid "Contents"
msgstr "Inhoud"

#: ../../__w/calibre/calibre/manual/develop.rst:17
msgid "Design philosophy"
msgstr "Ontwerp filosofie"

#: ../../__w/calibre/calibre/manual/develop.rst:19
msgid ""
"calibre has its roots in the Unix world, which means that its design is "
"highly modular. The modules interact with each other via well defined "
"interfaces. This makes adding new features and fixing bugs in calibre very "
"easy, resulting in a frenetic pace of development. Because of its roots, "
"calibre has a comprehensive command line interface for all its functions, "
"documented in :doc:`generated/en/cli-index`."
msgstr "Calibre heeft zijn wortels in de Unix-wereld, wat betekent dat het design bijzonder modulair is. De modules werken samen met elkaar via precies gedefinieerde interfaces. Hierdoor wordt het toevoegen van nieuwe features en het oplossen van bugs in Calibre erg eenvoudig, wat resulteert in een snel ontwikkelingstempo. Vanwege deze wortels heeft Calibre een uitgebreide command line interface voor al zijn functies, welke gedocumenteerd zijn in  :doc:`generated/nl/cli-index`."

#: ../../__w/calibre/calibre/manual/develop.rst:24
msgid ""
"The modular design of calibre is expressed via ``Plugins``. There is a "
":ref:`tutorial <customize>` on writing calibre plugins. For example, adding "
"support for a new device to calibre typically involves writing less than a "
"100 lines of code in the form of a device driver plugin. You can browse the "
"`built-in drivers "
"<https://github.com/kovidgoyal/calibre/tree/master/src/calibre/devices>`_. "
"Similarly, adding support for new conversion formats involves writing "
"input/output format plugins. Another example of the modular design is the "
":ref:`recipe system <news>` for fetching news. For more examples of plugins "
"designed to add features to calibre, see the `Index of plugins "
"<https://www.mobileread.com/forums/showthread.php?p=1362767#post1362767>`_."
msgstr "Het modulaire ontwerp van Calibre wordt uitgedrukt via `` Plugins``. Er is een: ref :`handleiding <customize>` over het schrijven van Calibre plug-ins. Als u bijvoorbeeld ondersteuning toevoegt voor een nieuw Calibre apparaat, heeft dit meestal betrekking op het schrijven van minder dan 100 regels code in de vorm van een plug-in voor apparaatstuurprogramma's. U kunt bladeren door de `ingebouwde stuurprogramma's <https://github.com/kovidgoyal/Calibre/tree/master/src/Calibre/devices>`_. Op dezelfde manier houdt het toevoegen van ondersteuning voor nieuwe conversie-indelingen het schrijven van invoeg- / uitvoerformatenplug-ins in. Een ander voorbeeld van het modulaire ontwerp is de: ref: `receptuursysteem <news>` voor het ophalen van nieuws. Zie de `Index van plug-ins <https://www.mobileread.com/forums/showthread.php?p=1362767#post1362767>` _ voor meer voorbeelden van plug-ins die zijn ontworpen om functies aan Calibre toe te voegen."

#: ../../__w/calibre/calibre/manual/develop.rst:34
msgid "Code layout"
msgstr "Code opmaak"

#: ../../__w/calibre/calibre/manual/develop.rst:36
msgid ""
"All the calibre Python code is in the ``calibre`` package. This package "
"contains the following main sub-packages"
msgstr ""

#: ../../__w/calibre/calibre/manual/develop.rst:38
msgid ""
"devices - All the device drivers. Just look through some of the built-in "
"drivers to get an idea for how they work."
msgstr "apparaten - Alle apparaatstuurprogramma's. Bekijk enkele van de ingebouwde stuurprogramma's om een ​​idee te krijgen hoe ze werken."

#: ../../__w/calibre/calibre/manual/develop.rst:40
msgid ""
"For details, see: ``devices.interface`` which defines the interface "
"supported by device drivers and ``devices.usbms`` which defines a generic "
"driver that connects to a USBMS device. All USBMS based drivers in calibre "
"inherit from it."
msgstr "Voor details, bekijk: ``devices.interface`` wat de interface definieert ondersteund door toestel stuurprogramma's en ``devices.usbms`` wat een generiek stuurprogramma definieert die met een USBMS toestel verbindt. Alle USBMS gebaseerde stuurprogramma's erven ervan."

#: ../../__w/calibre/calibre/manual/develop.rst:43
msgid ""
"e-books  - All the e-book conversion/metadata code. A good starting point is"
" ``calibre.ebooks.conversion.cli`` which is the module powering the "
":command:`ebook-convert` command. The conversion process is controlled via "
"``conversion.plumber``. The format independent code is all in ``ebooks.oeb``"
" and the format dependent code is in ``ebooks.format_name``."
msgstr "e-boeken  - Alle e-boek conversie/metadata code. Een goed beginpunt is ``calibre.ebooks.conversion.cli``, de module die het :command:`ebook-convert` commando drijft. Het conversieproces wordt gecontroleerd via ``conversion.plumber``. De formaat onafhankelijke code zit allemaal in ``ebooks.oeb`` en de formaat afhankelijke code in ``ebooks.format_name``."

#: ../../__w/calibre/calibre/manual/develop.rst:47
msgid ""
"Metadata reading, writing, and downloading is all in ``ebooks.metadata``"
msgstr "Metadata lezen, schrijven en downloaden staat allemaal in `` ebooks.metagegevans``"

#: ../../__w/calibre/calibre/manual/develop.rst:48
msgid ""
"Conversion happens in a pipeline, for the structure of the pipeline, see "
":ref:`conversion-introduction`. The pipeline consists of an input plugin, "
"various transforms and an output plugin. The code that constructs and drives"
" the pipeline is in :file:`plumber.py`. The pipeline works on a "
"representation of an e-book that is like an unzipped epub, with manifest, "
"spine, toc, guide, html content, etc. The class that manages this "
"representation is OEBBook in ``ebooks.oeb.base``. The various "
"transformations that are applied to the book during conversions live in "
":file:`oeb/transforms/*.py`. And the input and output plugins live in "
":file:`conversion/plugins/*.py`."
msgstr "Conversie gebeurt in een pijplijn, voor de structuur van de pijplijn, bekijk :ref:`conversion-introduction`. De pijplijn bestaat uit een invoerplug-in, verschillende transforms en een uitvoerplug-in. De code die de pijplijn opbouwt en aandrijft zit in :file:`plumber.py`. De pijplijn werkt op een voorstelling van een e-boek als een ontzipte EPUB, met manifest, spine, ToC, gids, HTML inhoud, enz. De class die deze voorstelling beheert is OEBBook in ``ebooks.oeb.base``. De verschillende transformaties toegepast op het boek tijdens conversie wonen in  :file:`oeb/transforms/*.py`. En de in- en uitvoerplug-in  wonen in :file:`oeb/transforms/*.py`."

#: ../../__w/calibre/calibre/manual/develop.rst:58
msgid ""
"E-book editing happens using a different container object. It is documented "
"in :ref:`polish_api`."
msgstr "E-boek bewerken gebeurt met een ander container object, gedocumenteerd in :ref:`polish_api`."

#: ../../__w/calibre/calibre/manual/develop.rst:61
msgid ""
"db - The database back-end. See :ref:`db_api` for the interface to the "
"calibre library."
msgstr "db - De database achterkant. Bekijk :ref:`db_api` voor de interface naar de calibre bibliotheek."

#: ../../__w/calibre/calibre/manual/develop.rst:63
msgid "Content server: ``srv`` is the calibre Content server."
msgstr "Content server: ``srv`` is de calibre Content server."

#: ../../__w/calibre/calibre/manual/develop.rst:65
msgid ""
"gui2 - The Graphical User Interface. GUI initialization happens in "
"``gui2.main`` and ``gui2.ui``. The e-book-viewer is in ``gui2.viewer``. The "
"e-book editor is in ``gui2.tweak_book``."
msgstr "gui2 - De Grafische Gebruiker Interface. GUI initialisatie gebeurt in ``gui2.main`` en ``gui2.ui``. De e-boek-viewer zit in ``gui2.viewer``. De e-book editor in ``gui2.tweak_book``."

#: ../../__w/calibre/calibre/manual/develop.rst:67
msgid ""
"If you want to locate the entry points for all the various calibre "
"executables, look at the ``entry_points`` structure in `linux.py "
"<https://github.com/kovidgoyal/calibre/blob/master/src/calibre/linux.py>`_."
msgstr "Als u de ingangspunten voor alle calibre executables wilt lokaliseren, bekijk de ``entry_points`` structuur in `linux.py <https://github.com/kovidgoyal/calibre/blob/master/src/calibre/linux.py>`_."

#: ../../__w/calibre/calibre/manual/develop.rst:71
msgid ""
"If you need help understanding the code, post in the `development forum "
"<https://www.mobileread.com/forums/forumdisplay.php?f=240>`_ and you will "
"most likely get help from one of calibre's many developers."
msgstr "Als u hulp nodig hebt om de code te begrijpen, post iets in het `ontwikkelforum <https://www.mobileread.com/forums/forumdisplay.php?f=240>`_ en u zal heel waarschijnlijk hulp krijgen van een van de vele calibre ontwikkelaars."

#: ../../__w/calibre/calibre/manual/develop.rst:75
msgid "Getting the code"
msgstr "De code verkrijgen"

#: ../../__w/calibre/calibre/manual/develop.rst:77
msgid ""
"You can get the calibre source code in two ways, using a version control "
"system or directly downloading a :website_base:`tarball <dist/src>`."
msgstr "U kan de calibre broncode op twee manieren krijgen, via een versiecontrolesysteem of download direct een :website_base:`tarball <dist/src>`."

#: ../../__w/calibre/calibre/manual/develop.rst:80
msgid ""
"calibre uses `Git <https://www.git-scm.com/>`_, a distributed version "
"control system. Git is available on all the platforms calibre supports.  "
"After installing Git, you can get the calibre source code with the command::"
msgstr "calibre gebruikt `Git <https://www.git-scm.com/>`_, een gedistribueerd versiecontrolesysteem. Git is beschikbaar op alle platformen die calibre ondersteunt. Na installeren van Git kan u de calibre source code krijgen met het commando::"

#: ../../__w/calibre/calibre/manual/develop.rst:86
msgid ""
"On Windows you will need the complete path name, that will be something like"
" :file:`C:\\\\Program Files\\\\Git\\\\git.exe`."
msgstr "Op Windows heb je de volledige padnaam nodig, dat zal ongeveer zo zijn: bestand: `C:\\\\Program Files\\\\Git\\\\git.exe`."

#: ../../__w/calibre/calibre/manual/develop.rst:88
msgid ""
"calibre is a very large project with a very long source control history, so "
"the above can take a while (10 mins to an hour depending on your internet "
"speed)."
msgstr "Calibre is een zeer groot project met een zeer lange versiebeheergeschiedenis, dus het bovenstaande kan een tijd duren (10 minuten tot een uur, afhankelijk van je internetsnelheid)."

#: ../../__w/calibre/calibre/manual/develop.rst:91
msgid ""
"If you want to get the code faster, the source code for the latest release "
"is always available as an :website_base:`archive <dist/src>`."
msgstr "Als u de code sneller wilt krijgen, de broncode van de laatste uitgave is altijd beschikbaar als een :website_base:`archive <dist/src>`."

#: ../../__w/calibre/calibre/manual/develop.rst:94
msgid "To update a branch to the latest code, use the command::"
msgstr "Om een ​​vertakking bij te werken naar de nieuwste code, gebruik de volgende opdracht: "

#: ../../__w/calibre/calibre/manual/develop.rst:98
msgid ""
"You can also browse the code at `GitHub "
"<https://github.com/kovidgoyal/calibre>`_."
msgstr "U kan ook de code doorbladeren op `GitHub <https://github.com/kovidgoyal/calibre>`_."

#: ../../__w/calibre/calibre/manual/develop.rst:101
msgid "Submitting your changes to be included"
msgstr "Uw aanpassingen insturen voor productie"

#: ../../__w/calibre/calibre/manual/develop.rst:103
msgid ""
"If you only plan to make a few small changes, you can make your changes and "
"create a \"merge directive\" which you can then attach to a ticket in the "
"calibre `bug tracker <https://bugs.launchpad.net/calibre>`_. To do this, "
"make your changes, then run::"
msgstr "Als u enkel een paar kleine veranderingen wilt maken, maak uw veranderingen en creëer een \"merge directive\" die u dan aan een ticket in de calibre `bug tracker <https://bugs.launchpad.net/calibre>`_ kan koppelen. Om dit te doen, maak uw veranderingen , draai dan::"

#: ../../__w/calibre/calibre/manual/develop.rst:111
msgid ""
"This will create a :file:`my-changes` file in the current folder, simply "
"attach that to a ticket on the calibre `bug tracker "
"<https://bugs.launchpad.net/calibre>`_. Note that this will include *all* "
"the commits you have made. If you only want to send some commits, you have "
"to change ``origin/master`` above. To send only the last commit, use::"
msgstr "Dit creëert een :file:`my-changes` bestand in de huidige map, koppel dit gewoon aan een ticket op de calibre `bug tracker <https://bugs.launchpad.net/calibre>`_. Merk op dat dit *alle* commits die gemaakt hebt meeneemt. Als u slechts enkele commits wil sturen, moet u de ``origin/master`` boven veranderen. Om enkel de laatste commit te sturen, gebruik::"

#: ../../__w/calibre/calibre/manual/develop.rst:119
msgid ""
"To send the last *n* commits, replace *1* with *n*, for example, for the "
"last 3 commits::"
msgstr "Als u de laatste *n* commentaren wilt verzenden, vervangt u *1* door *n*, bijvoorbeeld voor de laatste 3 commentaren::"

#: ../../__w/calibre/calibre/manual/develop.rst:124
msgid "Be careful to not include merges when using ``HEAD~n``."
msgstr "Zorg dat u geen samenvoegingen opneemt bij het gebruik van ``HEAD~n``."

#: ../../__w/calibre/calibre/manual/develop.rst:126
msgid ""
"If you plan to do a lot of development on calibre, then the best method is "
"to create a `GitHub <https://github.com>`__ account. Below is a basic guide "
"to setting up your own fork of calibre in a way that will allow you to "
"submit pull requests for inclusion into the main calibre repository:"
msgstr "Als u veel ontwikkelwerk aan calibre wil doen, kan u best een  `GitHub <https://github.com>`__ account creëren. Onder vindt u een basisgids om uw eigen fork van calibre op te zetten die u toelaat pull requests in te dienen voor opname in calibre's hoofdrepository:"

#: ../../__w/calibre/calibre/manual/develop.rst:131
msgid ""
"Setup git on your machine as described in this article: `Setup Git "
"<https://help.github.com/articles/set-up-git>`_"
msgstr "Stel git in op uw machine zoals beschreven in dit artikel: `Setup Git <https://help.github.com/articles/set-up-git>`_"

#: ../../__w/calibre/calibre/manual/develop.rst:132
msgid ""
"Setup ssh keys for authentication to GitHub, as described here: `Generating "
"SSH keys <https://help.github.com/articles/generating-ssh-keys>`_"
msgstr "Stel ssh-sleutels in voor authenticatie naar GitHub, zoals hier beschreven: `SSH-sleutels genereren <https://help.github.com/articles/generating-ssh-keys>` _"

#: ../../__w/calibre/calibre/manual/develop.rst:133
msgid ""
"Go to https://github.com/kovidgoyal/calibre and click the :guilabel:`Fork` "
"button."
msgstr "Ga naar https://github.com/kovidgoyal/Calibre en klik op de :guilabel:`Fork` button."

#: ../../__w/calibre/calibre/manual/develop.rst:134
msgid "In a Terminal do::"
msgstr "In een terminalvenster doe::"

#: ../../__w/calibre/calibre/manual/develop.rst:139
msgid ""
"Replace <username> above with your GitHub username. That will get your fork "
"checked out locally."
msgstr "Vervang <username> boven door uw GitHub gebruikersnaam. Dat zorgt ervoor dat uw fork lokaal wordt uitgecheckt."

#: ../../__w/calibre/calibre/manual/develop.rst:140
msgid ""
"You can make changes and commit them whenever you like. When you are ready "
"to have your work merged, do a::"
msgstr "U kunt wijzigingen aanbrengen en deze toewijzen wanneer u maar wilt. Wanneer je klaar bent om je werk samen te voegen, doe dan een:"

#: ../../__w/calibre/calibre/manual/develop.rst:144
msgid ""
"and go to ``https://github.com/<username>/calibre`` and click the "
":guilabel:`Pull Request` button to generate a pull request that can be "
"merged."
msgstr "en ga naar ``https://github.com/<username>/Calibre`` en klik op :guilabel:`Pull Request` button om een pull request te generen die samengevoegd kan worden."

#: ../../__w/calibre/calibre/manual/develop.rst:145
msgid ""
"You can update your local copy with code from the main repo at any time by "
"doing::"
msgstr "U kunt uw lokale exemplaar op elk gewenst moment bijwerken met code van de hoofdrepo door te doen:"

#: ../../__w/calibre/calibre/manual/develop.rst:150
msgid ""
"You should also keep an eye on the calibre `development forum "
"<https://www.mobileread.com/forums/forumdisplay.php?f=240>`_. Before making "
"major changes, you should discuss them in the forum or contact Kovid "
"directly (his email address is all over the source code)."
msgstr "U houdt best een oogje op het calibre `ontwikkelforum <https://www.mobileread.com/forums/forumdisplay.php?f=240>`_. Vooraleer grote veranderingen te maken, bespreek ze best in het forum of contacteer Kovid direct (de broncode krioelt van z'n e-mailadres)."

#: ../../__w/calibre/calibre/manual/develop.rst:156
msgid "Windows development environment"
msgstr "Windows ontwikkel omgeving"

#: ../../__w/calibre/calibre/manual/develop.rst:158
#: ../../__w/calibre/calibre/manual/develop.rst:192
#: ../../__w/calibre/calibre/manual/develop.rst:229
msgid ""
"You must also get the calibre source code separately as described above."
msgstr "U moet ook de calibre broncode apart ophalen zoals beschreven boven."

#: ../../__w/calibre/calibre/manual/develop.rst:160
msgid ""
"Install calibre normally, using the `Windows installer <https://calibre-"
"ebook.com/download_windows>`__. Then open a Command Prompt and change to the"
" previously checked out calibre code folder. For example::"
msgstr "Installeer calibre normaal met de Windows installer <https://calibre-ebook.com/download_windows>`__. Open dan een Commandoprompt en ga naar de voordien bekeken calibre codemap. Bijvoorbeeld::"

#: ../../__w/calibre/calibre/manual/develop.rst:165
#: ../../__w/calibre/calibre/manual/develop.rst:241
msgid "calibre is the folder that contains the src and resources sub-folders."
msgstr "calibre is de map die de src bevat en bronnensubmappen."

#: ../../__w/calibre/calibre/manual/develop.rst:167
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src folder. So, following the example above, it "
"would be ``C:\\Users\\kovid\\work\\calibre\\src``. `Here is a short guide "
"<https://docs.python.org/using/windows.html#excursus-setting-environment-"
"variables>`_ to setting environment variables on Windows."
msgstr "De volgende stap is de omgevingsvariabele ``CALIBRE_DEVELOP_FROM`` instellen op het absolute pad van de src map. Dus, volgens het voorbeeld boven zou het ``C:\\Users\\kovid\\work\\calibre\\src`` zijn. Hier is een korte gids <https://docs.python.org/using/windows.html#excursus-setting-environment-variables>`_ over instellen van omgevingsvariabelen in Windows."

#: ../../__w/calibre/calibre/manual/develop.rst:172
msgid ""
"Once you have set the environment variable, open a new command prompt and "
"check that it was correctly set by using the command::"
msgstr "Nadat u de omgevingsvariabele hebt ingesteld, opent u een nieuwe opdrachtprompt en controleert u of deze correct is ingesteld met de opdracht::"

#: ../../__w/calibre/calibre/manual/develop.rst:177
#: ../../__w/calibre/calibre/manual/develop.rst:257
msgid ""
"Setting this environment variable means that calibre will now load all its "
"Python code from the specified location."
msgstr "Deze omgevingsvariabele instellen betekent dat calibre nu alle Python code vanuit de gespecificeerde locatie laadt."

#: ../../__w/calibre/calibre/manual/develop.rst:179
msgid ""
"That's it! You are now ready to start hacking on the calibre code. For "
"example, open the file :file:`src\\\\calibre\\\\__init__.py` in your "
"favorite editor and add the line::"
msgstr "Das alles! U bent nu klaar om de calibre code te beginnen hacken. Bv. open het bestand :file:`src\\\\calibre\\\\__init__.py` in uw favoriete editor en voeg volgende regel toe::"

#: ../../__w/calibre/calibre/manual/develop.rst:184
#: ../../__w/calibre/calibre/manual/develop.rst:264
msgid ""
"near the top of the file. Now run the command :command:`calibredb`. The very"
" first line of output should be ``Hello, world!``."
msgstr "in de buurt van de bovenkant van het bestand. Voer nu de opdracht: opdracht uit: `calibredb`. De allereerste regel van de uitvoer zou moeten zijn `` Hallo, wereld! ``."

#: ../../__w/calibre/calibre/manual/develop.rst:186
msgid ""
"You can also setup a calibre development environment inside the free "
"Microsoft Visual Studio, if you like, following the instructions `here "
"<https://www.mobileread.com/forums/showthread.php?t=251201>`_."
msgstr "U kan ook een calibre ontwikkelomgeving opzetten in het gratis Microsoft Visual Studio, als u wilt, met volgende instructies `hier <https://www.mobileread.com/forums/showthread.php?t=251201>`_."

#: ../../__w/calibre/calibre/manual/develop.rst:190
msgid "macOS development environment"
msgstr "macOS ontwikkelomgeving "

#: ../../__w/calibre/calibre/manual/develop.rst:194
msgid ""
"Install calibre normally using the `provided .dmg <https://calibre-"
"ebook.com/download_osx>`__. Then open a Terminal and change to the "
"previously checked out calibre code folder, for example::"
msgstr "Installeer calibre normaal met de `provided .dmg <https://calibre-ebook.com/download_osx>`__. Open dan een Terminal en ga naar de voordien bekeken calibre codemap, bijvoorbeeld::"

#: ../../__w/calibre/calibre/manual/develop.rst:199
msgid ""
"calibre is the folder that contains the src and resources sub-folders. The "
"calibre command line tools are found inside the calibre app bundle, in "
":file:`/Applications/calibre.app/Contents/MacOS` you should add this folder "
"to your PATH environment variable, if you want to run the command line tools"
" easily."
msgstr "calibre is de map die de src bevat en bronnensubmappen. de calibre opdrachtregelgereedschappen vindt u in de calibre appbundel, in :file:`/Applications/calibre.app/Contents/MacOS`, u voegt deze map best toe aan uw PATH omgevingsvariabele als u de opdrachtregelgereedschappen vlot wilt gebruiken."

#: ../../__w/calibre/calibre/manual/develop.rst:205
msgid ""
"The next step is to create a bash script that will set the environment "
"variable ``CALIBRE_DEVELOP_FROM`` to the absolute path of the src folder "
"when running calibre in debug mode."
msgstr "De volgende stap is het maken van een bash-script dat de omgevingsvariabele ``CALIBRE_DEVELOP_FROM`` instelt op het absolute pad van de src map bij het uitvoeren van calibre in foutzoekmodus."

#: ../../__w/calibre/calibre/manual/develop.rst:208
msgid "Create a plain text file::"
msgstr "Maak een platte-tekst bestand::"

#: ../../__w/calibre/calibre/manual/develop.rst:214
msgid ""
"Save this file as :file:`/usr/local/bin/calibre-develop`, then set its "
"permissions so that it can be executed::"
msgstr "Sla dit bestand op als :file:`/usr/local/bin/calibre-develop`, stel dan de rechten in zodat het kan worden uitgevoerd::"

#: ../../__w/calibre/calibre/manual/develop.rst:218
msgid "Once you have done this, run::"
msgstr "Als u dit heeft gedaan, voer uit::"

#: ../../__w/calibre/calibre/manual/develop.rst:222
msgid ""
"You should see some diagnostic information in the Terminal window as calibre"
" starts up, and you should see an asterisk after the version number in the "
"GUI window, indicating that you are running from source."
msgstr "U zou wat diagnostische informatie in het Terminal-venster moeten zien als Calibre opstart, en u zou een asterisk na het versienummer in het GUI-venster moeten zien, om aan te geven dat u vanuit de bron loopt."

#: ../../__w/calibre/calibre/manual/develop.rst:227
msgid "Linux development environment"
msgstr "Linux ontwikkel omgeving"

#: ../../__w/calibre/calibre/manual/develop.rst:231
msgid ""
"calibre is primarily developed on Linux. You have two choices in setting up "
"the development environment. You can install the calibre binary as normal "
"and use that as a runtime environment to do your development. This approach "
"is similar to that used in Windows and macOS. Alternatively, you can install"
" calibre from source. Instructions for setting up a development environment "
"from source are in the INSTALL file in the source tree. Here we will address"
" using the binary as a runtime, which is the recommended method."
msgstr "calibre is voornamelijk in Linux ontwikkeld. U hebt twee keuzes bij instellen van de ontwikkelomgeving. U kan de calibre binary als gewoonlijk installeren en dat als runtime omgeving gebruiken voor uw ontwikkeling. Deze werkwijze is gelijkaardig aan die in Windows en macOS. Als alternatief kan u calibre van de bron installeren. Instructies om een ontwikkelomgeving op te zetten vanuit de bron staan in het INSTALL bestand in de bestandsboom. Hier gaat het over gebruik van de binary als een runtime, wat de aanbevolen methode is."

#: ../../__w/calibre/calibre/manual/develop.rst:237
msgid ""
"Install calibre using the `binary installer <https://calibre-"
"ebook.com/download_linux>`_. Then open a terminal and change to the "
"previously checked out calibre code folder, for example::"
msgstr "Installeer calibre met de `binary installer <https://calibre-ebook.com/download_linux>`_. Open dan een Terminal en ga naar de voordien bekeken calibre codemap, bijvoorbeeld::"

#: ../../__w/calibre/calibre/manual/develop.rst:243
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src folder. So, following the example above, it "
"would be ``/home/kovid/work/calibre/src``. How to set environment variables "
"depends on your Linux distribution and what shell you are using."
msgstr "De volgende stap is om de omgevingsvariabele `` CALIBRE_DEVELOP_FROM`` in te stellen op het absolute pad van de src-map. Dus, in navolging van het bovenstaande voorbeeld, zou het ``/home/kovid/work/Calibre/src`` zijn. Het instellen van omgevingsvariabelen is afhankelijk van je Linux-distributie en welke shell je gebruikt."

#: ../../__w/calibre/calibre/manual/develop.rst:248
msgid ""
"It is recommended to use the binary installer provided from upstream. Should"
" you insist on using a package provided by your distribution, use the "
"``CALIBRE_PYTHON_PATH`` and ``CALIBRE_RESOURCES_PATH`` variables instead."
msgstr "Gebruik van de binaire installer, vanaf stroomopwaarts geleverd, wordt aanbevolen. Staat u erop een pakket te gebruiken uit uw distro, gebruik dan de  ``CALIBRE_PYTHON_PATH`` and ``CALIBRE_RESOURCES_PATH`` variabelen."

#: ../../__w/calibre/calibre/manual/develop.rst:252
msgid ""
"Once you have set the environment variable, open a new terminal and check "
"that it was correctly set by using the command::"
msgstr "Nadat u de omgevingsvariabele hebt ingesteld, opent u een nieuwe terminal en controleert u of deze correct is ingesteld met de opdracht::"

#: ../../__w/calibre/calibre/manual/develop.rst:259
msgid ""
"That's it! You are now ready to start hacking on the calibre code. For "
"example, open the file :file:`src/calibre/__init__.py` in your favorite "
"editor and add the line::"
msgstr "Das alles! U bent nu klaar om de calibre code te beginnen hacken. Bv. open het bestand :file:`src\\\\calibre\\\\__init__.py` in uw favoriete editor en voeg volgende regel toe::"

#: ../../__w/calibre/calibre/manual/develop.rst:267
msgid ""
"Having separate \"normal\" and \"development\" calibre installs on the same "
"computer"
msgstr "Afzonderlijke \"normale\" en \"ontwikkel\" calibre installaties op dezelfde computer hebben"

#: ../../__w/calibre/calibre/manual/develop.rst:269
msgid ""
"The calibre source tree is very stable and rarely breaks, but if you feel "
"the need to run from source on a separate test library and run the released "
"calibre version with your everyday library, you can achieve this easily "
"using .bat files or shell scripts to launch calibre. The example below shows"
" how to do this on Windows using .bat files (the instructions for other "
"platforms are the same, just use a shell script instead of a .bat file)"
msgstr "De calibre bronboom is heel stabiel en breekt zelden maar als u de behoefte voelt om vanuit de bron te draaien op een aparte testbibliotheek en de uitgegeven calibre versie met uw dagdagelijkse bibliotheek, kan u dat gemakkelijk met .bat bestanden of shellscripts om calibre te starten. Het voorbeeld onder toont hoe dit te doen in Windows met .bat bestanden (de instructies voor andere platformen zijn hetzelfde, gebruik gewoon een shellscript i.p.v. een .bat bestand)."

#: ../../__w/calibre/calibre/manual/develop.rst:274
msgid "To launch the release version of calibre with your everyday library:"
msgstr "De releaseversie van calibre lanceren met uw alledaagse bibliotheek"

#: ../../__w/calibre/calibre/manual/develop.rst:276
msgid "calibre-normal.bat::"
msgstr "Calibre-normal.bat::"

#: ../../__w/calibre/calibre/manual/develop.rst:280
msgid "calibre-dev.bat::"
msgstr "Calibre-dev.bat::"

#: ../../__w/calibre/calibre/manual/develop.rst:287
msgid "Debugging tips"
msgstr "Debug tips"

#: ../../__w/calibre/calibre/manual/develop.rst:289
msgid ""
"Python is a dynamically typed language with excellent facilities for "
"introspection. Kovid wrote the core calibre code without once using a "
"debugger. There are many strategies to debug calibre code:"
msgstr "Python is een dynamisch getypeerde taal met uitstekend onderdak voor introspectie. Kovid schreef de kern calibre code zonder ook maar één keer een foutzoeker te gebruiken. Er zijn veel strategieën voor foutzoeken in calibre code:"

#: ../../__w/calibre/calibre/manual/develop.rst:294
msgid "Using print statements"
msgstr "Gebruik van print statements"

#: ../../__w/calibre/calibre/manual/develop.rst:296
msgid ""
"This is Kovid's favorite way to debug. Simply insert print statements at "
"points of interest and run your program in the terminal. For example, you "
"can start the GUI from the terminal as::"
msgstr "Dit is de favoriete manier van Kovid om te debuggen. Voeg eenvoudig afdrukinstructies in op interessante plaatsen en voer uw programma uit in de terminal. U kunt de GUI bijvoorbeeld vanuit de terminal starten als::"

#: ../../__w/calibre/calibre/manual/develop.rst:301
msgid "Similarly, you can start the E-book viewer as::"
msgstr "U kan de e-boekviewer ook starten als::"

#: ../../__w/calibre/calibre/manual/develop.rst:305
msgid "The e-book-editor can be started as::"
msgstr "De e-boekviewer kan gestart worden als::"

#: ../../__w/calibre/calibre/manual/develop.rst:310
msgid "Using an interactive Python interpreter"
msgstr "Een interactieve Python vertaler gebruiken"

#: ../../__w/calibre/calibre/manual/develop.rst:312
msgid ""
"You can insert the following two lines of code to start an interactive "
"Python session at that point::"
msgstr "U kan de volgende twee regels code invoegen om op dat punt een interactieve Python sessie te starten::"

#: ../../__w/calibre/calibre/manual/develop.rst:317
msgid ""
"When running from the command line, this will start an interactive Python "
"interpreter with access to all locally defined variables (variables in the "
"local scope). The interactive prompt even has :kbd:`Tab` completion for "
"object properties and you can use the various Python facilities for "
"introspection, such as :func:`dir`, :func:`type`, :func:`repr`, etc."
msgstr "Bij het uitvoeren van de opdrachtregel start hiermee een interactieve Python vertaler met toegang tot alle lokaal gedefinieerde variabelen (variabelen in de lokale scope). De interactieve prompt heeft zelfs :kbd:`Tab` voltooiing voor objecteigenschappen en u kunt de verschillende Python faciliteiten gebruiken voor introspectie, zoals :func:`dir`, :func:`type`, :func:`repr`, enz."

#: ../../__w/calibre/calibre/manual/develop.rst:323
msgid "Using the Python debugger as a remote debugger"
msgstr "De Python foutzoeker als een externe foutzoeker gebruiken"

#: ../../__w/calibre/calibre/manual/develop.rst:325
msgid ""
"You can use the builtin Python debugger (pdb) as a remote debugger from the "
"command line. First, start the remote debugger at the point in the calibre "
"code you are interested in, like this::"
msgstr "U kan de ingebouwde Python foutzoeker gebruiken (pdb) als een externe foutzoeker vanop de opdrachtregel. Om te beginnen, start de externe foutzoeker op de plaats in de code waar u in geïnteresseerd bent, zoals dit::"

#: ../../__w/calibre/calibre/manual/develop.rst:332
msgid ""
"Then run calibre, either as normal, or using one of the calibre-debug "
"commands described in the previous section. Once the above point in the code"
" is reached, calibre will freeze, waiting for the debugger to connect."
msgstr "Voer vervolgens Calibre uit, hetzij als normaal, of met behulp van een van de Calibre-debug-opdrachten die in de vorige sectie zijn beschreven. Zodra het bovenstaande punt in de code is bereikt, zal Calibre bevriezen, wachtend totdat de foutopsporing verbinding maakt."

#: ../../__w/calibre/calibre/manual/develop.rst:336
msgid ""
"Now open a terminal or command prompt and use the following command to start"
" the debugging session::"
msgstr "Open nu een terminal of opdrachtprompt en gebruik de volgende opdracht om de foutopsporingssessie te starten:"

#: ../../__w/calibre/calibre/manual/develop.rst:341
msgid ""
"You can read about how to use the Python debugger in the `Python stdlib docs"
" for the pdb module <https://docs.python.org/library/pdb.html#debugger-"
"commands>`_."
msgstr "U kan lezen hoe de Python foutzoeker te gebruiken in de `Python stdlib docs voor de pdb module <https://docs.python.org/library/pdb.html#debugger-commands>`_."

#: ../../__w/calibre/calibre/manual/develop.rst:345
msgid ""
"By default, the remote debugger will try to connect on port 4444. You can "
"change it, by passing the port parameter to both the set_trace() and the "
"cli() functions above, like this: ``set_trace(port=1234)`` and "
"``cli(port=1234)``."
msgstr "Standaard probeert de debugger op afstand verbinding te maken op poort 4444. Je kunt dit wijzigen door de parameter port naar zowel de set_trace() als de cli() -functies hierboven door te geven, zoals deze: ``set_trace(port=1234)``en``cli(port = 1234)``."

#: ../../__w/calibre/calibre/manual/develop.rst:351
msgid ""
"The Python debugger cannot handle multiple threads, so you have to call "
"set_trace once per thread, each time with a different port number."
msgstr "De Python foutzoeker kan niet met meerdere draadjes overweg, u moet set_trace dus voor elk draadje roepen, elke keer met een ander poortnummer."

#: ../../__w/calibre/calibre/manual/develop.rst:355
msgid "Using the debugger in your favorite Python IDE"
msgstr "De foutzoeker gebruiken in uw favoriete Python IDE"

#: ../../__w/calibre/calibre/manual/develop.rst:357
msgid ""
"It is possible to use the builtin debugger in your favorite Python IDE, if "
"it supports remote debugging. The first step is to add the calibre src "
"checkout to the ``PYTHONPATH`` in your IDE. In other words, the folder you "
"set as ``CALIBRE_DEVELOP_FROM`` above, must also be in the ``PYTHONPATH`` of"
" your IDE."
msgstr "Het is mogelijk om de ingebouwde foutzoeker van uw favoriete Python IDE te gebruiken, als hij extern foutzoeken ondersteunt. De eerste stap is toevoegen van de calibre scr checkout aan ``PYTHONPATH`` in uw IDE. M.a.w. de map die u instelde als ``CALIBRE_DEVELOP_FROM`` boven moet ook in  ``PYTHONPATH`` van uw IDE staan. "

#: ../../__w/calibre/calibre/manual/develop.rst:362
msgid ""
"Then place the IDE's remote debugger module into the :file:`src` sub-folder "
"of the calibre source code checkout. Add whatever code is needed to launch "
"the remote debugger to calibre at the point of interest, for example in the "
"main function. Then run calibre as normal. Your IDE should now be able to "
"connect to the remote debugger running inside calibre."
msgstr "Plaats dan de IDE's externe foutzoekmodule in de :file:`src` submap van de calibre broncode checkout. Voeg de nodige code toe om de externe foutzoeker te starten op het punt van interesse, bv. in de hoofdfunctie. Draai calibre dan als gewoonlijk. Uw IDE  zou nu moeten kunnen verbinden met de externe foutzoeker die in calibre draait."

#: ../../__w/calibre/calibre/manual/develop.rst:369
msgid "Executing arbitrary scripts in the calibre Python environment"
msgstr "Willekeurige scripts uitvoeren in de calibre Python omgeving"

#: ../../__w/calibre/calibre/manual/develop.rst:371
msgid ""
"The :command:`calibre-debug` command provides a couple of handy switches to "
"execute your own code, with access to the calibre modules::"
msgstr "Het :command:`calibre-debug` commando voorziet enkele handige schakelaars om uw eigen code uit te voeren, met toegang tot de calibre modules::"

#: ../../__w/calibre/calibre/manual/develop.rst:376
msgid ""
"is great for testing a little snippet of code on the command line. It works "
"in the same way as the -c switch to the Python interpreter::"
msgstr "is geweldig om een klein code knipseltje te testen op de commandoregel. Werkt op dezelfde manier als de -c schakelaar naar de Python vertaler::"

#: ../../__w/calibre/calibre/manual/develop.rst:380
msgid ""
"can be used to execute your own Python script. It works in the same way as "
"passing the script to the Python interpreter, except that the calibre "
"environment is fully initialized, so you can use all the calibre code in "
"your script. To use command line arguments with your script, use the form::"
msgstr "kan worden gebruikt om je eigen Python-script uit te voeren. Het werkt op dezelfde manier als het doorgeven van het script aan de Python-interpreter, behalve dat de Calibre omgeving volledig is geïnitialiseerd, zodat u alle Calibre code in uw script kunt gebruiken. om opdrachtregelargumenten te gebruiken met uw script, gebruik de vorm: "

#: ../../__w/calibre/calibre/manual/develop.rst:385
msgid ""
"The ``--`` causes all subsequent arguments to be passed to your script."
msgstr "De `` --`` zorgt ervoor dat alle volgende argumenten aan je script worden doorgegeven."

#: ../../__w/calibre/calibre/manual/develop.rst:389
msgid "Using calibre in your projects"
msgstr "Calibre gebruiken in uw projecten"

#: ../../__w/calibre/calibre/manual/develop.rst:391
msgid ""
"It is possible to directly use calibre functions/code in your Python "
"project. Two ways exist to do this:"
msgstr "Het is mogelijk calibre functies/code direct te gebruiken  in uw Python project. Er zijn twee manieren om dit te doen:"

#: ../../__w/calibre/calibre/manual/develop.rst:394
msgid "Binary install of calibre"
msgstr "Binaire installatie van Calibre"

#: ../../__w/calibre/calibre/manual/develop.rst:396
msgid ""
"If you have a binary install of calibre, you can use the Python interpreter "
"bundled with calibre, like this::"
msgstr "Als u een binaire installatie van calibre hebt, kan u de Python vertaler, gebundeld met calibre, zo gebruiken::"

#: ../../__w/calibre/calibre/manual/develop.rst:401
msgid "Source install on Linux"
msgstr "Broncode installatie op Linux"

#: ../../__w/calibre/calibre/manual/develop.rst:403
msgid ""
"In addition to using the above technique, if you do a source install on "
"Linux, you can also directly import calibre, as follows::"
msgstr "Bijkomend aan de techniek boven, als u een broninstallatie doet in Linux kan u calibre ook direct importeren, op deze manier::"

#: ../../__w/calibre/calibre/manual/develop.rst:411
msgid ""
"It is essential that you import the init_calibre module before any other "
"calibre modules/packages as it sets up the interpreter to run calibre code."
msgstr "Het is essentieel dat u de init_calibre module importeert voor enige andere calibre modules/packages want het stelt de vertaler in om de calibre code te draaien."

#: ../../__w/calibre/calibre/manual/develop.rst:415
msgid "API documentation for various parts of calibre"
msgstr "API installatie voor diverse onderdelen van Calibre"
