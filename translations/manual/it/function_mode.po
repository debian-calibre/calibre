# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# francesca marzetta <inactive+fmarzetta@transifex.com>, 2015
# SKAL <sir_kalot@yahoo.it>, 2015
# Vincenzo Reale <vinx.reale@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-14 05:41+0530\n"
"PO-Revision-Date: 2015-08-14 09:31+0000\n"
"Last-Translator: francesca marzetta <inactive+fmarzetta@transifex.com>\n"
"Language-Team: Italian (http://www.transifex.com/calibre/calibre/language/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
msgid "Function Mode for Search & Replace in the Editor"
msgstr "Modalità Funzione per Cerca & sostituisci nell'Editor"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
msgid ""
"The Search & Replace tool in the editor support a *function mode*. In this "
"mode, you can combine regular expressions (see :doc:`regexp`) with "
"arbitrarily powerful python functions to do all sorts of advanced text "
"processing."
msgstr "Lo strumento Cerca & Sostituisci nell'editor supporta una *modalità funzione*. In questa modalità, puoi combinare espressioni regolari (vedi :doc:'regexp') con potenti funzioni pitone per fare tutti i tipi di elaborazione testo avanzato."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
msgid ""
"In the standard *regexp* mode for search and replace, you specify both a "
"regular expression to search for as well as a template that is used to "
"replace all found matches. In function mode, instead of using a fixed "
"template, you specify an arbitrary function, in the `python programming "
"language <https://docs.python.org/2.7/>`_. This allows you to do lots of "
"things that are not possible with simple templates."
msgstr "Nella modalità standard *regexp* per cercare e sostituire, specifichi sia un'espressione regolare per cui cercare che un modello che viene usato per sostituire tutte le combinazioni trovate. In modalità funzione, invece di usare un modello fisso, specifichi una funzione arbitraria, nel `linguaggio di programmazione pitone <https://docs.python.org/2.7/>`_. Questo ti permette di fare tante cose che non sono possibili con semplici modelli."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
msgid ""
"Techniques for using function mode and the syntax will be described by means"
" of examples, showing you how to create functions to perform progressively "
"more complex tasks."
msgstr "Le tecniche per usare la modalità funzione e la sintassi saranno descritte attraverso esempi, mostrandoti come creare funzioni per effettuare compiti sempre più complessi."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
msgid "Automatically fixing the case of headings in the document"
msgstr "Fissando automaticamente il caso di titoli nel documento"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
msgid ""
"Here, we will leverage one of the builtin functions in the editor to "
"automatically change the case of all text inside heading tags to title "
"case::"
msgstr "Qui, useremo una delle funzioni integrate nell'editor per cambiare automaticamente la casella di tutto il testo all'interno dei tag di titolo per intitolare la casella::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
msgid ""
"For the function, simply choose the :guilabel:`Title-case text (ignore "
"tags)` builtin function. The will change titles that look like: ``<h1>some "
"TITLE</h1>`` to ``<h1>Some Title</h1>``. It will work even if there are "
"other HTML tags inside the heading tags."
msgstr "Per la funzione, scegli semplicemente la funzione integrata :guilabel: testo Titolo-casella (ignora i tag)'. Cambierà i titoli che appaiono come:  ``<h1>some TITLE</h1>`` in ``<h1>Some Title</h1>``. Funzionerà anche se ci sono altri tag HTML all'interno dei tag titolo."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:40
msgid "Your first custom function - smartening hyphens"
msgstr "La tua prima funzione personalizzata - trattini di bellezza"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:42
msgid ""
"The real power of function mode comes from being able to create your own "
"functions to process text in arbitrary ways. The Smarten Punctuation tool in"
" the editor leaves individual hyphens alone, so you can use the this "
"function to replace them with em-dashes."
msgstr "Il vero potere della modalità funzione sta nel fatto di essere in grado di creare le tue personali funzioni per elaborare il testo in modi arbitrari. Lo strumento Punteggiatura Furba nell'editor lascia i trattini individuali da soli, in modo che tu possa usare questa funzione per sostituirl con trattini di enfasi."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:47
msgid ""
"To create a new function, simply click the Create/Edit button to create a "
"new function and copy the python code from below."
msgstr "Per creare una nuova funzione, clicca semplicemente il pulsante Crea/Modifica per creare una nuova funzione e copia il codice pitone da sotto."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:55
msgid ""
"Every Search & Replace custom function must have a unique name and consist "
"of a python function named replace, that accepts all the arguments shown "
"above. For the moment, we wont worry about all the different arguments to "
"``replace()`` function. Just focus on the ``match`` argument. It represents "
"a match when running a search and replace. Its full documentation in "
"available `here <https://docs.python.org/2.7/library/re.html#match-"
"objects>`_. ``match.group()`` simply returns all the matched text and all we"
" do is replace hyphens in that text with em-dashes, first replacing double "
"hyphens and then single hyphens."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:65
msgid "Use this function with the find regular expression::"
msgstr "Usa questa funzione con l'espressione regolare di ricerca::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:69
msgid ""
"And it will replace all hyphens with em-dashes, but only in actual text and "
"not inside HTML tag definitions."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:74
msgid ""
"The power of function mode - using a spelling dictionary to fix mis-"
"hyphenated words"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:76
msgid ""
"Often, ebooks created from scans of printed books contain mis-hyphenated "
"words -- words that were split at the end of the line on the printed page. "
"We will write a simple function to automatically find and fix such words."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:101
msgid "Use this function with the same find expression as before, namely::"
msgstr "Usa questa funzione con la stessa espressione di ricerca di prima, vale a dire::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:105
msgid ""
"And it will magically fix all mis-hyphenated words in the text of the book. "
"The main trick is to use one of the useful extra arguments to the replace "
"function, ``dictionaries``.  This refers to the dictionaries the editor "
"itself uses to spell check text in the book. What this function does is look"
" for words separated by a hyphen, remove the hyphen and check if the "
"dictionary recognizes the composite word, if it does, the original words are"
" replaced by the hyphen free composite word."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:113
msgid ""
"Note that one limitation of this technique is it will only work for mono-"
"lingual books, because, by default, ``dictionaries.recognized()`` uses the "
"main language of the book."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:119
msgid "Auto numbering sections"
msgstr "Sezioni di numerazione automatica"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:121
msgid ""
"Now we will see something a little different. Suppose your HTML file has "
"many sections, each with a heading in an :code:`<h2>` tag that looks like "
":code:`<h2>Some text</h2>`. You can create a custom function that will "
"automatically number these headings with consecutive section numbers, so "
"that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:137
msgid "Use it with the find expression::"
msgstr "Usala con l'espressione di ricerca::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:141
msgid ""
"Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr "Posiziona il cursore sopra il file e clicca:guilabel:`Replace all`."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:143
msgid ""
"This function uses another of the useful extra arguments to ``replace()``: "
"the ``number`` argument. When doing a :guilabel:`Replace All` number is "
"automatically incremented for every successive match."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:147
msgid ""
"Another new feature is the use of ``replace.file_order`` -- setting that to "
"``'spine'`` means that if this search is run on multiple HTML files, the "
"files are processed in the order in which they appear in the book. See "
":ref:`file_order_replace_all` for details."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
msgid "Auto create a Table of Contents"
msgstr "Genera automaticamente un indice"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:156
msgid ""
"Finally, lets try something a little more ambitious. Suppose your book has "
"headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some "
"Text</h1>``. We will auto-generate an HTML Table of Contents based on these "
"headings. Create the custom function below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:199
msgid "And use it with the find expression::"
msgstr "E usala con l'espressione di ricerca::"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:203
msgid ""
"Run the search on :guilabel:`All text files` and at the end of the search, a"
" window will popup with \"Debug Output from your function\" which will have "
"the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:207
msgid ""
"The function above is heavily commented, so it should be easy to follow. The"
" key new feature is the use of another useful extra argument to the "
"``replace()`` function, the ``data`` object. The ``data`` object is a python"
" *dict* that persists between all successive invocations of ``replace()`` "
"during a single :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:213
msgid ""
"Another new feature is the use of ``call_after_last_match`` -- setting that "
"to ``True`` on the ``replace()`` function means that the editor will call "
"``replace()`` one extra time after all matches have been found. For this "
"extra call, the match object will be ``None``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:218
msgid ""
"This was just a demonstration to show you the power of function mode, if you"
" really needed to generate a Table of Contents from headings in your book, "
"you would be better off using the dedicated Table of Contents tool in "
":guilabel:`Tools->Table of Contents`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
msgid "The API for the function mode"
msgstr "L'API per la modalità funzione"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:226
msgid ""
"All function mode functions must be python functions named replace, with the"
" following signature::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:232
msgid ""
"When a find/replace is run, for every match that is found, the ``replace()``"
" function will be called, it must return the replacement string for that "
"match. If no replacements are to be done, it should return ``match.group()``"
" which is the original string. The various arguments to the ``replace()`` "
"function are documented below."
msgstr "Quando si usa la funzione cerca/sostituisci, per ogni riscontro, viene richiamata la funzione ``replace()``, deve restituire la stringa sostitutiva. Se non avviene nessuna sostituzione, deve restituire ``match.group()`` che è la stringa originale. I vari argomenti della funzione ``replace()`` sono descritti qui sotto."

#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
msgid "The ``match`` argument"
msgstr "L'argomento``corrispondenza``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:241
msgid ""
"The ``match`` argument represents the currently found match. It is a `python"
" Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_."
" It's most useful method is ``group()`` which can be used to get the matched"
" text corresponding to individual capture groups in the search regular "
"expression."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
msgid "The ``number`` argument"
msgstr "L'argomento ``number`` "

#: ../../home/kovid/work/calibre/manual/function_mode.rst:250
msgid ""
"The ``number`` argument is the number of the current match. When you run "
":guilabel:`Replace All`, every successive match will cause ``replace()`` to "
"be called with an increasing number. The first match has number 1."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
msgid "The ``file_name`` argument"
msgstr "L'aegomento ``nome_file``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:257
msgid ""
"This is the filename of the file in which the current match was found. When "
"searching inside marked text, the ``file_name`` is empty. The ``file_name`` "
"is in canonical form, a path relative to the root of the book, using ``/`` "
"as the path separator."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
msgid "The ``metadata`` argument"
msgstr "L'argomento ``metadati``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:265
msgid ""
"This represents the metadata of the current book, such as title, authors, "
"language, etc. It is an object of class "
":class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes "
"include, ``title``, ``authors`` (a list of authors) and ``language`` (the "
"language code)."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
msgid "The ``dictionaries`` argument"
msgstr "L'argomento ``dizionari``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:273
msgid ""
"This represents the collection of dictionaries used for spell checking the "
"current book. It's most useful method is ``dictionaries.recognized(word)`` "
"which will return ``True`` if the passed in word is recognized by the "
"dictionary for the current book's language."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
msgid "The ``data`` argument"
msgstr "L'argomento ``dati``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:281
msgid ""
"This a simple python ``dict``. When you run :guilabel:`Replace All`, every "
"successive match will cause ``replace()`` to be called with the same "
"``dict`` as data. You can thus use it to store arbitrary data between "
"invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
msgid "The ``functions`` argument"
msgstr "L'argomento ``funzioni``"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:290
msgid ""
"The ``functions`` argument gives you access to all other user defined "
"functions. This is useful for code re-use. You can define utility functions "
"in one place and re-use them in all your other functions. For example, "
"suppose you create a function name ``My Function`` like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:303
msgid ""
"Then, in another function, you can access the ``utility()`` function like "
"this:"
msgstr "Poi, in un'altra funzione, puoi accedere alla funzione ``utility()`` in questo modo:"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:311
msgid ""
"You can also use the functions object to store persistent data, that can be "
"re-used by other functions. For example, you could have one function that "
"when run with :guilabel:`Replace All` collects some data and another "
"function that uses it when it is run afterwards. Consider the following two "
"functions:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
msgid "Debugging your functions"
msgstr "Debug delle proprie funzioni"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:333
msgid ""
"You can debug the functions you create by using the standard ``print()`` "
"function from python. The output of print will be displayed in a popup "
"window after the Find/replace has completed. You saw an example of using "
"``print()`` to output an entire table of contents above."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:341
msgid "Choose file order when running on multiple HTML files"
msgstr "Scegliere l'ordine dei file quando si usano diversi file HTML"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:343
msgid ""
"When you run a :guilabel:`Replace All` on multiple HTML files, the order in "
"which the files are processes depends on what files you have open for "
"editing. You can force the search to process files in the order in which the"
" appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:355
msgid ""
"``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which "
"cause the search to process multiple files in the order they appear in the "
"book, either forwards or backwards, respectively."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:360
msgid ""
"Having your function called an extra time after the last match is found"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:362
msgid ""
"Sometimes, as in the auto generate table of contents example above, it is "
"useful to have your function called an extra time after the last match is "
"found. You can do this by setting the ``call_after_last_match`` attribute on"
" your function, like this:"
msgstr ""
