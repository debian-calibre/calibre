# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Darío Hereñú, 2014-2015
# David Martínez <jokerdm@gmail.com>, 2015
# david ruiz <daruc20@gmail.com>, 2015
# Jellby <jellby@yahoo.com>, 2014-2018,2020-2021
# Jose Antonio Mireles <jantoniomjr.91@gmail.com>, 2015
# Qualified Projects <drako.cjs@gmail.com>, 2015
# Walter Paterno <walter.paterno@gmail.com>, 2020
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-20 14:41+0000\n"
"PO-Revision-Date: 2021-01-17 18:10+0000\n"
"Last-Translator: Jellby <jellby@yahoo.com>\n"
"Language-Team: Spanish (http://www.transifex.com/calibre/calibre/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../__w/calibre/calibre/manual/template_lang.rst:4
msgid "The calibre template language"
msgstr "El lenguaje de plantillas de calibre"

#: ../../__w/calibre/calibre/manual/template_lang.rst:6
msgid ""
"The calibre template language is used in various places. It is used to "
"control the folder structure and file name when saving files from the "
"calibre library to the disk or e-book reader. It is also used to define "
"\"virtual\" columns that contain data from other columns and so on."
msgstr "El lenguaje de plantillas de calibre se usa en varios lugares. Se usa para controlar la estructura de carpetas y el nombre del archivo cuando se guardan archivos de la biblioteca de calibre en el disco o en un lector. También se usa para definir columnas «virtuales» que contienen datos de otras columnas, etcétera."

#: ../../__w/calibre/calibre/manual/template_lang.rst:9
msgid ""
"The basic template language is simple but has  powerful advanced features. A"
" template consists of text and names in curly brackets that are then "
"replaced by the corresponding metadata from the book being processed. For "
"example, the default template used for saving books to device in calibre "
"is::"
msgstr "El lenguaje de plantillas básico es simple pero también tiene potentes características avanzadas. Una plantilla consiste en texto y nombres entre llaves que se sustituyen por los metadatos correspondientes del libro que está siendo procesado. Por ejemplo, la plantilla predeterminada usada para guardar libros en un dispositivo en calibre es::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:15
#: ../../__w/calibre/calibre/manual/template_lang.rst:23
msgid "For the book \"The Foundation\" by \"Isaac Asimov\" it will become::"
msgstr "Para el libro «La Fundación» de «Isaac Asimov» da lugar a::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:19
msgid ""
"The slashes are text, which is put into the template where it appears. For "
"example, if your template is::"
msgstr "Las barras son texto que se ponen en la plantilla donde van a aparecer. Por ejemplo, si la plantilla es::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:27
msgid ""
"You can use all the metadata fields available in calibre in a template, "
"including any custom columns you have created, by using its 'lookup name'. "
"To find the lookup name for a column (field) hover your mouse over the "
"column header. Names for custom columns (columns you have created yourself) "
"always have a # as the first character. For series type custom columns there"
" is always an additional field named ``#seriesname_index`` that is the "
"series index for that series. So if you have a custom series field named "
"``#myseries``, there will also be a field named ``#myseries_index``."
msgstr "Puede usar los campos de metadatos disponibles en calibre en una plantilla, incluidas las columnas personalizadas que haya creado, usando su «nombre de búsqueda». Para obtener el nombre de búsqueda de una columna (campo), pase el cursor sobre el encabezado de la columna. Los nombre para las columnas personalizadas (columnas que haya creado usted) siempre empiezan por ``#``. Para columnas personalizadas de tipo serie, siempre hay un campo adicional llamado ``#nombredeserie_index`` que es el índice de serie para dicha serie. Así, si tiene un campo personalizado de serie llamado ``#miserie``, también habrá un campo llamado ``#miserie_index``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:33
msgid "In addition to the column based fields, you also can use::"
msgstr "Además de los campos basados en columnas, también puede usar::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:38
msgid ""
"If a book does not have a particular piece of metadata, the field in the "
"template is replaced by the empty string for that book. Consider, for "
"example::"
msgstr "Si un libro no tiene un determinado metadato, el campo se se sustituye por un texto vacío en la plantilla para este libro. Considere, por ejemplo::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:43
msgid "If a book has a series, the template will produce::"
msgstr "Si un libro tiene una serie, la plantilla producirá::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:47
msgid "and if a book does not have a series::"
msgstr "y si un libro no pertenece a una serie::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:51
msgid ""
"(calibre automatically removes multiple slashes and leading or trailing "
"spaces)."
msgstr "(calibre elimina automáticamente barras múltiples y espacios iniciales o finales)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:54
msgid "Advanced formatting"
msgstr "Formato avanzado"

#: ../../__w/calibre/calibre/manual/template_lang.rst:56
msgid ""
"You can do more than just simple substitution with the templates. You can "
"also conditionally include text and control how the substituted data is "
"formatted."
msgstr "Puede hacerse más que simples sustituciones con las plantillas. Se puede incluir texto de manera condicional y controlar el formato de los datos sustituidos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:59
msgid ""
"First, conditionally including text. There are cases where you might want to"
" have text appear in the output only if a field is not empty. A common case "
"is ``series`` and ``series_index``, where you want either nothing or the two"
" values with a hyphen between them. calibre handles this case using a "
"special field syntax."
msgstr "Primero, incluir texto condicionalmente. Hay casos en los que puede querer que aparezca un texto en la salida sólo si un campo no está vacío. Un caso común es ``series`` y ``series_index``, para los que puede querer o nada o ambos valores con un guión entre ellos. calibre tiene en cuenta este caso usando una sintaxis de campo especial."

#: ../../__w/calibre/calibre/manual/template_lang.rst:63
msgid "For example, assume you want to use the template::"
msgstr "Por ejemplo, supongamos que desea usar la plantilla::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:67
msgid ""
"If the book has no series, the answer will be ``- - title``. Most people "
"would rather the result be simply ``title``, without the hyphens. To do "
"this, use the extended syntax ``{field:|prefix_text|suffix_text}``. When you"
" use this syntax, if field has the value SERIES then the result will be "
"``prefix_textSERIESsuffix_text``. If field has no value, then the result "
"will be the empty string (nothing); the prefix and suffix are ignored. The "
"prefix and suffix can contain blanks. **Do not use subtemplates (`{ ... }`) "
"or functions (see below) as the prefix or the suffix.**"
msgstr "Si el libro no tiene serie, la respuesta será ``- - title``. La mayoría preferiría que el resultado fuera simplemente ``title``, sin los guiones. Para conseguir esto, use la sintaxis extendida ``{campo:|prefijo|sufijo}``. Cuando usa esta sintaxis, si el campo tiene el valor SERIE el resultado será ``prefijoSERIEsufijo``. Si el campo no tiene ningún valor, el resultado será un texto vacío (nada); el prefijo y el sufijo se descartan. El prefijo y el sufijo pueden contener espacios. **No use subplantillas (`{ ... }`) ni funciones (ver más adelante) como prefijo o sufijo.**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:73
msgid ""
"Using this syntax, we can solve the above series problem with the template::"
msgstr "Usando esta sintaxis, podemos resolver el problema anterior de las series con esta plantilla::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:77
msgid ""
"The hyphens will be included only if the book has a series index, which it "
"will have only if it has a series."
msgstr "Los guiones se incluirán solamente si el libro tiene índice de serie, que sólo tendrá si tiene una serie."

#: ../../__w/calibre/calibre/manual/template_lang.rst:79
msgid ""
"Notes: you must include the : character if you want to use a prefix or a "
"suffix. You must either use no \\| characters or both of them; using one, as"
" in ``{field:| - }``, is not allowed. It is OK not to provide any text for "
"one side or the other, such as in ``{series:|| - }``. Using ``{title:||}`` "
"is the same as using ``{title}``."
msgstr "Notas: debe incluir el carácter ``:`` si quiere usar un prefijo o un sufijo. Debe usar ambos caracteres ``|`` o ninguno; usar sólo no, como en ``{campo:| - }``, no está permitido. Es posible especificar un texto vacío en uno u otro lugar, como en ``{series:|| - }``. Usar ``{title:||}`` es lo mismo que usar ``{title}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:83
msgid ""
"Second: formatting. Suppose you wanted to ensure that the series_index is "
"always formatted as three digits with leading zeros. This would do the "
"trick::"
msgstr "Segundo: formato. Supongamos que queremos asegurarnos de que series_index siempre tenga tres dígitos, con ceros a la izquierda. Se conseguiría de esta manera::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:88
msgid "If instead of leading zeros you want leading spaces, use::"
msgstr "Si en lugar de ceros a la izquierda desea espacios, utilice::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:92
msgid "For trailing zeros, use::"
msgstr "Para obtener ceros a la derecha use::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:96
msgid ""
"If you use series indices with sub values (e.g., 1.1), you might want to "
"ensure that the decimal points line up. For example, you might want the "
"indices 1 and 2.5 to appear as 01.00 and 02.50 so that they will sort "
"correctly. To do this, use::"
msgstr "Si usa índices de serie con subvalores (por ejemplo 1,1), puede querer asegurarse de que los decimales quedan alineados. Por ejemplo, puede que los índices 1 y 2,5 aparezcan como 01,00 y 02,50 para que se ordenen correctamente. Para ello, use::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:101
msgid "If you want only the first two letters of the data, use::"
msgstr "Si quiere sólo las dos primeras letras de los datos, use::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:105
msgid ""
"The calibre template language comes from Python and for more details on the "
"syntax of these advanced formatting operations, look at the `Python "
"documentation <https://docs.python.org/library/string.html#format-string-"
"syntax>`."
msgstr "El lenguaje de plantillas de calibre proviene de Python, para obtener más detalles sobre la sintaxis de estas operaciones de formato avanzadas, vea la `documentación de Python <https://docs.python.org/library/string.html#format-string-syntax>` (en inglés)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:110
msgid "Using templates in custom columns"
msgstr "Usar plantillas en columnas personalizadas"

#: ../../__w/calibre/calibre/manual/template_lang.rst:112
msgid ""
"Sometimes you want to display metadata in the book list that calibre does "
"not normally display, or to display data in a way different from how calibre"
" normally does. For example, you might want to display the ISBN, a field "
"that calibre does not display. You can use custom columns for this by "
"creating a column with the type 'column built from other columns' (hereafter"
" called composite columns), and entering a template. Result: calibre will "
"display a column showing the result of evaluating that template. To display "
"the ISBN, create the column and enter ``{identifiers:select(isbn)}`` into "
"the template box. To display a column containing the values of two series "
"custom columns separated by a comma, use ``{#series1:||,}{#series2}``."
msgstr "A veces querrá mostrar metadatos en la lista de libros que calibre no muestra normalmente, o mostrarlos de una manera diferente. Por ejemplo, puede querer mostrar el ISBN, un campo que calibre no muestra. Puede usar columnas personalizadas para esto creando una columna de tipo «columna generada a partir de otras columnas» (en lo sucesivo llamadas columnas compuestas), e introduciendo una plantilla. calibre mostrará una columna con el resultado de evaluar la plantilla. Para mostrar el ISBN, cree la columna e introduzca ``{identifiers:select(isbn)}`` en el cuadro de plantilla. Para mostrar una columna que contenga los valores de dos campos personalizados de serie separados por una coma, use ``{#serie1:||,}{#serie2}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:119
msgid "Composite columns can use any template option, including formatting."
msgstr "Las columnas compuestas pueden utilizar cualquier opción de plantilla, incluidas las de formato."

#: ../../__w/calibre/calibre/manual/template_lang.rst:121
msgid ""
"You cannot edit the data displayed in a composite column. If you edit a "
"composite column, for example by double-clicking it, you will open the "
"template for editing, not the underlying data. Editing the template on the "
"GUI is a quick way of testing and changing composite columns."
msgstr "No puede modificar los datos mostrados en una columna compuesta. Si modifica una columna compuesta, por ejemplo pulsando dos veces sobre ella, se abrirá la plantilla para modificarla, no los datos resultantes. Modificar la plantilla en la interfaz gráfica es una manera rápida de probar y modificar columnas compuestas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:125
msgid "Using functions in templates - Single Function Mode"
msgstr "Usar funciones en plantillas: modo de función única"

#: ../../__w/calibre/calibre/manual/template_lang.rst:127
msgid ""
"Suppose you want to display the value of a field in upper case, when that "
"field is normally in title case. You can do this (and many more things) "
"using the functions available for templates. For example, to display the "
"title in upper case, use ``{title:uppercase()}``. To display it in title "
"case, use ``{title:titlecase()}``."
msgstr "Supongamos que desea mostrar el valor de un campo en mayúsculas, aunque normalmente el valor del campo tiene sólo las iniciales en mayúscula. Puede conseguir esto (y muchas otras cosas) usando las funciones disponibles para plantillas. Por ejemplo, para mostrar el título en mayúsculas use ``{title:uppercase()}``. Para mostrarlo con las iniciales en mayúscula use ``{title:titlecase()}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:131
msgid ""
"Functions appear in the format part, going after the ``:`` and before the "
"first ``|`` or the closing ``}``. If you have both a format and a function "
"reference, the function comes after another ``:``. Functions must always end"
" with ``()``. Some functions take extra values (arguments), and these go "
"inside the ``()``."
msgstr "Las funciones aparecen en la parte del formato, después de ``:`` y antes del primer ``|`` o del ``}`` de cierre. Si tiene tanto un formato como una referencia de función, la función después de otro ``:``. Las funciones siempre deben acabar con ``()``. Algunas funciones toman valores adicionales (argumentos), y éstos van dentro de los ``()``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:135
msgid ""
"Functions are always applied before format specifications. See further down "
"for an example of using both a format and a function, where this order is "
"demonstrated."
msgstr "Las funciones siempre se aplican antes de las especificaciones de formato. Véase más abajo un ejemplo de cómo usar un formato y una función, donde se demuestra este orden."

#: ../../__w/calibre/calibre/manual/template_lang.rst:138
msgid ""
"The syntax for using functions is ``{field:function(arguments)}``, or "
"``{field:function(arguments)|prefix|suffix}``. Arguments are separated by "
"commas. Commas inside arguments must be preceded by a backslash ( ``\\`` ). "
"The last (or only) argument cannot contain a closing parenthesis ( ``)`` ). "
"Functions return the value of the field used in the template, suitably "
"modified."
msgstr "La sintaxis para usar funciones es ``{campo:función(argumentos)}`` o ``{campo:función(argumentos)|prefijo|sufijo}``. Los argumentos van separados por comas. Las comas dentro de los argumentos deben ir precedidas por una barra invertida ( ``\\\\`` ). El último (o único) argumento no puede contener un paréntesis de cierre ( ``)`` ). Las funciones devuelven el valor del campo usado en la plantilla, convenientemente modificado."

#: ../../__w/calibre/calibre/manual/template_lang.rst:142
msgid ""
"Important: If you have programming experience, please note that the syntax "
"in this mode (single function) is not what you might expect. Strings are not"
" quoted. Spaces are significant. All arguments must be constants; there is "
"no sub-evaluation. **Do not use subtemplates (`{ ... }`) as function "
"arguments.** Instead, use :ref:`Template Program Mode <template_mode>` and "
":ref:`General Program Mode <general_mode>`."
msgstr "Importante: Si tiene experiencia en programación, tenga en cuenta que la sintaxis de este modo (de función única) no es la que podría esperarse. Los textos van sin comillas. Los espacios son importantes. Todos los argumentos deben ser constantes; no hay evaluación interna. **No use subplantillas (``{...}``) como argumentos de función.** En lugar de ello, use el :ref:`modo de programación de plantilla <template_mode>` y el :ref:`modo de programación general <general_mode>`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:147
msgid ""
"Many functions use regular expressions. In all cases, regular expression "
"matching is case-insensitive."
msgstr "Muchas funciones usan expresiones regulares. En todos los casos, la expresión regular no distingue entre mayúsculas y minúsculas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:149
msgid ""
"The functions available are listed below. Note that the definitive "
"documentation for functions is available in the section :ref:`Function "
"reference <template_functions_reference>`:"
msgstr "Las funciones disponibles se enumeran a continuación. Tenga en cuenta que la documentación definitiva para las funciones está disponibles en la sección :ref:`Referencia de funciones <template_functions_reference>`:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:152
msgid "``lowercase()``   -- return value of the field in lower case."
msgstr "``lowercase()`` -- devuelve el valor del campo en minúsculas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:153
msgid "``uppercase()``   -- return the value of the field in upper case."
msgstr "``uppercase()`` -- devuelve el valor del campo en mayúsculas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:154
msgid "``titlecase()``   -- return the value of the field in title case."
msgstr "``titlecase()`` -- devuelve el valor del campo con las iniciales en mayúscula."

#: ../../__w/calibre/calibre/manual/template_lang.rst:155
msgid ""
"``capitalize()``  -- return the value with the first letter upper case and "
"the rest lower case."
msgstr "``capitalize()`` -- devuelve el valor con la primera letra mayúscula y el resto en minúsculas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:156
msgid ""
"``contains(pattern, text if match, text if not match)`` -- checks if field "
"contains matches for the regular expression `pattern`. Returns `text if "
"match` if matches are found, otherwise it returns `text if no match`."
msgstr "``contains(patrón, texto_si_coincide, texto_si_no_coincide)`` -- comprueba si el campo contiene coincidencias para la expresión regular `patrón`. Devuelve `texto_si_coincide` si se encuentran coincidencias, en caso contrario devuelve `texto_si_no_coincide`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:158
msgid ""
"``count(separator)`` -- interprets the value as a list of items separated by"
" `separator`, returning the number of items in the list. Most lists use a "
"comma as the separator, but authors uses an ampersand. Examples: "
"`{tags:count(,)}`, `{authors:count(&)}`"
msgstr "``count(separador)`` -- interpreta el valor como una lista de elementos separados por `­separador` y devuelve el número de elementos de la lista. La mayoría de las listas usan una coma como separador, pero «authors» usa un ampersand («&»). Ejemplos: `{tags:count(,)}`, `{authors,count(&)}`"

#: ../../__w/calibre/calibre/manual/template_lang.rst:160
msgid ""
"``format_number(template)`` -- interprets the field as a number and format "
"that number using a Python formatting template such as \"{0:5.2f}\" or "
"\"{0:,d}\" or \"${0:5,.2f}\". The field_name part of the template must be a "
"0 (zero) (the \"{0:\" in the above examples). You can leave off the leading "
"\"{0:\" and trailing \"}\" if the template contains only a format. See the "
"template language and Python documentation for more examples. Returns the "
"empty string if formatting fails."
msgstr "``format_number(plantilla)`` -- interpreta el campo como un número y le da formato usando una plantilla de formato de Python como «{0:5.2f}» o «{0:,d}» o «${0:5,.2f}». El nombre del campo dentro de la plantilla debe ser un 0 (cero) (el «{0:» en los ejemplos anteriores). Si la plantilla contiene sólo un formato, puede omitir el «{0:» inicial y el «}» final. Véase la documentación del lenguaje de plantillas y de Python para más ejemplos. Devuelve un texto vacío si el formato falla."

#: ../../__w/calibre/calibre/manual/template_lang.rst:164
msgid ""
"``human_readable()`` -- expects the value to be a number and returns a "
"string representing that number in KB, MB, GB, etc."
msgstr "``human_readable()`` -- espera que el valor sea un número y devuelve un texto que representa ese número en KB, MB, GB, etc."

#: ../../__w/calibre/calibre/manual/template_lang.rst:165
msgid ""
"``ifempty(text)`` -- if the field is not empty, return the value of the "
"field. Otherwise return `text`."
msgstr "``ifempty(texto)`` -- si el campo no está vacío, devuelve el valor del campo. En caso contrario devuelve `texto`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:166
msgid ""
"``in_list(separator, pattern, found_val, ..., not_found_val)`` -- interpret "
"the field as a list of items separated by `separator`, evaluating the "
"`pattern` against each value in the list. If the `pattern` matches a value, "
"return `found_val`, otherwise return `not_found_val`. The `pattern` and "
"`found_value` can be repeated as many times as desired, permitting returning"
" different values depending on the search. The patterns are checked in "
"order. The first match is returned."
msgstr "``in_list(separador, patrón, encontrado, ..., no_encontrado)`` -- interpreta el campo como una lista de elementos separados por `separador` y evalúa `patrón` con cada valor de la lista. Si `patrón` coincide con alguno de los elementos de la lista, devuelve `encontrado`, en caso contrario devuelve `no_encontrado`. Los argumentos `patrón` y `encontrado` pueden repetirse tantas veces como se desee, lo que permite devolver diferentes valores según la búsqueda. Los patrones se evalúan en orden. Se devuelve la primera coincidencia."

#: ../../__w/calibre/calibre/manual/template_lang.rst:170
msgid ""
"``language_codes(lang_strings)`` -- return the language codes for the "
"strings passed in `lang_strings`. The strings must be in the language of the"
" current locale. `Lang_strings` is a comma-separated list."
msgstr "``language_codes(nombres)`` -- devuelve los códigos de idioma correspondientes a «nombres». Los nombres deben estar en el idioma actual. El argumento «nombres» es una lista separada por comas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:172
msgid ""
"``language_strings(lang_codes, localize)`` -- return the strings for the "
"language codes passed in `lang_codes`. If `localize` is zero, return the "
"strings in English. If localize is not zero, return the strings in the "
"language of the current locale. `Lang_codes` is a comma-separated list."
msgstr "``language_strings(códigos, localizar)`` -- devuelve los nombres de los idiomas identificados por `códigos`. Si `localizar` es cero, devuelve los nombres en inglés. Si `localizar` no es cero, devuelve los nombres en el idioma actual. El argumento `códigos` es una lista separada por comas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:175
msgid ""
"``list_item(index, separator)`` -- interpret the field as a list of items "
"separated by `separator`, returning the `index`th item. The first item is "
"number zero. The last item can be returned using `list_item(-1,separator)`. "
"If the item is not in the list, then the empty value is returned. The "
"separator has the same meaning as in the `count` function."
msgstr "``list_item(índice, separador)`` -- interpreta el campo como una lista de elementos separados por «separador» y devuelve el elemento número «índice». El primer elemento es el número cero. El último elemento puede obtenerse con ``list_item(-1, separador)``. Si el elemento no está en la lista devuelve un valor vacío. El separador tiene el mismo significado que en la función «count»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:178
msgid ""
"``lookup(pattern, field, pattern, field, ..., else_field)`` -- like switch, "
"except the arguments are field (metadata) names, not text. The value of the "
"appropriate field will be fetched and used. Note that because composite "
"columns are fields, you can use this function in one composite field to use "
"the value of some other composite field. This is extremely useful when "
"constructing variable save paths (more later)."
msgstr "``lookup(patrón, campo, patrón, campo, ..., otro_campo)`` -- como ``switch``, pero los argumentos son nombres de campo (metadatos), no texto. Se usará el valor del campo apropiado. Tenga en cuenta que puesto que las columnas compuestas son campos, puede usar esta función en un campo compuesto para usar el valor de otro campo compuesto. Esto es muy útil para construir rutas de guardado variables (más sobre esto más adelante)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:181
msgid ""
"``rating_to_stars(use_half_stars)`` -- Returns the rating as string of star "
"characters. The source value must be a number between 0 and 5. Set "
"use_half_stars to 1 if you want half star characters for custom ratings "
"columns that are not integers, for example 2.5."
msgstr "``rating_to_stars(usar_media_estrella)`` -- Devuelve la calificación como caracteres de estrella. El valor de origen debe ser un número entre 0 y 5. Ponga ``usar_media_estrella`` a 1 si quiere caracteres de media estrella para columnas personalizadas de calificación que no sean enteros, por ejemplo 2.5."

#: ../../__w/calibre/calibre/manual/template_lang.rst:183
msgid ""
"``re(pattern, replacement)`` -- return the field after applying the regular "
"expression. All instances of `pattern` are replaced with `replacement`. As "
"in all of calibre, these are Python-compatible regular expressions."
msgstr "``re(patrón, sustitución)`` -- devuelve el campo después de aplicar la expresión regular. Todas las veces que aparezca `patrón` se sustituirá por `sustitución`. Como en todo calibre, se trata de expresiones regulares compatibles con Python."

#: ../../__w/calibre/calibre/manual/template_lang.rst:185
msgid ""
"``select(key)`` -- interpret the field as a comma-separated list of items, "
"with the items being of the form \"id:value\". Find the pair with the id "
"equal to key, and return the corresponding value. This function is "
"particularly useful for extracting a value such as an ISBN from the set of "
"identifiers for a book."
msgstr "``select(clave)`` -- interpreta el campo como una lista de elementos separados por comas, con los elementos de la forma «id:valor». Encuentra la pareja con «id» igual a «clave» y devuelve el valor correspondiente. Esta función es particularmente útil para extraer un valor tal como el ISBN del conjunto de identificadores de un libro."

#: ../../__w/calibre/calibre/manual/template_lang.rst:188
msgid ""
"``shorten(left chars, middle text, right chars)`` -- Return a shortened "
"version of the field, consisting of `left chars` characters from the "
"beginning of the field, followed by `middle text`, followed by `right chars`"
" characters from the end of the string. `Left chars` and `right chars` must "
"be integers. For example, assume the title of the book is `Ancient English "
"Laws in the Times of Ivanhoe`, and you want it to fit in a space of at most "
"15 characters. If you use ``{title:shorten(9,-,5)}``, the result will be "
"`Ancient E-nhoe`. If the field's length is less than ``left chars`` + "
"``right chars`` + the length of ``middle text``, then the field will be used"
" intact. For example, the title `The Dome` would not be changed."
msgstr "``shorten(car_izq, texto_medio, car_der)`` -- devuelve una versión abreviada del campo, consistente en un número `car_izq` de caracteres del principio del campo, seguidos de `texto_medio`, seguido de un número `car_der` de caracteres del final del campo. `car_izq` y `car_der` deben ser números enteros. Por ejemplo, supongamos que el título del libro es «Novísima recopilación de las leyes de España» y que quiere que quepa en un espacio de 15 caracteres a lo sumo. Si usa ``{title:shorten(9,-,5)}``, el resultado será «Novísima -spaña». Si la longitud del campo es menor que `car_izq` + `car_der` + la longitud de `texto_medio`, se usará el campo intacto. Por ejemplo, el título «La colmena» no se cambiará."

#: ../../__w/calibre/calibre/manual/template_lang.rst:194
msgid ""
"``str_in_list(separator, string, found_val, ..., not_found_val)`` -- "
"interpret the field as a list of items separated by `separator`, comparing "
"the `string` against each value in the list. If the `string` matches a value"
" (ignoring case), return `found_val`, otherwise return `not_found_val`. If "
"the string contains separators, then it is also treated as a list and each "
"value is checked. The `string` and `found_value` can be repeated as many "
"times as desired, permitting returning different values depending on the "
"search. The strings are checked in order. The first match is returned."
msgstr "``str_in_list(separador, texto, encontrado, ..., no_encontrado)`` -- interpreta el campo como una lista de elementos separados por `separador`, y compara `texto` con cada valor de la lista. Si `texto` coincide con alguno de los valores (sin distinción de mayúsculas y minúsculas), devuelve `encontrado`, en caso contrario devuelve `no_encontrado`. Si el texto contiene separadores, también se considera como una lista y se comprueba cada elemento. Los argumentos `patrón` y `encontrado` pueden repetirse tantas veces como se desee, lo que permite devolver diferentes valores según la búsqueda. Los patrones se evalúan en orden. Se devuelve la primera coincidencia."

#: ../../__w/calibre/calibre/manual/template_lang.rst:199
msgid ""
"``subitems(start_index, end_index)`` -- This function is used to break apart"
" lists of tag-like hierarchical items such as genres. It interprets the "
"field as a comma-separated list of tag-like items, where each item is a "
"period-separated list. Returns a new list made by first finding all the "
"period-separated tag-like items, then for each such item extracting the "
"components from `start_index` to `end_index`, then combining the results "
"back together. The first component in a period-separated list has an index "
"of zero. If an index is negative, then it counts from the end of the list. "
"As a special case, an end_index of zero is assumed to be the length of the "
"list. Examples::"
msgstr "``subitems(índice_inicio, índice_fin)`` -- Esta función se usa para separar listas de elementos jerárquicos de tipo etiqueta, tales como los géneros. Interpreta el campo como una lista de elementos separados por comas, donde cada elemento es a su vez una lista de elementos separados por puntos. Devuelve una nueva lista formada tomando, de cada lista de elementos separados por puntos, los elementos situados entre las posiciones `índice_inicio` e `índice_fin` y combinando los resultados. El primer elemento de cada lista separada por puntos ocupa la posición cero. Si un índice es negativo, se cuenta desde el final de la lista. Como caso especial, si `índice_fin` es cero, se considera que es el final de la lista. Ejemplos::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:214
msgid ""
"``sublist(start_index, end_index, separator)`` -- interpret the field as a "
"list of items separated by `separator`, returning a new list made from the "
"items from `start_index` to `end_index`. The first item is number zero. If "
"an index is negative, then it counts from the end of the list. As a special "
"case, an end_index of zero is assumed to be the length of the list. Examples"
" assuming that the tags column (which is comma-separated) contains \"A, B "
",C\"::"
msgstr "``sublist(índice_inicio, índice_fin, separador)`` -- interpreta el campo como una lista de elementos separados por `separador` y devuelve una nueva lista con los elementos comprendidos entre la posición `índice_inicio` e `índice_fin`. El primer elemento ocupa la posición cero. Si un índice es negativo, se cuenta desde el final de la lista. Como caso especial, si `índice_fin` es cero, se considera que es el final de la lista. Ejemplos  suponiendo que la columna de etiquetas (definida como valores separados por comas) contiene «A, B, C»::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:223
msgid ""
"``swap_around_articles(separator)`` -- returns the val with articles moved "
"to the end. The value can be a list, in which case each member of the list "
"is processed. If the value is a list then you must provide the list value "
"separator. If no separator is provided then the value is treated as being a "
"single value, not a list."
msgstr "``swap_around_articles(separador)`` -- devuelve el valor con los artículos puestos al final. El valor puede ser una lista, en cuyo caso se procesará cada elemento de la lista. Si el valor es una lista, debe proporcionar el separador de los elementos de la lista. Si no se proporciona ningún separador, la lista se trata como un único valor, no una lista."

#: ../../__w/calibre/calibre/manual/template_lang.rst:226
msgid ""
"``swap_around_comma()`` -- given a field with a value of the form ``B, A``, "
"return ``A B``. This is most useful for converting names in LN, FN format to"
" FN LN. If there is no comma, the function returns val unchanged."
msgstr "``swap_around_comma()`` -- dado un campo con un valor de la forma ``B, A``, devuelve ``A B``. Esto es útil para convertir nombres en formato APELLIDO, NOMBRE a NOMBRE APELLIDO. Si no hay ninguna coma, la función devuelve «val» sin cambios."

#: ../../__w/calibre/calibre/manual/template_lang.rst:228
msgid ""
"``switch(pattern, value, pattern, value, ..., else_value)`` -- for each "
"``pattern, value`` pair, checks if the field matches the regular expression "
"``pattern`` and if so, returns that ``value``. If no ``pattern`` matches, "
"then ``else_value`` is returned. You can have as many ``pattern, value`` "
"pairs as you want."
msgstr "``switch(patrón, valor, patrón, valor, ..., otro_valor)`` -- para cada pareja `patrón`, `valor`, comprueba si el campo contiene coincidencias para la expresión regular `patrón` y, en tal caso, devuelve ese `valor`. Si no coincide ningún patrón, devuelve `otro_valor`. Pueden emplearse tantas parejas `patrón`, `valor` como se desee."

#: ../../__w/calibre/calibre/manual/template_lang.rst:231
msgid ""
"``test(text if not empty, text if empty)`` -- return `text if not empty` if "
"the field is not empty, otherwise return `text if empty`."
msgstr "``test(texto_si_no_vacío, texto_si_vacío)`` -- devuelve `texto_si_no_vacío` si el campo no está vacío, devuelve `texto_si_vacío` en caso contrario."

#: ../../__w/calibre/calibre/manual/template_lang.rst:232
msgid ""
"``transliterate()`` -- Returns a string in a latin alphabet formed by "
"approximating the sound of the words in the source field. For example, if "
"the source field is ``Фёдор Миха́йлович Достоевский`` the function returns "
"``Fiodor Mikhailovich Dostoievskii``.'"
msgstr "``transliterate()`` -- Devuelve un texto en el alfabeto latino formado por aproximación del sonido de las palabras en el campo de origen. Por ejemplo, si el campo de origen es «Фёдор Миха́йлович Достоевский» la función devuelve «Fiodor Mikhailovich Dostoievskii»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:235
msgid ""
"Now, what about using functions and formatting in the same field? Suppose "
"you have an integer custom column called ``#myint`` that you want to see "
"with leading zeros, as in ``003``. To do this, you would use a format of "
"``0>3s``. However, by default, if a number (integer or float) equals zero "
"then the field produces the empty value, so zero values will produce "
"nothing, not ``000``. If you really want to see ``000`` values, then you use"
" both the format string and the ``ifempty`` function to change the empty "
"value back to a zero. The field reference would be::"
msgstr "Veamos ahora cómo usar funciones y format en el mismo campo. Supongamos que tiene una columna personalizada con números enteros llamada ``#myint``, que quiere mostrar con ceros a la izquierda, como en «003». Para conseguirlo usaría un formato de ``0>3s``. Sin embargo, de manera predeterminada, si un número (entero o decimal) es igual a cero, el campo produce un valor vacío, así que el valor cero no produce nada, no «000». Si realmente quiere ver los valores como «000», debe usar el texto de formato y la función ``ifempty`` para cambiar el valor vacío a cero de nuevo, la referencia al campo sería::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:242
msgid ""
"Note that you can use the prefix and suffix as well. If you want the number "
"to appear as ``[003]`` or ``[000]``, then use the field::"
msgstr "Tenga en cuenta que puede usar también prefijo y sufijo. Si desea que el número aparezca como ``[003]`` o ``[000]``, use el campo::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:249
msgid "More complex functions in templates - Template Program Mode"
msgstr "Funciones más complejas en plantillas: modo de programación de plantillas"

#: ../../__w/calibre/calibre/manual/template_lang.rst:251
msgid ""
"Template Program Mode differs from Single Function Mode in that it permits "
"writing template expressions that refer to other metadata fields, use nested"
" functions, modify values, and do arithmetic. It is a reasonably complete "
"programming language."
msgstr "El modo de programación de plantillas se diferencia del modo de función única en que permite escribir expresiones de plantilla que se refieren a otros campos de metadatos, usan plantillas anidadas, modifican valores y realizan operaciones aritméticas. Es un lenguaje de programación razonablemente completo."

#: ../../__w/calibre/calibre/manual/template_lang.rst:254
msgid ""
"You can use the functions documented above in Template Program Mode. See "
"below for details."
msgstr "Puede usar las funciones documentadas anteriormente en modo de programación de plantillas. Véase más adelante para más detalles."

#: ../../__w/calibre/calibre/manual/template_lang.rst:256
msgid ""
"Beginning with an example, assume you want your template to show the series "
"for a book if it has one, otherwise show the value of a custom field #genre."
" You cannot do this in the basic template language because you cannot make "
"reference to another metadata field within a template expression. In "
"Template Program Mode, you can. The following expression works::"
msgstr "Para empezar con un ejemplo, supongamos que quiere una plantilla que muestre la serie de un libro si la tiene, y en caso contrario muestre el valor del campo personalizado «#genre». Esto no se puede hacer en el modo de función única, porque no se puede hacer referencia a otro campo en la expresión de la plantilla. En el modo de programación de plantillas sí se puede. La siguiente expresión funciona::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:262
msgid "The example shows several things:"
msgstr "El ejemplo muestra varias cosas:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:264
msgid ""
"Template Program Mode is used if the expression begins with ``:'`` and ends "
"with ``'``. Anything else is assumed to be in single function mode."
msgstr "el modo de programación de plantillas se usa si la expresión empieza por ``:'`` y termina por ``'``. Cualquier otra cosa se supone que es una sola función."

#: ../../__w/calibre/calibre/manual/template_lang.rst:265
msgid ""
"the variable ``$`` stands for the field the expression is operating upon, "
"``#series`` in this case."
msgstr "la variable ``$`` representa el campo sobre el que opera la expresión, ``#series`` en este caso."

#: ../../__w/calibre/calibre/manual/template_lang.rst:266
msgid ""
"functions must be given all their arguments. There is no default value. For "
"example, the standard built-in functions must be given an additional initial"
" parameter indicating the source field, which is a significant difference "
"from single-function mode."
msgstr "las funciones deben llevar todos sus argumentos. No hay valores predeterminados. Por ejemplo, las funciones estándar predefinidas deben tener un parámetro inicial que indique el campo de origen, lo que es una diferencia importante con respecto al modo de función única."

#: ../../__w/calibre/calibre/manual/template_lang.rst:268
msgid "white space is ignored and can be used anywhere within the expression."
msgstr "los espacios en blanco se ignoran y se pueden utilizar en cualquier lugar dentro de la expresión."

#: ../../__w/calibre/calibre/manual/template_lang.rst:269
msgid ""
"constant strings are enclosed in matching quotes, either ``'`` or ``\"``."
msgstr "los textos constantes se encierran en comillas del mismo tipo, ya sea ``'`` o ``\"``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:271
msgid ""
"The syntax of the language is shown by the following grammar. For a "
"discussion of 'compare','if_expression', and 'template_call' see "
":ref:`General Program Mode <general_mode>`:::"
msgstr "La sintaxis del lenguaje se muestra con la siguiente gramática. En el :ref:`modo de programación general <general_mode>` puede ver una discusión de «compare», «if_expression» y «template_call»:::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:286
msgid "Comments are lines with a '#' character at the beginning of the line."
msgstr "Los comentarios son líneas que empiezan por un carácter «#»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:288
msgid ""
"An ``expression`` without errors always has a value. The value of an "
"``expression_list`` is the value of the last expression in the list. As "
"such, the value of the program (expression_list)::"
msgstr "Una ``expression`` sin errores siempre tiene un valor. El valor de una ``expression_list`` es el valor de la última expresión de la secuencia. Así, el valor del siguiente programa (``expression_list``)::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:293
msgid "is 3."
msgstr "es 3."

#: ../../__w/calibre/calibre/manual/template_lang.rst:295
msgid ""
"Another example of a complex but rather silly program might help make things"
" clearer::"
msgstr "Otro ejemplo de un programa complejo pero más bien tonto podría ayudar a aclarar las cosas::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:306
msgid "This program does the following:"
msgstr "Este programa hace lo siguiente:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:308
msgid ""
"specify that the field being looked at is series_index. The variable ``$`` "
"is set to its value."
msgstr "especifica que el campo que se examina es series_index. El valor del campo se asigna a la variable ``$``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:309
msgid ""
"calls the ``substr`` function, which takes 3 parameters ``(str, start, "
"end)``. It returns a string formed by extracting the start through end "
"characters from string, zero-based (the first character is character zero). "
"In this case the string will be computed by the ``strcat`` function, the "
"start is 0, and the end is 6. In this case it will return the first 6 "
"characters of the string returned by ``strcat``, which must be evaluated "
"before substr can return."
msgstr "ejecuta la función ``substr``, que toma 3 argumentos ``(texto, inicio, fin)``. Devuelve un texto formado extrayendo los caracteres entre `inicio`  y `fin` de `texto` (el primer carácter es el número cero). En este caso, el texto se calcula mediante la función ``strcat``, `inicio` es 0 y `fin` es 6. En este caso, devolverá los primeros 6 caracteres del texto devuelto por ``strcat``, que debe evaluarse antes de que ``substr`` pueda finalizar."

#: ../../__w/calibre/calibre/manual/template_lang.rst:313
msgid ""
"calls the ``strcat`` (string concatenation) function. Strcat accepts 1 or "
"more arguments, and returns a string formed by concatenating all the values."
" In this case there are three arguments. The first parameter is the value in"
" ``$``, which here is the value of ``series_index``. The second paremeter is"
" the constant string ``'->'``. The third parameter is the value returned by "
"the ``cmp`` function, which must be fully evaluated before ``strcat`` can "
"return."
msgstr "ejecuta la función ``strcat`` (concatenación de textos). ``strcat`` acepta 1 o más argumentos, y devuelve un texto formado por la concatenación de todos los valores. En este caso hay tres argumentos. El primer argumento es el valor en ``$``, que aquí es el valor de ``series_index``. El segundo parámetro es el texto constante ``'->'``. El tercer parámetro es el valor devuelto por la función ``cmp``, que debe evaluarse completamente antes de que ``strcat`` pueda finalizar."

#: ../../__w/calibre/calibre/manual/template_lang.rst:317
msgid ""
"The ``cmp`` function takes 5 arguments ``(x, y, lt, eq, gt)``. It compares "
"``x`` and ``y`` and returns the third argument ``lt`` if ``x < y``, the "
"fourth argument ``eq`` if ``x == y``, and the fifth argument ``gt`` if ``x >"
" y``. As with all functions, all of the parameters can be statements. In "
"this case the first parameter (the value for ``x``) is the result of "
"dividing the ``series_index`` by 2. The second parameter ``y`` is the "
"constant ``1``. The third parameter ``lt`` is a statement (more later). The "
"fourth parameter ``eq`` is the constant string ``'eq'``. The fifth parameter"
" is the constant string ``'gt'``."
msgstr "La función ``cmp`` toma 5 argumentos ``(x, y, mn, ig, my)``. Compara ``x`` e ``y`` y devuelve el tercer argumento, ``mn`` si ``x < y``, el cuarto argumento, ``ig``, si ``x = y``, y el quinto argumento, ``my``, si ``x > y``. Como en todas las funciones, todos los parámetros pueden ser sentencias. En este caso el primer argumento (el valor de ``x``) es el resultado de dividir ``series_index`` entre 2. El segundo argumento, ``y``, es la constante ``1``. El tercer argumento, ``mn`` es una sentencia (volveremos a él más adelante). El cuarto parámetro, ``ig``, es el texto constante ``'eq'``. El quinto parámetro es el texto constante ``'gt'``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:322
msgid ""
"The third parameter (the one for ``lt``) is a statement, or a sequence of "
"expressions. Remember that a statement (a sequence of semicolon-separated "
"expressions) is also an expression, returning the value of the last "
"expression in the list. In this case, the program first assigns the value "
"``1`` to a local variable ``c``, then returns a substring made by extracting"
" the ``c``'th character to the end. Since ``c`` always contains the constant"
" ``1``, the substring will return the second through ``end``'th characters, "
"or ``'t123'``."
msgstr "El tercer argumento (el de ``mn``) es una sentencia, o una secuencia de expresiones. Recuerde que una sentencia (una secuencia de expresiones separadas por punto y coma) también es una expresión, que devuelve el valor de la última expresión de la lista. En este caso, el programa primero asigna el valor ``1`` a la variable local ``c``, después devuelve un subtexto creado extrayendo desde el carácter número ``c`` hasta el final. Puesto que ``c`` siempre contiene la constante ``1``, el subtexto devolverá los caracteres desde el segundo hasta el final, o ``'t123'``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:326
msgid ""
"Once the statement providing the value to the third parameter is executed, "
"``cmp`` can return a value. At that point, ``strcat` can return a value, "
"then ``substr`` can return a value. The program then terminates."
msgstr "Una vez que se ejecuta la sentencia que proporciona un valor para el tercer parámetro, ``cmp`` puede devolver un valor. En este punto, ``strcat`` puede devolver un valor, y ``substr`` puede devolver un valor. Entonces el programa finaliza."

#: ../../__w/calibre/calibre/manual/template_lang.rst:329
msgid "For various values of series_index, the program returns:"
msgstr "Para distintos valores de series_index, el programa devuelve:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:331
msgid "series_index == undefined, result = ``prefix ->t123 suffix``"
msgstr "series_index == undefined, resultado = ``prefix ->t123 suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:332
msgid "series_index == 0.5, result = ``prefix 0.50-> suffix``"
msgstr "series_index == 0.5, resultado = ``prefix 0.50-> suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:333
msgid "series_index == 1, result = ``prefix 1->t12 suffix``"
msgstr "series_index == 1, resultado = ``prefix 1->t12 suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:334
msgid "series_index == 2, result = ``prefix 2->eq suffix``"
msgstr "series_index == 2, resultado = ``prefix 2->eq suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:335
msgid "series_index == 3, result = ``prefix 3->gt suffix``"
msgstr "series_index == 3, resultado = ``prefix 3->gt suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:337
msgid ""
"**All the functions listed under single-function mode can be used in program"
" mode**. To do so, you must supply the value that the function is to act "
"upon as the first parameter in addition to the parameters documented above. "
"For example, in program mode the parameters of the `test` function are "
"``test(x, text_if_not_empty, text_if_empty)``. The `x` parameter, which is "
"the value to be tested, will almost always be a variable or a function call,"
" often `field()`."
msgstr "**Todas las funciones mostradas en el modo de función única puede usarse en el modo de programación.** Para ello debe proporcionar el valor sobre el que actuará la función como primer parámetro, además de los parámetros documentados anteriormente. Por ejemplo, en el modo de programación los parámetros de la función ``test`` son ``test(x, texto_si_no_vacío, texto_si_vacío)``. El parámetro `x`, que es el valor que se comprueba, casi siempre será una variable o una llamada una función, a menudo ``field()``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:342
msgid ""
"The following functions are available in addition to those described in "
"single-function mode. Remember from the example above that the single-"
"function mode functions require an additional first parameter specifying the"
" field to operate on. With the exception of the ``id`` parameter of assign, "
"all parameters can be statements (sequences of expressions). Note that the "
"definitive documentation for functions is available in the section "
":ref:`Function reference <template_functions_reference>`:"
msgstr "Las siguientes funciones están disponibles, además de las descritas en el modo de función única. Recuerde del ejemplo anterior que las funciones del modo de función única requieren un primer parámetro adicional que especifique el campo sobre el que se opera. Excepto el parámetro ``id`` de ``assign``, todos los parámetros pueden ser sentencias (secuencias de expresiones). Tenga en cuenta que la documentación definitiva de las funciones está disponible en la sección :ref:`Referencia de funciones <template_functions_reference>`:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:347
msgid ""
"``and(value, value, ...)`` -- returns the string \"1\" if all values are not"
" empty, otherwise returns the empty string. This function works well with "
"test or first_non_empty. You can have as many values as you want."
msgstr "``and(valor, valor, ...)`` -- devuelve el texto «1» si todos los valores son no vacíos, en caso contrario devuelve un texto vacío. Esta función opera bien con ``test`` o ``first_non_empty``. Pueden usarse tantos valores como se desee."

#: ../../__w/calibre/calibre/manual/template_lang.rst:349
msgid ""
"``add(x, y, ...)`` -- returns the sum of its arguments. Throws an exception "
"if an argument is not a number."
msgstr "``add(x, y, ...)`` -- devuelve la suma de sus argumentos. Da un error si algún argumento no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:350
msgid ""
"``assign(id, val)`` -- assigns val to id, then returns val. id must be an "
"identifier, not an expression"
msgstr "``assign(id, val)`` -- asigna `val` a `id` y devuelve `val`. `id` debe ser un identificador, no una expresión"

#: ../../__w/calibre/calibre/manual/template_lang.rst:351
msgid ""
"``approximate_formats()`` -- return a comma-separated list of formats that "
"at one point were associated with the book. There is no guarantee that the "
"list is correct, although it probably is. This function can be called in "
"Template Program Mode using the template ``{:'approximate_formats()'}``. "
"Note that format names are always uppercase, as in EPUB."
msgstr "``approximate_formats()`` -- devuelve una lista separada por comas de formatos que en algún momento estuvieron asociados con el libro. No hay garantía de que esta lista sea correcta, aunque probablemente lo sea. Esta función puede usarse en el modo de programación de plantillas usando la plantilla ``{:'approximate_formats()'}``. Tenga en cuenta que los nombres de formato están siempre en mayúsculas, como en «EPUB»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:354
msgid ""
"``author_links(val_separator, pair_separator)`` -- returns a string "
"containing a list of authors and that author's link values in the form "
"``author1 val_separator author1link pair_separator author2 val_separator "
"author2link`` etc. An author is separated from its link value by the "
"``val_separator`` string with no added spaces. ``author:linkvalue`` pairs "
"are separated by the ``pair_separator`` string argument with no added "
"spaces. It is up to you to choose separator strings that do not occur in "
"author names or links. An author is included even if the author link is "
"empty."
msgstr "``author_links(sep_val, sep_par)`` -- devuelve un texto que contiene una lista de autores y enlaces de autores de la forma: ``autor1 sep_val enlace_autor1 sep_par autor2 sep_val enlace_autor2`` etc. Cada autor está separado de su correspondiente enlace por el texto `sep_val`, sin espacios adicionales. Los pares ``autor:enlace_autor`` están separados por el texto `sep_par`, sin espacios adicionales. Es responsabilidad del usuario proporcionar separadores que no aparezcan en los nombres o enlaces de autor. El nombre de autor se incluye aunque su enlace esté vacío."

#: ../../__w/calibre/calibre/manual/template_lang.rst:359
msgid ""
"``author_sorts(val_separator)`` -- returns a string containing a list of "
"author's sort values for the authors of the book. The sort is the one in the"
" author metadata (different from the author_sort in books). The returned "
"list has the form author sort 1 ``val_separator`` author sort 2 etc. The "
"author sort values in this list are in the same order as the authors of the "
"book. If you want spaces around ``val_separator`` then include them in the "
"separator string"
msgstr "``author_sorts(separador)`` -- devuelve un texto que contiene la lista de valores de orden de autor para los autores del libro. El orden de autor es el que figura en los metadatos de autores (diferente del valor de orden de autor del libro). La lista devuelta es de la forma ``orden_de_autor_1 separador orden_de_autor_2`` etc. Los valores de orden de autor en la lista están en el mismo orden que los autores del libro. Si quiere espacios alrededor de `separador`, inclúyalos en el valor."

#: ../../__w/calibre/calibre/manual/template_lang.rst:363
msgid ""
"``booksize()`` -- returns the value of the calibre 'size' field. Returns '' "
"if there are no formats."
msgstr "``booksize()`` -- devuelve el valor del campo «tamaño» de calibre. Devuelve «» si no hay formatos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:364
msgid ""
"``check_yes_no(field_name, is_undefined, is_false, is_true)`` -- checks the "
"value of the yes/no field named by the lookup key ``field_name`` for a value"
" specified by the parameters, returning \"yes\" if a match is found, "
"otherwise returning an empty string. Set the parameter ``is_undefined``, "
"``is_false``, or ``is_true`` to 1 (the number) to check that condition, "
"otherwise set it to 0. Example::"
msgstr "``check_yes_no(nombre_de_campo, no_definido, es_false, es_true)`` -- comprueba si el valor del campo de tipo sí o no identificado por la clave de búsqueda ``nombre_de campo`` coincide con el valor especificado en los parámetros. Devuelve «yes» si coincide, y un texto vació en caso contrario. Establezca el parámetro ``no_definido``, ``es_false`` o ``es_true`` a 1 (el número) para comprobar dicha condición, en caso contrario establézcalos a 0. Ejemplo:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:370
msgid ""
"returns \"yes\" if the yes/no field ``\"#bool\"`` is either undefined "
"(neither True nor False) or True. More than one of ``is_undefined``, "
"``is_false``, or ``is_true`` can be set to 1.  This function is usually used"
" by the ``test()`` or ``is_empty()`` functions."
msgstr "devuelve «yes» si el campo de tipo sí o no ``\"#bool\"`` es True o no está definido (no es ni True ni False). Más de uno de ``no_definido``, ``es_false`` y ``es_true`` puede ser 1. Esta función se usa normalmente con las funciones ``test()`` o ``is_empty()``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:372
msgid ""
"``ceiling(x)`` -- returns the smallest integer greater than or equal to x. "
"Throws an exception if x is not a number."
msgstr "``ceiling(x)`` -- devuelve el menor entero que es mayor o igual a `x`. Da un error si `x` no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:373
msgid ""
"``cmp(x, y, lt, eq, gt)`` -- compares x and y after converting both to "
"numbers. Returns ``lt`` if x < y. Returns ``eq`` if x == y. Otherwise "
"returns ``gt``."
msgstr "``cmp(x, y, mn, ig, my)`` -- compara `x` e `y` después de convertirlas en números. Devuelve `mn` si `x` < `y`. Devuelve `ig` si `x` == `y`. Devuelve `my` en otros casos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:375
msgid ""
"``connected_device_name(storage_location)`` -- if a device is connected then"
" return the device name, otherwise return the empty string. Each storage "
"location on a device can have a different name. The location names are "
"'main', 'carda' and 'cardb'. This function works only in the GUI."
msgstr "``connected_device_name(ubicación_de_almacenamiento)`` -- si hay un dispositivo conectado, devuelve el nombre del dispositivo, en caso contrario devuelve un texto vacío. Cada ubicación de almacenamiento de un dispositivo puede tener un nombre diferente. Los nombres de ubicación son «main», «carda» y «cardb». Esta función sólo funciona en la interfaz gráfica."

#: ../../__w/calibre/calibre/manual/template_lang.rst:378
msgid ""
"``connected_device_uuid(storage_location)`` -- if a device is connected then"
" return the device uuid (unique id), otherwise return the empty string. Each"
" storage location on a device has a different uuid. The location names are "
"``'main'``, ``'carda'`` and ``'cardb'``. This function works only in the "
"GUI."
msgstr "``connected_device_uuid(ubicación_de_almacenamiento)`` -- si un dispositivo está conectado, entonces devuelve el uuid (identificador único) del dispositivo, de lo contrario devuelve un texto vacío. Cada ubicación de almacenamiento de un dispositivo tiene un uuid diferente. Los nombres de las ubicaciones son ``'main'``, ``'carda'`` y ``'cardb'``. Esta función sólo funciona en la interfaz gráfica."

#: ../../__w/calibre/calibre/manual/template_lang.rst:381
msgid ""
"``current_library_name()`` -- return the last name on the path to the "
"current calibre library. This function can be called in Template Program "
"Mode using the template ``{:'current_library_name()'}``."
msgstr "``current_library_name()`` -- devuelve la última parte de la ruta a la biblioteca de calibre actual. Esta función puede usarse en el modo de programación de plantillas usando la plantilla ``{:'current_library_name()'}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:383
msgid ""
"``current_library_path()`` -- return the path to the current calibre "
"library. This function can be called in Template Program Mode using the "
"template ``{:'current_library_path()'}``."
msgstr "``current_library_path()`` -- devuelve la ruta a la biblioteca de calibre actual. Esta función puede usarse en el modo de programación de plantillas utilizando la plantilla ``{:'current_library_path()'}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:385
msgid ""
"``days_between(date1, date2)`` -- return the number of days between "
"``date1`` and ``date2``. The number is positive if ``date1`` is greater than"
" ``date2``, otherwise negative. If either ``date1`` or ``date2`` are not "
"dates, the function returns the empty string."
msgstr "``days_between(fecha1, fecha2)`` -- devuelve el número de días entre `fecha1` y `fecha2`. El número es positivo si `fecha1` es posterior a `fecha2`, en caso contrario es negativo. Si `fecha1` o `fecha2` no son fechas, la función devuelve un texto vacío."

#: ../../__w/calibre/calibre/manual/template_lang.rst:387
msgid ""
"``divide(x, y)`` -- returns ``x / y``. Throws an exception if either ``x`` "
"or ``y`` are not numbers."
msgstr "``divide(x, y)`` -- devuelve ``x / y``. Da un error si ``x`` o ``y`` no son números."

#: ../../__w/calibre/calibre/manual/template_lang.rst:388
msgid ""
"``eval(string)`` -- evaluates the string as a program, passing the local "
"variables (those ``assign`` ed to). This permits using the template "
"processor to construct complex results from local variables. Because the `{`"
" and `}` characters are special, you must use `[[` for the `{` character and"
" `]]` for the '}' character; they are converted automatically. Note also "
"that prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in "
"the argument to this function when using Template Program Mode."
msgstr "``eval(texto)`` -- evalúa `texto` como un programa, pasando las variables locales (las definidas con ``assign``). Esto permite usar el procesador de plantillas para elaborar resultados complejos a partir de variables locales. Dado que los caracteres ``{`` y ``}`` tienen un uso especial, debe usarse ``[[`` en lugar de ``{`` y ``]]`` para ``}``; se convertirán automáticamente. Tenga en cuenta que los prefijos y sufijos (la sintaxis ``|prefijo|sufijo|``) no pueden usarse en el argumento de esta función en el modo de programación de plantillas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:392
msgid "``field(name)`` -- returns the metadata field named by ``name``."
msgstr "``field(nombre)`` -- devuelve el campo de metadatos identificado por `nombre`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:393
msgid ""
"``field_exists(field_name)`` -- checks if a field (column) named "
"``field_name`` exists, returning '1' if so and '' if not."
msgstr "``field_exists(nombre_campo)`` -- comprueba si existe un campo (columna) llamado ``nombre_campo``, devuelve '1' si es así y '' si no."

#: ../../__w/calibre/calibre/manual/template_lang.rst:394
msgid ""
"``finish_formatting(val, fmt, prefix, suffix)`` -- apply the format, prefix,"
" and suffix to a value in the same way as done in a template like "
"``{series_index:05.2f| - |- }``. This function is provided to ease "
"conversion of complex single-function- or template-program-mode templates to"
" :ref:`General Program Mode <general_mode>` (see below) to take advantage of"
" GPM template compilation. For example, the following program produces the "
"same output as the above template::"
msgstr "``finish_formatting(val, formato, prefijo, sufijo)`` -- aplica el `formato`, `prefijo` y `sufijo` a un valor de la misma manera que se haría en una plantilla como ``{series_index:05.2f| - |- }``. Esta función se proporciona para facilitar la conversión de plantillas complejas en modo de función única o de plantilla al :ref:`modo de programación general <general_mode>` (ver más adelante) y aprovechar la compilación de plantillas. Por ejemplo, el siguiente programa produce la misma salida que la plantilla anterior::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:405
msgid ""
"Another example: for the template "
"``{series:re(([^\\s])[^\\s]+(\\s|$),\\1)}{series_index:0>2s| - | - "
"}{title}`` use::"
msgstr "Otro ejemplo: para la plantilla ``{series:re(([^\\s])[^\\s]+(\\s|$),\\1)}{series_index:0>2s| - | - }{title}`` use::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:414
msgid ""
"``first_matching_cmp(val, cmp1, result1, cmp2, r2, ..., else_result)`` -- "
"compares ``val < cmpN`` in sequence, returning resultN for the first "
"comparison that succeeds. Returns else_result if no comparison succeeds. "
"Example::"
msgstr "``first_matching_cmp(val, cmp1, resultado1, cmp2, resultado2, ..., otro_resultado)`` -- compara ``val < cmpN`` consecutivamente y devuelve `resultadoN` para la primera comparación que sea cierta. Devuelve `otro_resultado` si ninguna comparación es cierta. Ejemplo::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:420
msgid ""
"returns \"large\". The same example with a first value of 16 returns "
"\"giant\"."
msgstr "devuelve «\"large\"». El mismo ejemplo con un primer valor de 16 devuelve «\"giant\"»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:422
msgid ""
"``first_non_empty(value, value, ...)`` -- returns the first value that is "
"not empty. If all values are empty, then the empty value is returned. You "
"can have as many values as you want."
msgstr "``first_non_empty(valor, valor, ...)`` -- devuelve el primer valor que no esté vacío. Si todos los valores están vacíos, se devuelve también un valor vacío. Puede incluir tantos valores como quiera."

#: ../../__w/calibre/calibre/manual/template_lang.rst:424
msgid ""
"``floor(x)`` -- returns the largest integer less than or equal to x. Throws "
"an exception if x is not a number."
msgstr "``floor(x)`` -- devuelve el mayor entero que es menor o igual a `x`. Da un error si `x` no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:425
msgid ""
"``format_date(val, format_string)`` -- format the value, which must be a "
"date field, using the format_string, returning a string. The formatting "
"codes are::"
msgstr "``format_date(val, formato_fecha)`` -- da formato a un valor, que debe ser un campo de fecha, según `formato_fecha` y devuelve un texto. Los códigos de formato son::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:450
msgid ""
"You might get unexpected results if the date you are formatting contains "
"localized month names, which can happen if you changed the format tweaks to "
"contain ``MMMM``. In this case, instead of using something like "
"``{pubdate:format_date(yyyy)}``, write the template using Template Program "
"Mode as in ``{:'format_date(raw_field('pubdate'),'yyyy')'}``."
msgstr "Puede obtener resultados inesperados si la fecha a la que se da formato contiene nombres de meses traducidos, lo que puede ocurrir si ha modificado los ajustes de formato para incluir ``MMMM``. En este caso, en lugar de usar algo como ``{pubdate:format_date(yyyy)}``, escriba la plantilla usando el modo de programación de plantillas, como en ``{:'format_date(raw_field('pubdate'),'yyyy')'}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:453
msgid ""
"``formats_modtimes(format_string)`` -- return a comma-separated list of "
"colon-separated items representing modification times for the formats of a "
"book. The format_string parameter specifies how the date is to be formatted."
" See the `format_date()` function for details. You can use the select "
"function to get the mod time for a specific format. Note that format names "
"are always uppercase, as in EPUB."
msgstr "formats_modtimes(formato_fecha) -- devuelve una lista de elementos (separados por dos puntos) separados por comas que representa las fechas de modificación para los formatos de un libro. El argumento `formato_fecha` especifica cómo se da formato a la fecha. Véase la función «format_date» para más detalles. Puede usar la función «select» para obtener la fecha de modificación de un formato específico. Tenga en cuenta que los nombres de formato siempre están en mayúsculas, como en «EPUB»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:456
msgid ""
"``formats_paths()`` -- return a comma-separated list of colon-separated "
"items representing full path to the formats of a book. You can use the "
"select function to get the path for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_paths()`` -- devuelve una lista separada por comas de elementos separados por dos puntos que representan la ruta completa a los formatos de un libro. Puede usar la función «select» para obtener la ruta a un formato específico. Tenga en cuenta que los nombres de formato están siempre en mayúsculas, como en «EPUB»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:458
msgid ""
"``formats_sizes()`` -- return a comma-separated list of colon-separated "
"items representing sizes in bytes of the formats of a book. You can use the "
"select function to get the size for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_sizes()`` -- devuelve una lista de elementos (separados por dos puntos) separados por comas que representa los tamaños en bytes de los formatos de un libro. Puede usar la función «select» para obtener el tamaño de un formato específico. Tenga en cuenta que los nombres de formato siempre están en mayúsculas, como en «EPUB»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:460
msgid ""
"``fractional_part(x)`` -- returns the value after the decimal point. For "
"example, ``fractional_part(3.14)`` returns ``0.14``. Throws an exception if "
"``x`` is not a number."
msgstr "``fractional_part(x)`` -- devuelve el valor tras el punto decimal. Por ejemplo, ``fractional_part(3.14)`` devuelve ``0.14``. Da un error si ``x`` no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:462
msgid ""
"``has_cover()`` -- return ``Yes`` if the book has a cover, otherwise return "
"the empty string."
msgstr "``has_cover()`` -- devuelve ``Yes`` si el libro tiene portada, en caso contrario devuelve un texto vacío."

#: ../../__w/calibre/calibre/manual/template_lang.rst:463
msgid ""
"``not(value)`` -- returns the string \"1\" if the value is empty, otherwise "
"returns the empty string. This function works well with test or "
"first_non_empty."
msgstr "``not(valor)`` -- devuelve el texto «1» si el valor está vacío, en caso contrario, devuelve un texto vacío. Esta función opera bien con «test» o «first_non_empty»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:465
msgid ""
"``list_difference(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item found in `list2`, using a case-insensitive "
"comparison. The items in `list1` and `list2` are separated by separator, as "
"are the items in the returned list."
msgstr "``list_difference(lista1, lista2, separador)`` -- devuelve una lista construida eliminando de `lista1` cualquier elemento que aparezca en `lista2`, sin distinguir mayúsculas y minúsculas. Los elementos de `lista1`  y `lista2` están separados por `separador`, así como los de la lista resultante."

#: ../../__w/calibre/calibre/manual/template_lang.rst:467
msgid ""
"``list_equals(list1, sep1, list2, sep2, yes_val, no_val)`` -- return "
"`yes_val` if `list1` and `list2` contain the same items, otherwise return "
"`no_val`. The items are determined by splitting each list using the "
"appropriate separator character (`sep1` or `sep2`). The order of items in "
"the lists is not relevant. The comparison is case-insensitive."
msgstr "``list_equals(lista1, sep1, lista2, sep2, val_sí, val_no)`` -- devuelve `val_sí` si `lista1` y `lista2` contienen los mismos elementos, en caso contrario devuelve  `val_no`. Los elementos se determinan dividiendo cada lista por el correspondiente carácter separador (`sep1` o `sep2`). El orden de los elementos no es relevante. La comparación no diferencia mayúsculas y minúsculas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:470
msgid ""
"``list_intersection(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item not found in `list2`, using a case-"
"insensitive comparison. The items in `list1` and `list2` are separated by "
"separator, as are the items in the returned list."
msgstr "``list_intersection(lista1, lista2, separador)`` -- devuelve una lista construida eliminando de `lista1` cualquier elemento que no aparezca en `lista2`, sin distinguir mayúsculas y minúsculas. Los elementos de `lista1`  y `lista2` están separados por `separador`, así como los de la lista resultante."

#: ../../__w/calibre/calibre/manual/template_lang.rst:472
msgid ""
"``list_re(src_list, separator, include_re, opt_replace)`` -- Construct a "
"list by first separating `src_list` into items using the `separator` "
"character. For each item in the list, check if it matches `include_re`. If "
"it does, then add it to the list to be returned. If `opt_replace` is not the"
" empty string, then apply the replacement before adding the item to the "
"returned list."
msgstr "``list_re(lista_orig, separador, incluir, sust_opc)`` -- construye una lista separando primero `lista_orig` en elementos usando el carácter `separador`. Para cada elemento en la lista, comprueba si coincide con la expresión regular `incluir`. Si coincide, se añade a la lista final. Si `sust_opc` no es un texto vacío, se aplica la sustitución antes de añadir el elemento a la lista final."

#: ../../__w/calibre/calibre/manual/template_lang.rst:475
msgid ""
"``list_re_group(src_list, separator, include_re, search_re, "
"template_for_group_1, for_group_2, ...)`` -- Like list_re except "
"replacements are not optional. It uses re_group(item, search_re, template "
"...) when doing the replacements."
msgstr "``list_re_group(lista_orig, separador, incluir, búsqueda, plantilla_grupo_1, plantilla_grupo_2, ...)`` -- como ``list_re``, pero las sustituciones no son opcionales. Usa ``re_group(elemento, búsqueda, plantilla_grupo_1, ...)`` para hacer sustituciones.."

#: ../../__w/calibre/calibre/manual/template_lang.rst:477
msgid ""
"``list_sort(list, direction, separator)`` -- return list sorted using a "
"case-insensitive sort. If ``direction`` is zero, ``list`` is sorted "
"ascending, otherwise descending. The list items are separated by separator, "
"as are the items in the returned list."
msgstr "``list_sort(lista, dirección, separador)`` -- devuelve ``lista`` ordenada sin distinción de mayúsculas y minúsculas. Si ``dirección`` es cero, la lista se ordena de manera ascendente, en caso contrario, de manera descendente. Los elementos de ``lista`` están separados por ``separador``, así como los de la lista resultante."

#: ../../__w/calibre/calibre/manual/template_lang.rst:479
msgid ""
"``list_union(list1, list2, separator)`` -- return a list made by merging the"
" items in ``list1`` and ``list2``, removing duplicate items using a case-"
"insensitive comparison. If items differ in case, the one in ``list1`` is "
"used. The items in ``list1`` and ``list2`` are separated by ``separator``, "
"as are the items in the returned list."
msgstr "``list_union(lista1, lista2, separador)`` -- devuelve una lista construida por combinación de los elementos en ``lista1`` y ``lista2``, eliminando los duplicados de ``lista2`` (no distingue mayúsculas y minúsculas, se mantiene la versión de ``lista1``). Los elementos de ``lista1`` y ``lista2`` están separados por ``separador``, así como los de la lista resultante."

#: ../../__w/calibre/calibre/manual/template_lang.rst:482
msgid ""
"``mod(x)`` -- returns the remainder of ``x / y``, where ``x``, ``y``, and "
"the result are integers. Throws an exception if either ``x`` or ``y`` is not"
" a number."
msgstr "``mod(x)`` -- devuelve el resto de ``x / y``, donde ``x``, ``y`` y el resultado son enteros. Da un error si ``x`` o ``y`` no son números."

#: ../../__w/calibre/calibre/manual/template_lang.rst:484
msgid ""
"``multiply(x, y, ...)`` -- returns the product of its arguments. Throws an "
"exception if any argument is not a number."
msgstr "``multiply(x, y, ...)`` -- devuelve el producto de sus argumentos. Da un error si algún argumento no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:485
msgid ""
"``ondevice()`` -- return the string \"Yes\" if ``ondevice`` is set, "
"otherwise return the empty string"
msgstr "``ondevice()`` -- devuelve el texto «Yes» si ``ondevice`` está activado, si no, devuelve un texto vacío"

#: ../../__w/calibre/calibre/manual/template_lang.rst:486
msgid ""
"``or(value, value, ...)`` -- returns the string ``\"1\"`` if any value is "
"not empty, otherwise returns the empty string. This function works well with"
" test or `first_non_empty`. You can have as many values as you want."
msgstr "``or(valor, valor, ...)`` -- devuelve el texto ``\"1\"`` si alguno de los valores no está vacío, en caso contrario devuelve un texto vacío. Esta función opera bien con ``test`` o ``first_non_empty``. Pueden usarse tantos valores como se desee."

#: ../../__w/calibre/calibre/manual/template_lang.rst:488
msgid ""
"``print(a, b, ...)`` -- prints the arguments to standard output. Unless you "
"start calibre from the command line (``calibre-debug -g``), the output will "
"go to a black hole."
msgstr "``print(a, b, ...)`` -- escribe los argumentos en la salida estándar. Sólo será visible si inicia calibre a partir de línea de órdenes (``calibre-debug -g``)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:490
msgid ""
"``raw_field(name)`` -- returns the metadata field named by name without "
"applying any formatting."
msgstr "``raw_field(name)`` -- devuelve el campo de metadatos llamado `nombre` sin aplicar ningún formato."

#: ../../__w/calibre/calibre/manual/template_lang.rst:491
msgid ""
"``raw_list(name, separator)`` -- returns the metadata list named by name "
"without applying any formatting or sorting and with items separated by "
"separator."
msgstr "``raw_list(nombre, separador)`` -- devuelve la lista de metadatos nombrada por `nombre` sin aplicar ningún formato u ordenación, con los elementos separados por `separador`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:492
msgid ""
"``re_group(val, pattern, template_for_group_1, for_group_2, ...)`` --  "
"return a string made by applying the regular expression pattern to the val "
"and replacing each matched instance with the string computed by replacing "
"each matched group by the value returned by the corresponding template. The "
"original matched value for the group is available as ``$``. In Template "
"Program Mode, like for the template and the eval functions, you use [[ for {"
" and ]] for }. The following example in Template Program Mode looks for "
"series with more than one word and uppercases the first word::"
msgstr "``re_group(val, patrón, plantilla_para_grupo_1, para_grupo_2, ...)`` -- devuelve un texto formado por aplicación de la expresión regular `patrón` al valor `val`, sustituyendo cada coincidencia por el texto calculado al sustituir cada grupo por el valor devuelto por la correspondiente plantilla. El valor de correspondencia original del grupo está disponible como ``$``. En el modo de programación de plantillas, como en las funciones ``template`` y ``eval``, use ``[[`` en lugar de ``{`` y ``]]`` en lugar de ``}``. El siguiente ejemplo en modo de programación de plantillas busca nombres de serie con más de una palabra y pone la primera palabra en mayúsculas::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:499
msgid ""
"``round(x)`` -- returns the nearest integer to x. Throws an exception if x "
"is not a number."
msgstr "``round(x)`` -- devuelve el entero más cercano a `x`. Da un error si `x` no es un número."

#: ../../__w/calibre/calibre/manual/template_lang.rst:500
msgid "``series_sort()`` -- returns the series sort value."
msgstr "``series_sort()`` -- devuelve el valor de orden de serie."

#: ../../__w/calibre/calibre/manual/template_lang.rst:501
msgid ""
"``'split(list_val, sep, id_prefix)`` -- splits the ``list_val`` into "
"separate values using ``sep``, then assigns the values to variables named "
"``id_prefix_N`` where N is the position of the value in the list. The first "
"item has position 0 (zero). The function returns the last element in the "
"list. Example::"
msgstr "``split(lista, sep, prefijo_id)`` -- divide la ``lista`` en valores separados por ``sep`` y asigna los valores a variables con nombre ``prefijo_id_N``, donde ``N`` es la posición del valor en la lista. El primer elemento tiene posición 0 (cero). La función devuelve el último elemento de la lista. Ejemplo::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:507
msgid "is equivalent to::"
msgstr "es equivalente a::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:513
msgid ""
"``strcat(a, b, ...)`` -- can take any number of arguments. Returns a string "
"formed by concatenating all the arguments."
msgstr "``strcat(a, b, ...)`` -- puede tomar cualquier número de argumentos. Devuelve texto formado por la concatenación de todos los argumentos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:514
msgid ""
"``strcat_max(max, string1, prefix2, string2, ...)`` -- Returns a string "
"formed by concatenating the arguments. The returned value is initialized to "
"``string1``. ``prefix, string`` pairs are added to the end of the value as "
"long as the resulting string length is less than ``max``. Returns "
"``string1`` even if ``string1`` is longer than ``max``. You can pass as many"
" ``prefix, string`` pairs as you wish."
msgstr "``strcat_max(máx, texto1, prefijo2, texto2, ...)`` -- devuelve un texto formado por concatenación de los argumentos. El valor devuelto es inicialmente ``texto1``. Se van añadiendo parejas ``prefijo``, ``texto`` al final del valor mientras la longitud del resultado sea menor que ``máx``. El resultado es siempre al menos ``texto1``, aunque su longitud sea mayor que ``máx``. Pueden especificarse tantas parejas ``prefijo``, ``texto`` como se desee."

#: ../../__w/calibre/calibre/manual/template_lang.rst:517
msgid ""
"``strcmp(x, y, lt, eq, gt)`` -- does a case-insensitive comparison ``x`` and"
" ``y`` as strings. Returns ``lt`` if ``x < y``. Returns ``eq`` if ``x == "
"y``. Otherwise returns ``gt``."
msgstr "``strcmp(x, y, mn, ig, my)`` -- hace una comparación sin distinción de mayúsculas y minúsculas entre ``x`` e ``y`` como textos. Devuelve ``mn`` si ``x < y``. Devuelve ``ig`` si ``x = y``. Devuelve ``my`` en otros casos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:519
msgid ""
"``strlen(a)`` -- Returns the length of the string passed as the argument."
msgstr "``strlen(a)`` -- Devuelve la longitud del texto pasado como argumento."

#: ../../__w/calibre/calibre/manual/template_lang.rst:520
msgid ""
"``substr(str, start, end)`` -- returns the ``start``'th through the "
"``end``'th characters of ``str``. The first character in ``str`` is the "
"zero'th character. If end is negative, then it indicates that many "
"characters counting from the right. If end is zero, then it indicates the "
"last character. For example, ``substr('12345', 1, 0)`` returns ``'2345'``, "
"and ``substr('12345', 1, -1)`` returns ``'234'``."
msgstr "``substr(texto, inicio, fin)`` -- devuelve los caracteres entre la posición `inicio` y `fin` de `texto`. El primer carácter de `texto` está en la posición cero. Si `fin` es negativo, entonces indica la posición contando desde la derecha. Si `fin` es cero, indica el último carácter. Por ejemplo, ``substr('12345', 1, 0)`` devuelve ``2345``, y ``substr('12345', 1, -1)`` devuelve ``234``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:523
msgid ""
"``subtract(x, y)`` -- returns ``x - y``. Throws an exception if either ``x``"
" or ``y`` are not numbers."
msgstr "``subtract(x, y)``  -- devuelve ``x - y``. Da un error si ``x`` o ``y`` no son números."

#: ../../__w/calibre/calibre/manual/template_lang.rst:524
msgid ""
"``today()`` -- return a date string for today. This value is designed for "
"use in `format_date` or `days_between`, but can be manipulated like any "
"other string. The date is in ISO format."
msgstr "``today()`` -- devuelve un texto para la fecha de hoy. Este valor está preparado para usarse con ``format_date`` o ``days_between``, pero puede manipularse como cualquier otro texto. La fecha está en formato ISO."

#: ../../__w/calibre/calibre/manual/template_lang.rst:526
msgid ""
"``template(x)`` -- evaluates ``x`` as a template. The evaluation is done in "
"its own context, meaning that variables are not shared between the caller "
"and the template evaluation. Because the `{` and `}` characters are special,"
" you must use `[[` for the `{` character and `]]` for the '}' character; "
"they are converted automatically. For example, ``template('[[title_sort]]') "
"will evaluate the template ``{title_sort}`` and return its value. Note also "
"that prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in "
"the argument to this function when using Template Program Mode."
msgstr "``template(x)`` -- evalúa ``x`` como una plantilla. La evaluación se realiza en un contexto propio, lo que significa que las variables no se comparten entre el proceso que llama a la función y la evaluación de la plantilla. Dado que los caracteres ``{`` y ``}`` tienen un uso especial, debe usar ``[[`` en lugar de ``{`` y ``]]`` para ``}``; se convertirán automáticamente. Por ejemplo, ``template('[[orden_de_título]]')`` evaluará la plantilla ``{orden_de_título}`` y devolverá su valor. Tenga en cuenta que los prefijos y sufijos (la sintaxis ``|prefijo|sufijo``) no pueden usarse en el argumento de esta función en el modo de programación de plantillas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:535
msgid "Using General Program Mode"
msgstr "Usar el modo de programación general"

#: ../../__w/calibre/calibre/manual/template_lang.rst:537
msgid ""
"For more complicated template programs it is often easier to avoid template "
"syntax (all the `{` and `}` characters), instead writing a more classic-"
"looking program. You can do this by beginning the template with `program:`. "
"The template program is compiled and executed. No template processing (e.g.,"
" formatting, prefixes, suffixes) is done. The special variable `$` is not "
"set."
msgstr "Para programas de plantilla más complicados, mucha veces es más sencillo evitar la sintaxis de plantillas (todos los caracteres «{» y «}») y escribir programas con aspecto más convencional. Puede hacer esto comenzando la plantilla con ``program:``. El programa de plantilla se compila y ejecuta. No se realiza ningún procesado de plantillas (formato, prefijos, sufijos). El valor especial ``$`` no se establece."

#: ../../__w/calibre/calibre/manual/template_lang.rst:541
msgid ""
"One advantage of `program:` mode is that braces are no longer special. For "
"example, it is not necessary to use `[[` and `]]` when using the "
"`template()` function. Another advantage is readability."
msgstr "Una ventaja del modo `program:` es que las llaves dejan de ser especiales. Por ejemplo, no es necesario usar `[[` y `]]` al usar la función `template()`. Otra ventaja es la legibilidad."

#: ../../__w/calibre/calibre/manual/template_lang.rst:544
msgid ""
"Template Program Mode and General Program Mode support classic **relational "
"(comparison) operators**: ``==``, ``!=``, ``<``, ``<=``, ``>``, ``>=``. The "
"operators return '1' if they evaluate to True, otherwise ''. They do case-"
"insensitive string comparison using lexical order. Examples:"
msgstr "El modo de programación de plantillas y el modo de programación general permiten usar los **operadores de relación** (comparación) tradicionales: ``==``, ``!=``, ``<``, ``<=``, ``>=``, ``>=``. Los operadores devuelven «1» si son ciertos y en caso contrario, «». Los textos se comparan sin distinguir mayúsculas y minúsculas y en orden lexicográfico. Ejemplos:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:548
msgid ""
"``program: field('series') == 'foo'`` returns '1' if the book's series is "
"'foo'."
msgstr "``program: field('series') == 'lala'`` devuelve «1» si la serie del libro es «lala»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:549
msgid ""
"``program: if field('series') != 'foo' then 'bar' else 'mumble' fi`` returns"
" 'bar' if the book's series is not 'foo', else 'mumble'."
msgstr "``program: if field('series') != 'lala' then 'nana' else 'blabla' fi`` devuelve «nana» si la serie del libro no es «lala», en caso contrario devuelve «blabla»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:550
msgid ""
"``program: if or(field('series') == 'foo', field('series') == '1632') then "
"'yes' else 'no' fi`` returns 'yes' if series is either 'foo' or '1632', "
"otherwise 'no'."
msgstr "``program: if or(field('series') == 'lala', field('series') == '1632') then 'sí' else 'no' fi`` devuelve «sí» si la serie es «lala» o «1632», en caso contrario devuelve «no»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:552
msgid ""
"``program: if '11' > '2' then 'yes' else 'no' fi`` returns 'no' because it "
"is doing a lexical comparison. If you want numeric comparison instead of "
"lexical comparison, use the operators ``==#``, ``!=#``, ``<#``, ``<=#``, "
"``>#``, ``>=#``. In this case the left and right values are set to zero if "
"they are undefined or the empty string. If they are not numbers then an "
"error is raised."
msgstr "``program: if '11' > '2' then 'sí' else 'no' fi`` devuelve «no» porque realiza una comparación lexicográfica. Si quiere efectuar comparaciones numéricas en lugar de lexicográficas, use los operadores ``==#``, ``!=#``, ``<#``, ``<=#``, ``>#``, ``>=#``. En este caso los valores a la izquierda y derecha se toman como cero si no están definidos o son un texto vacío. Si no son números, se genera un error."

#: ../../__w/calibre/calibre/manual/template_lang.rst:556
msgid ""
"Both General and Template Program Modes support **``if`` expressions** with "
"the following syntax::"
msgstr "Tanto el modo de programación general como el de plantillas permiten **expresiones con ``if``**, con la siguiente sintaxis::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:564
msgid ""
"The elif and else parts are optional. The words ``if``, ``then``, ``elif``, "
"``else``, and ``fi`` are reserved; you cannot use them as identifier names. "
"You can put newlines and white space wherever they make sense. "
"<<expression>> is one template language expression; semicolons are not "
"allowed. <<expression_list>> is a semicolon-separated sequence of template "
"language expressions, including nested ifs. Examples:"
msgstr "Las partes «elif» y «else» son opcional. Las palabras ``if```, ``then``, ``elif``, ``else`` y ``fi`` están reservadas: no puede usarlas como identificadores. Puede añadir saltos de línea y espacios donde sean convenientes. <<expression>> es una expresión del lenguaje de plantillas; no se permiten caracteres de punto y coma. <<expression_list>> es una secuencia de expresiones del lenguaje de plantillas separadas por dos puntos, incluyendo comprobaciones anidadas. Ejemplos:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:568
msgid "``program: if field('series') then 'yes' else 'no' fi``"
msgstr "``program: if field('series') then 'yes' else 'no' fi``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:569
msgid ""
"``program: if field('series') then a = 'yes'; b = 'no' else a = 'no'; "
"b='yes' fi; strcat(a, '-', b)``"
msgstr "``program: if field('series') then a = 'yes'; b = 'no' else a = 'no'; b='yes' fi; strcat(a, '-', b)``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:570
msgid "Nested ``if`` example::"
msgstr "Ejemplo de ``if`` anidado::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:585
msgid ""
"An ``if`` produces a value like any other language expression. This means "
"that all the following are valid:"
msgstr "Un ``if`` produce un valor como cualquier otra expresión. Esto significa que todas las siguientes expresiones son válidas:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:587
msgid "``program: if field('series') then 'foo' else 'bar' fi``"
msgstr "``program: if field('series') then 'foo' else 'bar' fi``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:588
msgid "``program: if field('series') then a = 'foo' else a = 'bar' fi; a``"
msgstr "``program: if field('series') then a = 'foo' else a = 'bar' fi; a``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:589
msgid "``program: a = if field('series') then 'foo' else 'bar' fi; a``"
msgstr "``program: a = if field('series') then 'foo' else 'bar' fi; a``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:590
msgid ""
"``program: a = field(if field('series') then 'series' else 'title' fi); a``"
msgstr "``program: a = field(if field('series') then 'series' else 'title' fi); a``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:592
msgid ""
"The template language supports **``for`` expressions** with the following "
"syntax::"
msgstr "El lenguaje de plantillas permite **expresiones con ``for``**, con la siguiente sintaxis::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:598
msgid ""
"The expression must evaluate to either a metadata field lookup key, for "
"example ``tags`` or ``#genre``, or a comma-separated list of values. If the "
"result is a valid lookup name then the field's value is fetched, otherwise "
"the list is broken into its individual values. Each resulting value in the "
"list is assigned to the variable ``id`` then the ``expression_list`` is "
"evaluated."
msgstr "La expresión debe arrojar una clave de consulta de un campo de metadatos, como ``tags`` o ``#genero``, o una lista de valores separados por comas. Si el resultado es un nombre de consulta válido, se obtiene el valor del campo, en caso contrario la lista se divide en sus valores individuales. Cada valor de la lista se asigna a la variable ``id`` y después se evalúa ``expression_list``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:603
msgid ""
"Example: This template removes the first hierarchical name for each value in"
" Genre (``#genre``), constructing a list with the new names::"
msgstr "Ejemplo: Esta plantilla elimina el primer nombre jerárquico para cada valor de Género (``#genre```), construyendo una lista con los nuevos nombres."

#: ../../__w/calibre/calibre/manual/template_lang.rst:614
msgid ""
"If the original Genre is ``History.Military, Science Fiction.Alternate "
"History, ReadMe`` then the template returns ``Military, Alternate History, "
"ReadMe``. You could use this template in calibre's :guilabel:`Edit metadata "
"in bulk -> Search & replace` with :guilabel:`Search for` set to ``template``"
" to strip off the first level of the hierarchy and assign the resulting "
"value to Genre."
msgstr "Si el Género original es ``Historia.Militar, Ciencia ficción.Historia alternativa, Léeme``, la plantilla devolverá ``Militar, Historia alternativa, Léeme``. Puede usar esta plantilla en :guilabel:`Modificar metadatos en masa > Buscar y sustituir` con :guilabel:`Buscar` establecido en ``plantilla`` para eliminar el primer nivel de la jerarquía y asignar el valor resultante a Género."

#: ../../__w/calibre/calibre/manual/template_lang.rst:619
msgid ""
"Note: the last line in the template, ``new_tags``, isn't necessary in this "
"case because ``for`` returns the value of the last ``expression`` in the "
"``expression list``."
msgstr "Nota: la última línea en la plantilla, ``new_tags``, no es necesaria en este caso, porque ``for`` devuelve el valor de la última expresión en ``expression_list``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:623
msgid "Stored General Program Mode Templates"
msgstr "Plantillas guardadas de modo de programa general"

#: ../../__w/calibre/calibre/manual/template_lang.rst:625
msgid ""
"General Program Mode supports saving templates and calling those templates "
"from another template. You save templates using "
":guilabel:`Preferences->Advanced->Template functions`. More information is "
"provided in that dialog. You call a template the same way you call a "
"function, passing positional arguments if desired. An argument can be any "
"expression. Examples of calling a template, assuming the stored template is "
"named ``foo``:"
msgstr "El modo de programación general permite guardar plantillas e invocarlas desde otra plantilla. Puede guardar plantillas en :guilabel:`Preferencias > Avanzado > Funciones de plantilla`. Hay más información en el diálogo correspondiente. Puede invocar una plantilla de la misma manera que una función, pasando argumentos por posición si lo desea. Un argumento puede ser una expresión. Ejemplos para invocar una plantilla, suponiendo que la plantilla guardada se llame ``foo``:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:630
msgid "``foo()`` -- call the template passing no arguments."
msgstr "``foo()`` -- invoca la plantilla sin pasar argumentos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:631
msgid ""
"``foo(a, b)`` call the template passing the values of the two variables "
"``a`` and ``b``."
msgstr "``foo(a, b)`` -- invoca la plantilla pasando los valores de las variables ``a`` y ``b``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:632
msgid ""
"``foo(if field('series') then field('series_index') else 0 fi)`` -- if the "
"book has a ``series`` then pass the ``series_index``, otherwise pass the "
"value ``0``."
msgstr "``foo(if field('series') then field('series_index') else 0 fi)`` -- si el libro tiene ``series``, pasa el valor de ``series_index``, en caso contrario pasa el valor ``0``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:634
msgid ""
"In the stored template you retrieve the arguments passed in the call using "
"the ``arguments`` function. It both declares and initializes local "
"variables, effectively parameters. The variables are positional; they get "
"the value of the value given in the call in the same position. If the "
"corresponding parameter is not provided in the call then ``arguments`` "
"assigns that variable the provided default value. If there is no default "
"value then the variable is set to the empty string. For example, the "
"following ``arguments`` function declares 2 variables, ``key``, "
"``alternate``::"
msgstr "En la plantilla guardada puede obtener el valor de los argumentos pasados en la invocación usando la función ``arguments``. Esta función declara e inicializa las variables locales, parámetros en la práctica. Las variables son posicionales: obtienen el valor del argumento usado en la misma posición en la invocación. Si el argumento correspondiente no aparece en la invocación, ``arguments`` asigna a esa variable el valor predeterminado suministrado. Si no hay valor predeterminado, será un texto vacío. Por ejemplo, la siguiente función ``arguments`` declara dos variables: ``key`` y ``alternate`::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:642
msgid "Examples, again assuming the stored template is named ``foo``:"
msgstr "Ejemplos, suponiendo de nuevo que la plantilla guardada se llame ``foo``:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:644
msgid ""
"``foo('#myseries')`` -- argument ``key`` will have the value ``myseries`` "
"and the argument ``alternate`` will have the value ``series``."
msgstr "``foo('#miserie')`` -- la variable ``key`` tendrá el valor ``#miserie`` y la variable ``alternate`` tendrá el valor ``series``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:645
msgid ""
"``foo('series', '#genre')`` the variable ``key`` is assigned the value "
"``series`` and the variable ``alternate`` is assigned the value ``#genre``."
msgstr "``foo('serie', '#genero')`` -- la variable ``key`` tendrá el valor ``serie`` y la variable ``alternate`` tendrá el valor ``#genero``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:646
msgid ""
"``foo()`` -- the variable ``key`` is assigned the empty string and the "
"variable ``alternate`` is assigned the value ``#genre``."
msgstr "``foo()`` -- la variable ``key`` será un texto vacío y la variable ``alternate`` tendrá el valor ``#genre#``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:648
msgid ""
"An easy way to test stored templates is using the ``Template tester`` "
"dialog. Give it a keyboard shortcut in "
":guilabel:`Preferences->Advanced->Keyboard shortcuts->Template tester`. "
"Giving the ``Stored templates`` dialog a shortcut will help switching more "
"rapidly between the tester and editing the stored template's source code."
msgstr "Una buena manera de probar las plantillas guardadas es usar el diálogo :guilabel:`Prueba de plantillas`. Asígnele un atajo de teclado en :guilabel:`Preferencias > Avanzado > Atajos > Prueba de plantillas`. Si le asigna un atajo de teclado podrá alternar rápidamente entre la prueba de plantillas y la modificación del código de programa de la plantilla."

#: ../../__w/calibre/calibre/manual/template_lang.rst:653
msgid "Providing additional information to templates"
msgstr "Pasar información adicional a las plantillas"

#: ../../__w/calibre/calibre/manual/template_lang.rst:655
msgid ""
"A developer can choose to pass additional information to the template "
"processor, such as application-specific book metadata or information about "
"what the processor is being asked to do. A template can access this "
"information and use it during the evaluation."
msgstr "Un desarrollador puede decidir pasar información adicional al procesador de plantillas, como metadatos del libro específicos para una aplicación o información sobre lo que se quiere que haga el procesador. Una plantilla puede acceder a esta información y usarla durante la evaluación."

#: ../../__w/calibre/calibre/manual/template_lang.rst:659
msgid "**Developer: how to pass additional information**"
msgstr "**Desarrollador: cómo pasar información adicional**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:661
msgid ""
"The additional information is a python dictionary containing pairs "
"``variable_name: variable_value`` where the values should be strings. The "
"template can access the dict, creating template local variables named "
"``variable_name`` containing the value ``variable_value``. The user cannot "
"change the name so it is best to use names that won't collide with other "
"template local variables, for example by prefixing the name with an "
"underscore."
msgstr "La información adicional es un diccionario Python que contiene pares ``nombre_de_variable: valor de variable`` donde los valores deben ser textos. La plantilla puede acceder al diccionario, creando variables locales con nombre ``nombre_de_variable`` y valor ``valor de variable``. El usuario no puede cambiar el nombre, así que lo mejor es usar nombres que no entren en conflicto con otras variables locales, por ejemplo añadiendo un guión bajo al principio del nombre."

#: ../../__w/calibre/calibre/manual/template_lang.rst:666
msgid ""
"This dict is passed to the template processor (the ``formatter``) using the "
"named parameter ``global_vars=your_dict``. The full method signature is:"
msgstr "El diccionario se pasa al procesador de plantillas (el ``formatter``) usando el argumento ``global_vars=diccionario``. La forma completa del método es:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:673
msgid "def safe_format(self, fmt, kwargs, error_value, book,"
msgstr "def safe_format(self, fmt, kwargs, error_value, book,"

#: ../../__w/calibre/calibre/manual/template_lang.rst:670
msgid ""
"column_name=None, template_cache=None, strip_results=True, "
"template_functions=None, global_vars={})"
msgstr "column_name=None, template_cache=None, strip_results=True, template_functions=None, global_vars={})"

#: ../../__w/calibre/calibre/manual/template_lang.rst:675
msgid "**Template writer: how to access the additional information**"
msgstr "**Creador de plantillas: cómo acceder a la información adicional**"

#: ../../__w/calibre/calibre/manual/template_lang.rst:677
msgid ""
"You access the additional information in a template using the template "
"function ``globals(id[=expression] [, id[=expression]]*)`` where ``id`` is "
"any legal variable name. This function checks whether the additional "
"information provided by the developer contains the name. If it does then the"
" function assigns the provided value to a template local variable with the "
"given name. If the name is not in the additional information and if an "
"``expression`` is provided, the ``expression`` is evaluated and the result "
"is assigned to the local variable. If neither a value nor an expression is "
"provided, the function assigns the empty string (``''``) to the local "
"variable."
msgstr "Puede acceder a la información adicional de una plantilla usando la función de plantilla ``globals(id[=expresión] [, id[=expresión]]*)``, donde ``id`` es cualquier nombre de variable permitido. Esta función comprueba si la información adicional prevista por el desarrollador contiene el nombre. Si es así, la función asigna el valor a una variable local con ese nombre. Si el nombre no está presente en la información adicional y se suministra una ``expresión``, se evalua dicha ``expresión`` y el resultado se asigna a la variable local. Si no existe ni un valor ni una expresión, la función asigna el texto vacío (``''``) a la variable local."

#: ../../__w/calibre/calibre/manual/template_lang.rst:686
msgid "Notes on the difference between modes"
msgstr "Notas sobre las diferencias entre modos"

#: ../../__w/calibre/calibre/manual/template_lang.rst:688
msgid ""
"The three program modes, Single Function Mode (SFM), Template Program Mode "
"(TPM), and General Program Mode (GPM), work differently. SFM is intended to "
"be 'simple' so it hides a lot of programming language bits. For example, the"
" value of the column is always passed as an 'invisible' first argument to a "
"function included in the template. SFM also doesn't support the difference "
"between variables and strings; all values are strings."
msgstr "Los tres modos de programación, el modo de funcíon única (MFU), el modo de programación de plantillas (MPP) y el modo de programación general (MPG) funcionan de distinta manera. MFU pretende ser «sencillo» y oculta muchos elementos del lenguaje de programación. Por ejemplo, el valor de la columna siempre se pasa como el primer argumento «invisible» a la función que se incluye en la plantilla. Además MFU no hace distinciones entre variables y textos: todas las variables son textos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:694
msgid ""
"Example: the following SFM template returns either the series name or the "
"string \"no series\"::"
msgstr "Ejemplo: La siguiente plantilla MFU devuelve el nombre de la serie o el texto «no series»::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:698
msgid "The equivalent template in TPM is ::"
msgstr "La plantilla equivalente en MPP es::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:702
msgid "The equivalent template in GPM is::"
msgstr "La plantilla equivalente en MPG es::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:706
msgid ""
"The first argument to ``ifempty`` is the value of the field ``series``. The "
"second argument is the string ``no series``. In SFM the first argument, the "
"value of the field, is automatically passed (the invisible argument)."
msgstr "El primer argumento de ``ifempty`` es el valor del campo ``series``. El segundo argumento es el texto ``no series``. En MFU el primer argumento, el valor, se pasa automáticamente (es el argumento invisible)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:710
msgid ""
"Several template functions, for example ``booksize()`` and "
"``current_library_name()``, take no arguments. Because of the 'invisible "
"argument' you cannot use these functions in SFM."
msgstr "Varias funciones de plantilla, como ``booksize()`` y ``current_library_name()``, no admiten argumentos. Debido al «argumento invisible», no puede usar estas funciones en MFU."

#: ../../__w/calibre/calibre/manual/template_lang.rst:713
msgid ""
"Nested functions, where a function calls another function to compute an "
"argument, cannot be used in SFM. For example this template, intended to "
"return the first 5 characters of the series value uppercased, won't work in "
"SFM::"
msgstr "Las funciones anidadas, en las que una función invoca a otra función para evaluar un argumento, no pueden usarse en MFU. Por ejemplo, esta plantilla, que pretende devolver los primeros cinco caracteres del valor de la serie convertidos en mayúsculas, no funcionará en MFU::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:718
msgid ""
"TPM and GPM support nested functions. The above template in TPM would be::"
msgstr "MPP y MPG permiten usar funciones anidadas. La plantilla anterior en MPP sería::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:722
msgid "In GPM it would be::"
msgstr "En MPG sería::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:728
msgid "User-defined Python template functions"
msgstr "Funciones de plantilla Python definidas por el usuario"

#: ../../__w/calibre/calibre/manual/template_lang.rst:730
msgid ""
"You can add your own Python functions to the template processor. Such "
"functions can be used in any of the three template programming modes. The "
"functions are added by going to :guilabel:`Preferences -> Advanced -> "
"Template functions`. Instructions are shown in that dialog."
msgstr "Puede añadir funciones propias al procesador de plantillas. Dichas funciones pueden usarse en cualquiera de los tres modos de programación de plantillas. Las funciones se añaden en :guilabel:`Preferencias > Avanzado > Funciones de plantilla`. Las instrucciones se muestran en el correspondiente cuadro de diálogo."

#: ../../__w/calibre/calibre/manual/template_lang.rst:734
msgid "Special notes for save/send templates"
msgstr "Notas especiales para plantillas de guardado o envío"

#: ../../__w/calibre/calibre/manual/template_lang.rst:736
msgid ""
"Special processing is applied when a template is used in a `save to disk` or"
" `send to device` template. The values of the fields are cleaned, replacing "
"characters that are special to file systems with underscores, including "
"slashes. This means that field text cannot be used to create folders. "
"However, slashes are not changed in prefix or suffix strings, so slashes in "
"these strings will cause folders to be created. Because of this, you can "
"create variable-depth folder structure."
msgstr "Cuando una plantilla se usa como plantilla de «guardado a disco» o de «envío a dispositivo», ocurre un procesado especial. Los valores de los campos se sanean, eliminando caracteres especiales para los sistemas operativos por guiones bajos, incluyendo barras. Esto significa que el texto de los campos no puede usarse para crear carpetas. Sin embargo, las barras no se modifican en los textos de prefijo o sufijo, por lo que las barras en estos textos harán que se creen carpetas. Gracias a esto, es posible crear estructuras de carpetas de profundidad variable."

#: ../../__w/calibre/calibre/manual/template_lang.rst:741
msgid ""
"For example, assume we want the folder structure `series/series_index - "
"title`, with the caveat that if series does not exist, then the title should"
" be in the top folder. The template to do this is::"
msgstr "Por ejemplo, supongamos que quiere una estructura de carpetas `serie/índice de serie - título`, con la salvedad de que si la serie no existe el título debe estar en la carpeta superior. La plantilla para conseguir esto es::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:746
msgid "The slash and the hyphen appear only if series is not empty."
msgstr "La barra y el guión sólo aparecen si la serie no está vacía."

#: ../../__w/calibre/calibre/manual/template_lang.rst:748
msgid ""
"The lookup function lets us do even fancier processing. For example, assume "
"that if a book has a series, then we want the folder structure "
"`series/series index - title.fmt`. If the book does not have a series, then "
"we want the folder structure `genre/author_sort/title.fmt`. If the book has "
"no genre, we want to use 'Unknown'. We want two completely different paths, "
"depending on the value of series."
msgstr "La función ``lookup()`` nos permite realizar un procesado aún más complejo. Por ejemplo, supongamos que si un libro tiene una serie, entonces queremos una estructura de carpetas `serie/índice de serie - título`. Si el libro no tiene una serie, entonces queremos la estructura `género/orden de autor/título`. Si el libro no tiene género, queremos que use «Desconocido». Queremos seguir dos caminos completamente distintos según el valor de la serie."

#: ../../__w/calibre/calibre/manual/template_lang.rst:758
msgid "To accomplish this, we:"
msgstr "Para lograr esto:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:753
msgid ""
"Create a composite field (give it lookup name #AA) containing "
"``{series}/{series_index} - {title}``. If the series is not empty, then this"
" template will produce `series/series_index - title`."
msgstr "Creamos un campo compuesto (démosle el nombre de consulta #AA) que contiene ``{series}/{series_index} - {title}``. Si la serie no está vacía, esta plantilla produce `serie/número_de_serie - título`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:755
msgid ""
"Create a composite field (give it lookup name #BB) containing "
"``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. This template produces "
"`genre/author_sort/title`, where an empty genre is replaced with `Unknown`."
msgstr "Creamos un campo compuesto (démosle el nombre de consulta #BB) que contenga ``{#genre:ifempty(Desconocido)}/{author_sort}/{title}``. Esta plantilla produce `género/orden de autor/título`, donde un género vacío se sustituye por `Desconocido`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:757
msgid ""
"Set the save template to ``{series:lookup(.,#AA,#BB)}``. This template "
"chooses composite field #AA if series is not empty, and composite field #BB "
"if series is empty. We therefore have two completely different save paths, "
"depending on whether or not `series` is empty."
msgstr "Establecemos la plantilla de guardado en ``{series:lookup(.,#AA,#BB)}``. Esta plantilla elige el campo compuesto #AA si la serie no está vacía y el campo compuesto #BB si la serie está vacía. Obtenemos por lo tanto dos rutas de guardado completamente diferentes según el campo `series` esté o no vacío."

#: ../../__w/calibre/calibre/manual/template_lang.rst:761
msgid "Templates and plugboards"
msgstr "Plantillas y controles de metadatos"

#: ../../__w/calibre/calibre/manual/template_lang.rst:763
msgid ""
"Plugboards are used for changing the metadata written into books during "
"send-to-device and save-to-disk operations. A plugboard permits you to "
"specify a template to provide the data to write into the book's metadata. "
"You can use plugboards to modify the following fields: authors, author_sort,"
" language, publisher, tags, title, title_sort. This feature helps people who"
" want to use different metadata in books on devices to solve sorting or "
"display issues."
msgstr "Los paneles de conexiones se usan para cambiar los metadatos escritos en los libros durante las operaciones de guardado en disco y de envío a dispositivo. Un panel de conexiones le permite especificar una plantilla para suministrar los datos que se escribirán en los metadatos del libro. Puede usar los paneles de conexiones para modificar los siguientes campos: authors, author_sort, language, publisher, tags, title, title_sort. Esa función es útil para los que quieren usar metadatos diferentes en los libros de los dispositivos, para solucionar problemas de ordenación o de visualización."

#: ../../__w/calibre/calibre/manual/template_lang.rst:768
msgid ""
"When you create a plugboard, you specify the format and device for which the"
" plugboard is to be used. A special device is provided, ``save_to_disk``, "
"that is used when saving formats (as opposed to sending them to a device). "
"Once you have chosen the format and device, you choose the metadata fields "
"to change, providing templates to supply the new values. These templates are"
" `connected` to their destination fields, hence the name `plugboards`. You "
"can, of course, use composite columns in these templates."
msgstr "Cuando cree un panel de conexiones, especifique el formato y dispositivo para los que se usará. Hay un dispositivo especial ``save_to_disk``, que se usa para guardar formatos (en lugar de enviarlos a un dispositivo). Una vez que ha elegido el formato y dispositivo, elija los campos de metadatos para cambiar, y suministre plantillas para obtener los nuevos valores. Estas plantillas están `conectadas` con sus campos de destino, de ahí el nombre `panel de conexiones`. Por supuesto, puede usar columnas compuestas en estas plantillas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:773
msgid ""
"When a plugboard might apply (Content server, save to disk, or send to "
"device), calibre searches the defined plugboards to choose the correct one "
"for the given format and device. For example, to find the appropriate "
"plugboard for an EPUB book being sent to an ANDROID device, calibre searches"
" the plugboards using the following search order:"
msgstr "Cuando un panel de conexiones pueda aplicarse (servidor de contenido, guardado en disco o envío a dispositivo), calibre busca los paneles definidos para elegir el correcto según el formato y dispositivo. Por ejemplo, para encontrar el panel de conexiones apropiado para enviar un libro EPUB a un dispositivo ANDROID, calibre busca en los paneles en el siguiente orden:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:777
msgid ""
"a plugboard with an exact match on format and device, e.g., ``EPUB`` and "
"``ANDROID``"
msgstr "un panel de conexiones con una coincidencia exacta de formato y dispositivo, por ejemplo: ``EPUB`` y ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:778
msgid ""
"a plugboard with an exact match on format and the special ``any device`` "
"choice, e.g., ``EPUB`` and ``any device``"
msgstr "un panel de conexiones con una coincidencia exacta de formato y el dispositivo especial ``any device``, por ejemplo ``EPUB`` y ``any device``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:779
msgid ""
"a plugboard with the special ``any format`` choice and an exact match on "
"device, e.g., ``any format`` and ``ANDROID``"
msgstr "un panel de conexiones con el formato especial ``any format`` y una coincidencia exacta de dispositivo, por ejemplo: ``any format`` y ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:780
msgid "a plugboard with ``any format`` and ``any device``"
msgstr "un panel de conexiones con ``any format`` y ``any device``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:782
msgid ""
"The tags and authors fields have special treatment, because both of these "
"fields can hold more than one item. A book can have many tags and many "
"authors. When you specify that one of these two fields is to be changed, the"
" template's result is examined to see if more than one item is there. For "
"tags, the result is cut apart wherever calibre finds a comma. For example, "
"if the template produces the value ``Thriller, Horror``, then the result "
"will be two tags, ``Thriller`` and ``Horror``. There is no way to put a "
"comma in the middle of a tag."
msgstr "Los campos etiquetas y autores tienen un trato especial, debido a que ambos pueden tener más de un elemento. Un libro puede poseer varias etiquetas y varios autores. Cuando indique que desea cambiar uno de estos campos, la plantilla se examina para comprobar si hay más de un elemento. Para las etiquetas, el resultado se divide dondequiera que calibre encuentre una coma. Por ejemplo, si la plantilla produce el valor ``Intriga, Terror``, el resultado serán dos etiquetas: ``Intriga`` y ``Terror``. No existe manera de poner una coma dentro de una etiqueta."

#: ../../__w/calibre/calibre/manual/template_lang.rst:787
msgid ""
"The same thing happens for authors, but using a different character for the "
"cut, a `&` (ampersand) instead of a comma. For example, if the template "
"produces the value ``Blogs, Joe&Posts, Susan``, then the book will end up "
"with two authors, ``Blogs, Joe`` and ``Posts, Susan``. If the template "
"produces the value ``Blogs, Joe;Posts, Susan``, then the book will have one "
"author with a rather strange name."
msgstr "Lo mismo ocurre con los autores, pero usando un carácter diferente para el corte, un signo «&» en lugar de una coma. Por ejemplo, si la plantilla produce el valor ``Blogs, Joe&Posts, Susan``, el libro acabará con dos autores, ``Blogs, Joe`` y ``Posts, Susan``. Si la plantilla produce el valor ``Blogs, Joe;Posts, Susan``, el libro tendrá un autor con un nombre peculiar."

#: ../../__w/calibre/calibre/manual/template_lang.rst:791
msgid ""
"Plugboards affect the metadata written into the book when it is saved to "
"disk or written to the device. Plugboards do not affect the metadata used by"
" ``save to disk`` and ``send to device`` to create the file names. Instead, "
"file names are constructed using the templates entered on the appropriate "
"preferences window."
msgstr "Los paneles de conexiones afectan a los metadatos escritos en el libro cuando se guarda en disco o se escribe en un dispositivo. Los paneles de conexiones no afectan a los metadatos usados por las funciones :guilabel:`Guardar en el disco` :guilabel:`Enviar al dispositivo` para crear los nombres de archivo. En lugar de ello, los nombres de archivo se construyen usando las plantillas introducidas en la ventana de preferencias correspondiente."

#: ../../__w/calibre/calibre/manual/template_lang.rst:796
msgid "Tips"
msgstr "Consejos"

#: ../../__w/calibre/calibre/manual/template_lang.rst:798
msgid "You might find the following tips useful."
msgstr "Puede encontrar útiles los siguientes consejos."

#: ../../__w/calibre/calibre/manual/template_lang.rst:800
msgid ""
"Use the Template Tester to test templates. Add the tester to the context "
"menu for books in the library and/or give it a keyboard shortcut."
msgstr "Use la prueba de plantillas para probar plantillas. Añada esta función al menú contextual para libros en lea biblioteca o asígnele un atajo de teclado."

#: ../../__w/calibre/calibre/manual/template_lang.rst:801
msgid ""
"Templates can use other templates by referencing composite columns built "
"with the desired template. Alternatively, you could use Stored Templates."
msgstr "Las plantillas pueden usar otras plantillas haciendo referencia a columnas compuestas construidas con la plantilla deseada. También puede usar plantillas guardadas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:803
msgid ""
"In a plugboard, you can set a field to empty (or whatever is equivalent to "
"empty) by using the special template ``{}``. This template will always "
"evaluate to an empty string."
msgstr "En un panel de conexiones, puede establecer un campo como vacío (o lo que sea equivalente a vacío) utilizando la plantilla especial ``{}``. Esta plantilla siempre producirá un texto vacío."

#: ../../__w/calibre/calibre/manual/template_lang.rst:805
msgid ""
"The technique described above to show numbers even if they have a zero value"
" works with the standard field series_index."
msgstr "La técnica descrita anteriormente para mostrar los números incluso si son cero funciona con el campo estándar «series_index»."

#: ../../__w/calibre/calibre/manual/template_lang.rst:810
msgid "Function reference"
msgstr "Referencia de funciones"
