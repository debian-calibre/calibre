# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# efef6ec5b435a041fce803c7f8af77d2_2341d43, 2020
# Jonatan Nyberg <jonatan@autistici.org>, 2016-2017,2021-2022
# Jonatan Nyberg <jonatan@autistici.org>, 2018-2021
# efef6ec5b435a041fce803c7f8af77d2_2341d43, 2017-2018
# Merarom <merarom@yahoo.es>, 2014-2017
# Sebastian Rasmussen <sebras@gmail.com>, 2018
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-10 14:55+0000\n"
"PO-Revision-Date: 2014-07-05 16:49+0000\n"
"Last-Translator: Jonatan Nyberg <jonatan@autistici.org>, 2016-2017,2021-2022\n"
"Language-Team: Swedish (http://www.transifex.com/calibre/calibre/language/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../__w/calibre/calibre/manual/db_api.rst:4
msgid "API documentation for the database interface"
msgstr "API-dokumentation för databasgränssnittet"

#: ../../__w/calibre/calibre/manual/db_api.rst:9
msgid ""
"This API is thread safe (it uses a multiple reader, single writer locking "
"scheme).  You can access this API like this::"
msgstr "Denna API är trådsäker (använder ett flerläsar-, singelskrivarutelåsningsschema). Du kan komma åt denna API så här::"

#: ../../__w/calibre/calibre/manual/db_api.rst:14
msgid ""
"If you are in a calibre plugin that is part of the main calibre GUI, you get"
" access to it like this instead::"
msgstr "Om du är i en calibre-insticksmodul som är en del av calibres huvudanvändargränssnitt får du tillgång till den så här istället::"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:1
msgid ""
"An in-memory cache of the metadata.db file from a calibre library. This "
"class also serves as a threadsafe API for accessing the database. The in-"
"memory cache is maintained in normal form for maximum performance."
msgstr "En cache i minnet för metadata.db-filen från ett calibre-bibliotek. Den här klassen fungerar också som ett trådsäkert API för åtkomst till databasen. Cachen i minnet behålls i normal form för högsta prestanda."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:5
msgid ""
"SQLITE is simply used as a way to read and write from metadata.db robustly. "
"All table reading/sorting/searching/caching logic is re-implemented. This "
"was necessary for maximum performance and flexibility."
msgstr "SQLITE används helt enkelt som ett sätt att läsa och skriva från metadata.db robust. All logik för läsning/sortering/sökning/cachning av tabeller är återimplementerad. Detta var nödvändigt för maximal prestanda och flexibilitet."

#: ../../__w/calibre/calibre/src/calibre/db/listeners.pydocstring of
#: calibre.db.listeners.EventType:1
msgid "An enumeration."
msgstr "En uppräkning."

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.book_created:1
msgid ""
"When a new book record is created in the database, with the book id as the "
"only argument"
msgstr "När en ny bokpost skapas i databasen, med bok-id som enda argument"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.book_edited:1
msgid "When a book format is edited, with arguments: (book_id, fmt)"
msgstr "När ett bokformat redigeras, med argument: (book_id, fmt)"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.books_removed:1
msgid ""
"When books are removed from the database with the list of book ids as the "
"only argument"
msgstr "När böcker tas bort från databasen med listan över bok-ID som enda argument"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.format_added:1
msgid "When a format is added to a book, with arguments: (book_id, format)"
msgstr "När ett format läggs till i en bok, med argument: (bok_id, format)"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.formats_removed:1
msgid ""
"When formats are removed from a book, with arguments: (mapping of book id to"
" set of formats removed from the book)"
msgstr ""

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.indexing_progress_changed:1
msgid "When the indexing progress changes"
msgstr "När indexeringsförloppet ändras"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.items_removed:1
msgid ""
"When items such as tags or authors are removed from some books. Arguments: "
"(field_name, affected book ids, ids of removed items)"
msgstr "När objekt som taggar eller författare tas bort från vissa böcker. Argument: (field_name, berörda bok-id, id för borttagna objekt)"

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.items_renamed:1
msgid ""
"When items such as tags or authors are renamed in some or all books. "
"Arguments: (field_name, affected book ids, map of old item id to new item "
"id)"
msgstr ""

#: ../../__w/calibre/calibre/manual/docstring of
#: calibre.db.cache.Cache.EventType.metadata_changed:1
msgid ""
"When some metadata is changed for some books, with arguments: (name of "
"changed field, set of affected book ids)"
msgstr "När vissa metadata ändras för vissa böcker, med argument: (namn på ändrat fält, uppsättning påverkade bok-id)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:1
msgid ""
"Add the specified books to the library. Books should be an iterable of "
"2-tuples, each 2-tuple of the form :code:`(mi, format_map)` where mi is a "
"Metadata object and format_map is a dictionary of the form :code:`{fmt: "
"path_or_stream}`, for example: :code:`{'EPUB': '/path/to/file.epub'}`."
msgstr "Lägg till de angivna böckerna i biblioteket. Böcker bör vara en uppräknelig mängd i multipel av 2, varje multipel av 2 med formen  :code:`(mi, format_map)` där mi är ett metadataobjekt och format_map är en ordbok med formen :code:`{fmt: path_or_stream}`, till exempel: :code:`{'EPUB': '/sökväg/till/fil.epub'}`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:6
msgid ""
"Returns a pair of lists: :code:`ids, duplicates`. ``ids`` contains the book "
"ids for all newly created books in the database. ``duplicates`` contains the"
" :code:`(mi, format_map)` for all books that already exist in the database "
"as per the simple duplicate detection heuristic used by :meth:`has_book`."
msgstr "returnerar ett listpar: :code:`ids, duplicates`. ``id`` innehållande bokens identiteter för all nyligen skapade böcker i databasen. \"duplikat\" innehåller :code:`(mi, format_map)` for alla böcker som redan finns i databasen genom enkel heuristisk duplikationsdetektering använd av :meth:`has_book`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_custom_book_data:1
msgid ""
"Add data for name where val_map is a map of book_ids to values. If "
"delete_first is True, all previously stored data for name will be removed."
msgstr "Lägg till data för namn där val_map är en karta över book_ids till värden. Om delete_first är True kommer alla tidigare lagrade data för namn tas bort."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:1
msgid ""
"Add a format to the specified book. Return True if the format was added "
"successfully."
msgstr "Lägg till ett format i den angivna boken. Returnera True om formatet har lagts till."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:0
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:0
msgid "Parameters"
msgstr "Parametrar"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:3
msgid ""
"If True replace existing format, otherwise if the format already exists, "
"return False."
msgstr "Om True ersätts befintligt format, annars om formatet redan finns, returneras False."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:4
msgid ""
"If True, file type plugins are run on the format before and after being "
"added."
msgstr "Om True, körs filtypsinsticksmoduler på formatet innan och efter de tilläggs."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:5
msgid "Internal use only."
msgstr "Endast internt bruk."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_listener:1
msgid ""
"Register a callback function that will be called after certain actions are "
"taken on this database. The function must take three arguments: "
"(:class:`EventType`, library_id, event_type_specific_data)"
msgstr "Registrera en återanropningsfunktion som anropas efter att vissa åtgärder har vidtagits i denna databas. Funktionen måste ha tre argument: (:class:`EventType`, library_id, event_type_specific_data)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_book_ids:1
msgid "Frozen set of all known book ids."
msgstr "Fryst uppsättning av alla kända bokidentiteter."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_for:1
msgid "Same as field_for, except that it operates on multiple books at once"
msgstr "Samma som field_for, förutom att det fungerar på flera böcker samtidigt"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_ids:1
msgid "Frozen set of ids for all values in the field ``name``."
msgstr "Fryst uppsättning av identiteter för alla värden i fältet ``namn``."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_names:1
msgid ""
"Frozen set of all fields names (should only be used for many-one and many-"
"many fields)"
msgstr "Fryst uppsättning av alla fältnamn (bör endast användas för många-ett och många-många fält)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:1
msgid "Return author data as a dictionary with keys: name, sort, link"
msgstr "returnerar författardata som ordbok med nycklar: namn, sort, länk"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:3
msgid ""
"If no authors with the specified ids are found an empty dictionary is "
"returned. If author_ids is None, data for all authors is returned."
msgstr "Om inga författare med angivna identiteter hittas returneras en tom ordbok. Om author_ids är None, returneras data för alla författare."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_sort_from_authors:1
msgid ""
"Given a list of authors, return the author_sort string for the authors, "
"preferring the author sort associated with the author over the computed "
"string."
msgstr "Given en lista med författare, returnera author_sort sträng för författare,  framför författarsortering associerad med författare över bearbetade strängen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:1
msgid ""
"Return all the books associated with the item identified by ``item_id``, "
"where the item belongs to the field ``name``."
msgstr "returnerar alla böcker associerade med posten identifierad av ``item_id``, där posten tillhör fältet  ``name``."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:4
msgid ""
"Returned value is a set of book ids, or the empty set if the item or the "
"field does not exist."
msgstr "Returnerat värde är en mängd av bokidentiteter eller den tomma mängden om posten eller fältet inte finns."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_in_virtual_library:1
msgid "Return the set of books in the specified virtual library"
msgstr "Returnera uppsättningen böcker i det angivna virtuella biblioteket"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.compress_covers:1
msgid ""
"Compress the cover images for the specified books. A compression quality of "
"100 will perform lossless compression, otherwise lossy compression."
msgstr "Komprimera omslagsbilderna för de angivna böckerna. En komprimeringskvalitet på 100 kommer att utföra förlustfri komprimering, annars är det förlustbringande."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.compress_covers:4
msgid ""
"The progress callback will be called with the book_id and the old and new "
"sizes for each book that has been processed. If an error occurs, the new "
"size will be a string with the error details."
msgstr "Framstegsåterkallningen kommer att anropas med book_id och de gamla och nya storlekarna för varje bok som har bearbetats. Om ett fel inträffar kommer den nya storleken att vara en sträng med feldetaljer."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_cover_to:1
msgid ""
"Copy the cover to the file like object ``dest``. Returns False if no cover "
"exists or dest is the same file as the current cover. dest can also be a "
"path in which case the cover is copied to it if and only if the path is "
"different from the current path (taking case sensitivity into account)."
msgstr "Kopiera omslag till filen som objektet ``dest``. Returnerar False om inget omslag finns eller dest är samma fil som det aktuella omslaget. dest kan också vara en sökväg i vilket fall omslaget kopieras till det om och endast om sökvägen är en annan än den aktuella sökvägen (med små bokstäver i beräkningen)."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_format_to:1
msgid ""
"Copy the format ``fmt`` to the file like object ``dest``. If the specified "
"format does not exist, raises :class:`NoSuchFormat` error. dest can also be "
"a path (to a file), in which case the format is copied to it, iff the path "
"is different from the current path (taking case sensitivity into account)."
msgstr "Kopiera formatet ``fmt`` till det fillika objektet ``dest``. Om det angivna formatet inte finns, ges :class:`NoSuchFormat`-fel. dest kan också vara en sökväg (till en fil), i vilket fall formatet kopieras till den, om och endast om sökvägen skiljer sig från den aktuella sökvägen (med hänsyn till skiftlägeskänslighet)."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:1
msgid ""
"Return the cover image or None. By default, returns the cover as a "
"bytestring."
msgstr "Returnera omslagsbild eller inget. Som standard, returneras omslag som en byte sträng."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:4
msgid ""
"WARNING: Using as_path will copy the cover to a temp file and return the "
"path to the temp file. You should delete the temp file when you are done "
"with it."
msgstr "VARNING: Använda as_path kommer att kopiera omslaget till en temporär fil och returnera sökvägen till temporära filen. Du bör ta bort temporära filen när du är klar med den."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:8
msgid ""
"If True return the image as an open file object (a SpooledTemporaryFile)"
msgstr "Om True returnerar bilden som ett öppet filobjekt (en SpooledTemporaryFile)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:9
msgid "If True return the image as a QImage object"
msgstr "Om True returnerar bilden som ett Q-bildobjekt"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:10
msgid "If True return the image as a QPixmap object"
msgstr "Om True returnera bilden som ett QPixmap-objekt"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:11
msgid "If True return the image as a path pointing to a temporary file"
msgstr "Om True returnerar bilden som en sökväg till en temporärfil"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.data_for_find_identical_books:1
msgid ""
"Return data that can be used to implement :meth:`find_identical_books` in a "
"worker process without access to the db. See db.utils for an implementation."
msgstr "Returnera data som kan användas för att implementera :meth:`find_identical_books` i en arbetsprocess utan tillgång till db. Se db.utils för en implementering."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.data_for_has_book:1
msgid ""
"Return data suitable for use in :meth:`has_book`. This can be used for an "
"implementation of :meth:`has_book` in a worker process without access to the"
" db."
msgstr "returnerar data som är lämpliga för användning i :meth:`has_book`. Detta kan användas för en implementering av :meth:`has_book` i en arbetsprocess utan tillgång till db."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.delete_custom_book_data:1
msgid ""
"Delete data for name. By default deletes all data, if you only want to "
"delete data for some book ids, pass in a list of book ids."
msgstr "Ta bort data för namn. Som standard tas alla data bort, om du endast vill ta bort data för vissa bokidentifierare, passera i en lista med bokidentifierare."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.embed_metadata:1
msgid ""
"Update metadata in all formats of the specified book_ids to current metadata"
" in the database."
msgstr "Uppdatera metadata i alla format av de angivna bok_ids till aktuell metadata i databasen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.fast_field_for:1
msgid ""
"Same as field_for, except that it avoids the extra lookup to get the field "
"object"
msgstr "Samma som field_for, förutom att den undviker den extra uppslagningen för att få fältobjektet"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:1
msgid ""
"Return the value of the field ``name`` for the book identified by "
"``book_id``. If no such book exists or it has no defined value for the field"
" ``name`` or no such field exists, then ``default_value`` is returned."
msgstr "Returnera värdet av fältet ``name`` för boken som identifieras av ``book_id``. Om ingen sådan bok finns eller inte har något definierat värde för fältet ``name`` eller inget sådant fält finns, så returneras ``default_value``."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:6
msgid ""
"``default_value`` is not used for title, title_sort, authors, author_sort "
"and series_index. This is because these always have values in the db. "
"``default_value`` is used for all custom columns."
msgstr "``default_value`` används inte för title, title_sort, authors, author_sort och series_index. Det här beror på att dessa alltid har värden i db. ``default_value`` används för alla anpassade kolumner."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:10
msgid ""
"The returned value for is_multiple fields are always tuples, even when no "
"values are found (in other words, default_value is ignored). The exception "
"is identifiers for which the returned value is always a dict. The returned "
"tuples are always in link order, that is, the order in which they were "
"created."
msgstr "Det återgivna värdet för is_multiple fält är alltid tupler, även om inga värden finns (med andra ord, default_value ignoreras). Undantaget är identifierare som det återgav värdet alltid är en 'dict'. De återgivna tuplerna är alltid i länkordning, det vill säga i vilken ordning de skapades."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_ids_for:1
msgid ""
"Return the ids (as a tuple) for the values that the field ``name`` has on "
"the book identified by ``book_id``. If there are no values, or no such book,"
" or no such field, an empty tuple is returned."
msgstr "Returnera id:n (som en tupel) för de värden som fältet ``namn`` har på boken som identifieras av ``book_id``. Om det inte finns några värden, ingen sådan bok, eller inget sådant fält, returneras en tom tupel."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.find_identical_books:1
msgid ""
"Finds books that have a superset of the authors in mi and the same title "
"(title is fuzzy matched). See also :meth:`data_for_find_identical_books`."
msgstr "Hittar böcker som har en övermängd av författarna i mi och samma titel (titeln är oklart matchad). Se även :meth:`data_for_find_identical_books`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:1
msgid ""
"Return the e-book format as a bytestring or `None` if the format doesn't "
"exist, or we don't have permission to write to the e-book file."
msgstr "Returnera e-bokformat som en bytestring eller `None` om formatet inte finns, eller om vi inte har behörighet att skriva till e-bokfilen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:4
msgid ""
"If True the e-book format is returned as a file object. Note that the file "
"object is a SpooledTemporaryFile, so if what you want to do is copy the "
"format to another file, use :meth:`copy_format_to` instead for performance."
msgstr "Om True returneras e-bokformatet som ett filobjekt. Observera att filobjektet är en SpooledTemporaryFile, så om vad du vill göra är att kopiera formatet till en annan fil, använd :meth:`copy_format_to` istället för prestanda."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:8
msgid ""
"Copies the format file to a temp file and returns the path to the temp file"
msgstr "Kopierar formatet filen till en temp fil och returnerar sökvägen till temp filen"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:10
msgid ""
"If True and returning a path the filename is the same as that used in the "
"library. Note that using this means that repeated calls yield the same temp "
"file (which is re-created each time)"
msgstr "Om True och returneras en sökväg, filnamnet är samma som den som används i biblioteket. Observera att detta innebär att upprepade anrop ger samma temp fil (som återskapas varje gång)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:1
msgid ""
"Return absolute path to the e-book file of format `format`. You should "
"almost never use this, as it breaks the threadsafe promise of this API. "
"Instead use, :meth:`copy_format_to`."
msgstr "Returnera absolut sökväg till e-bokfilen i formatet `format`. Du bör nästan aldrig använda det, eftersom det bryter trådsäkerhetsgarantin i detta API. Använd istället, :meth:`copy_format_to`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:5
msgid ""
"Currently used only in calibredb list, the viewer, edit book, compare_format"
" to original format, open with, bulk metadata edit and the catalogs (via "
"get_data_as_dict())."
msgstr "Används för närvarande endast i calibredb-listan, visaren, redigera bok, compare_format till originalformat, öppna med, redigera metadata i grupp och katalogerna (via get_data_as_dict ())."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:9
msgid ""
"Apart from the viewer, open with and edit book, I don't believe any of the "
"others do any file write I/O with the results of this call."
msgstr "Bortsett från visaren, öppna med och redigera boken, tror jag inte någon av de andra gör någon filskrivnings-I/O med resultaten av detta anrop."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_hash:1
msgid ""
"Return the hash of the specified format for the specified book. The kind of "
"hash is backend dependent, but is usually SHA-256."
msgstr "Returnera hash för det angivna formatet för den angivna boken. Den typ av hash är algoritmberoende, men är oftast SHA-256."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:1
msgid ""
"Return the path, size and mtime for the specified format for the specified "
"book. You should not use path unless you absolutely have to, since accessing"
" it directly breaks the threadsafe guarantees of this API. Instead use the "
":meth:`copy_format_to` method."
msgstr "Returnera sökväg, storlek och mtime för det specifika formatet för den specifika boken. Du bör inte använda sökväg  annat om du absolut måste, eftersom direkt tillgång av den förstör trådsäkerhetsgarantin av denna API. Istället använd :meth:`copy_format_to` metoden."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:6
msgid ""
"If ``True`` cached values are used, otherwise a slow filesystem access is "
"done. The cache values could be out of date if access was performed to the "
"filesystem outside of this API."
msgstr "Om ``True``, används cachade värden, annars sker en långsam åtkomst till filsystemet. Cachevärdena kan vara inaktuella om åtkomst sker till filsystem utanför detta API."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:10
msgid ""
"If ``True`` The max_size field of the database is updated for this book."
msgstr "Om ``True`` kommer max_size-fältet i databasen uppdateras för denna bok."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.formats:1
msgid ""
"Return tuple of all formats for the specified book. If verify_formats is "
"True, verifies that the files exist on disk."
msgstr "Returnera tupel av alla format för den specifika boken. Om verify_formats är True verifieras att filer finns på disken."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_categories:1
msgid "Used internally to implement the Tag Browser"
msgstr "Används internt för att implementera taggbläddraren"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_custom_book_data:1
msgid ""
"Get data for name. By default returns data for all book_ids, pass in a list "
"of book ids if you only want some data. Returns a map of book_id to values. "
"If a particular value could not be decoded, uses default for it."
msgstr "Hämta data för namn. Som standard returneras data för alla book_ids, förse med en lista med bokidentifierare om du bara vill  ha några data. returnerar en översikt av book_id till värden. Om en speciellt värde inte kan identifieras, används istället standardvärde för den."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_id_map:1
msgid ""
"Return a mapping of id numbers to values for the specified field. The field "
"must be a many-one or many-many field, otherwise a ValueError is raised."
msgstr "Returnera en översik av id nummer till värden för specifika fält. Fältet måste vara en många-en eller många-många fält, annars skapas ett ValueError."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_ids_for_custom_book_data:1
msgid "Return the set of book ids for which name has data."
msgstr "Returnera en uppsättning bok-id för vilket namn har data."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_id:1
#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_ids:1
msgid "Return the item id for item_name (case-insensitive)"
msgstr "Returnera posten id för item_name (skiftlägesokänslig)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_name:1
msgid ""
"Return the item name for the item specified by item_id in the specified "
"field. See also :meth:`get_id_map`."
msgstr "Returnera postnamnet för posten som anges av item_id i specificerat fält. Se också :meth:`get_id_map`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_metadata:1
msgid ""
"Return metadata for the book identified by book_id as a "
":class:`calibre.ebooks.metadata.book.base.Metadata` object. Note that the "
"list of formats is not verified. If get_cover is True, the cover is "
"returned, either a path to temp file as mi.cover or if cover_as_data is True"
" then as mi.cover_data."
msgstr "Returnera metadata för boken identifierat av book_id som ett :class:`calibre.ebooks.metadata.book.base.Metadata` objekt. Observera att listan av format inte är verifierad. Om get_cover är True, kommer omslag att returneras, antingen som en sökväg till temporärfilen mi.cover eller om cover_as_data är Sant som mi.cover_data."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:1
msgid ""
"Return the next series index for the specified series, taking into account "
"the various preferences that control next series number generation."
msgstr "Returnera nästa serieindex för den specifika serien, med beaktning av olika inställningar som styr skapande av nästa serienummer."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:4
msgid "The series-like field (defaults to the builtin series column)"
msgstr "Det serieliknande fältet (standard är den inbyggda seriekolumnen)"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:5
msgid ""
"If True, returns a mapping of book_id to current series_index value instead."
msgstr "Om True, returneras en översikt av book_id till aktuellt serie_index-värde istället."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_proxy_metadata:1
msgid ""
"Like :meth:`get_metadata` except that it returns a ProxyMetadata object that"
" only reads values from the database on demand. This is much faster than "
"get_metadata when only a small number of fields need to be accessed from the"
" returned metadata object."
msgstr "Liksom: meth:`get_metadata` förutom att den returnerar ett ProxyMetadata-objekt som bara läser värden från databasen på förfrågan. Det är mycket snabbare än get_metadata när endast ett mindre antal fält behöver nås från returnerat metadataobjekt."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_usage_count_by_id:1
msgid ""
"Return a mapping of id to usage count for all values of the specified field,"
" which must be a many-one or many-many field."
msgstr "Returnera en översikt av id till räkningsanvändning för alla värden på det angivna fältet, som måste vara en många-en eller många-många fält."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_book:1
msgid ""
"Return True iff the database contains an entry with the same title as the "
"passed in Metadata object. The comparison is case-insensitive. See also "
":meth:`data_for_has_book`."
msgstr "Returnera True om och endast om databasen innehåller en post med samma titel som den angivna i metadataobjektet. Jämförelsen är skiftlägeskänslig. Se även :meth:`data_for_has_book`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_format:1
msgid "Return True iff the format exists on disk"
msgstr "Returnera True om och endast om formatet finns på disken"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_id:1
msgid "Return True iff the specified book_id exists in the db"
msgstr "Returnera True om och endast om specificerad bok_id finns i db"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.init:1
msgid "Initialize this cache with data from the backend."
msgstr "Initiera denna cache med data från backend."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:1
msgid ""
"Return a list of sorted book ids. If ids_to_sort is None, all book ids are "
"returned."
msgstr "Returnera en lista med sorterade bokidentifierare. Om ids_to_sort är  None, kommer alla bokidentifierare att returneras."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:4
msgid ""
"fields must be a list of 2-tuples of the form (field_name, ascending=True or"
" False). The most significant field is the first 2-tuple."
msgstr "fälten måste vara en lista med 2-tupler av formatet (field_name, ascending=True eller False). Det signifikantaste fältet är den första 2-tupeln."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.pref:1
msgid ""
"Return the value for the specified preference or the value specified as "
"``default`` if the preference is not set."
msgstr "Returnera värdet för det specifika förvalet eller värdet angivet som ``standard`` om ingen inställning är angivet."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.read_backup:1
msgid ""
"Return the OPF metadata backup for the book as a bytestring or None if no "
"such backup exists."
msgstr "Returnera OPF-metadata-säkerhetskopian för boken som en bytestring eller None om ingen sådan säkerhetskopia finns."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_books:1
msgid ""
"Remove the books specified by the book_ids from the database and delete "
"their format files. If ``permanent`` is False, then the format files are "
"placed in the recycle bin."
msgstr "Ta bort böckerna angivna av book_ids från databasen och tar bort deras formatfiler. Om ``permanent`` är False, så kommer formatfiler placeras i papperskorgen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:1
msgid "Remove the specified formats from the specified books."
msgstr "Ta bort de angivna formaten från de angivna böckerna."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:3
msgid "A mapping of book_id to a list of formats to be removed from the book."
msgstr "En översikt av book_id till en lista med format som ska tas bort från boken."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:4
msgid ""
"If True, only remove the record for the format from the db, do not delete "
"the actual format file from the filesystem."
msgstr "Om True, tas bara handlingen av format från databasen, tar inte bort de aktuella filformaten från filsystemet."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_items:1
msgid ""
"Delete all items in the specified field with the specified ids. Returns the "
"set of affected book ids. ``restrict_to_book_ids`` is an optional set of "
"books ids. If specified the items will only be removed from those books."
msgstr "Ta bort alla poster i det angivna fältet med det angivna id. returnerar uppsättningen av påverkade bok-id. ``restrict_to_book_ids`` är en valfri uppsättning bok-id. Om det anges kommer posterna endast att tas bort från dessa böcker."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:1
msgid ""
"Rename items from a many-one or many-many field such as tags or series."
msgstr "Byt namn på post från många-en eller många-många fält som taggar eller serier."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:3
msgid ""
"When renaming in a series-like field also change the series_index values."
msgstr "Vid byte av namn i ett serieliknande fält ändras också värdena för series_index."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:4
msgid ""
"An optional set of book ids for which the rename is to be performed, "
"defaults to all books."
msgstr "En valfri uppsättning bok-id där namnbyte ska utföras, standard för alla böcker."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_book:1
msgid ""
"Restore the book entry in the database for a book that already exists on the"
" filesystem"
msgstr "Återställ bokposten i databasen för en bok som redan finns i filsystemet"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_original_format:1
msgid ""
"Restore the specified format from the previously saved ORIGINAL_FORMAT, if "
"any. Return True on success. The ORIGINAL_FORMAT is deleted after a "
"successful restore."
msgstr "Återställer det angivna formatet från tidigare sparat ORIGINAL_FORMAT, om något. returnerar True vid framgång. The ORIGINAL_FORMAT tas bort efter en lyckad återställning."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:1
msgid ""
"A safe read lock is a lock that does nothing if the thread already has a "
"write lock, otherwise it acquires a read lock. This is necessary to prevent "
"DowngradeLockErrors, which can happen when updating the search cache in the "
"presence of composite columns. Updating the search cache holds an exclusive "
"lock, but searching a composite column involves reading field values via "
"ProxyMetadata which tries to get a shared lock. There may be other scenarios"
" that trigger this as well."
msgstr "Ett säkert läslås är ett lås som inte gör något om tråden redan har ett skrivlås, annars får den ett läslås. Detta är nödvändigt för att förhindra DowngradeLockErrors, som kan hända vid uppdatering av sökcachen i närvaro av sammansatta kolumner. Uppdatering av sökcachen innehåller ett exklusivt lås, men sökning i en sammansatt kolumn innebär att fältvärden läses via ProxyMetadata som försöker få ett delat lås. Det kan finnas andra scenarier som utlöser detta också."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:9
msgid ""
"This property returns a new lock object on every access. This lock object is"
" not recursive (for performance) and must only be used in a with statement "
"as ``with cache.safe_read_lock:`` otherwise bad things will happen."
msgstr "Den här egenskapen returnerar ett nytt låsobjekt på varje åtkomst. Detta låsobjekt är inte rekursivt (för prestanda) och får endast användas i ett med satser som ``with cache.safe_read_lock:`` annars kommer dåliga saker att hända."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.save_original_format:1
msgid ""
"Save a copy of the specified format as ORIGINAL_FORMAT, overwriting any "
"existing ORIGINAL_FORMAT."
msgstr "Spara en kopia i det angivna formatet som ORIGINAL_FORMAT, skriver över alla befintliga ORIGINAL_FORMAT."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:1
msgid ""
"Search the database for the specified query, returning a set of matched book"
" ids."
msgstr "Sök i databasen efter den angivna frågan och returnera en uppsättning matchade bok-id."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:3
msgid ""
"A restriction that is ANDed to the specified query. Note that restrictions "
"are cached, therefore the search for a AND b will be slower than a with "
"restriction b."
msgstr "En begränsning som är ANDad med angiven förfrågan. Observera att restriktioner lagras i cache, alltså sökandet efter a AND b kommer att vara långsammare än a med restriktion b."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:6
msgid "Used internally (virtual fields such as on_device to search over)."
msgstr "Används internt (virtuella fält som on_device ska söka över)."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:8
msgid ""
"If not None, a set of book ids for which books will be searched instead of "
"searching all books."
msgstr "Om inte None, en uppsättning bok-id för vilka böcker kommer att sökas i stället för att söka i alla böcker."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_conversion_options:1
msgid "options must be a map of the form {book_id:conversion_options}"
msgstr "alternativ måste vara en översikt på formen {book_id:conversion_options}"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_cover:1
msgid ""
"Set the cover for this book. The data can be either a QImage, QPixmap, file "
"object or bytestring. It can also be None, in which case any existing cover "
"is removed."
msgstr "Ställ in omslaget för denna bok. Data kan antingen vara en QImage, QPixmap, filobjekt eller bytestring. Det kan också vara None, i vilket fall eventuellt befintligt omslag tas bort."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:1
msgid ""
"Set the values of the field specified by ``name``. Returns the set of all "
"book ids that were affected by the change."
msgstr "Ställ in värdena för fältet som anges av ``namn``. Returnerar uppsättningen av alla bok-id som påverkades av ändringen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:3
msgid "Mapping of book_ids to values that should be applied."
msgstr "Översikt av book_ids till värden som bör tillämpas."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:4
msgid ""
"If True, the case of many-one or many-many fields will be changed. For "
"example, if a  book has the tag ``tag1`` and you set the tag for another "
"book to ``Tag1`` then the both books will have the tag ``Tag1`` if "
"allow_case_change is True, otherwise they will both have the tag ``tag1``."
msgstr "Om True, i fall det rör sig om många-en eller många-många fält att ändras. Till exempel, om en bok har taggen ``tag1`` och du anger taggen för en annan bok till ``Tag1`` då kommer båda böckerna att ha taggen ``Tag1`` om allow_case_change är True, annars kommer de båda ha taggen ``tag1``."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:8
msgid "Used internally, you should never change it."
msgstr "Används internt, du bör aldrig ändra det."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:1
msgid "Set metadata for the book `id` from the `Metadata` object `mi`"
msgstr "Ställ in metadata för bokens `id` från `Metadata`-objektet `mi`"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:3
msgid ""
"Setting force_changes=True will force set_metadata to update fields even if "
"mi contains empty values. In this case, 'None' is distinguished from "
"'empty'. If mi.XXX is None, the XXX is not replaced, otherwise it is. The "
"tags, identifiers, and cover attributes are special cases. Tags and "
"identifiers cannot be set to None so they will always be replaced if "
"force_changes is true. You must ensure that mi contains the values you want "
"the book to have. Covers are always changed if a new cover is provided, but "
"are never deleted. Also note that force_changes has no effect on setting "
"title or authors."
msgstr "Inställning force_changes=True tvingar set_metadata att uppdatera fält även om mi innehåller tomma värden. I det här fallet särskiljs 'None' från 'empty'. Om mi.XXX är None, ersätts inte XXX, annars görs det. Taggar, identifierare och omslagsattribut är specialfall. Taggar och identifierare kan inte ställas in på None så de alltid ersätts om force_changes är True. Du måste se till att mi innehåller de värden du vill att boken ska ha. Omslag ändras alltid om ett nytt omslag tillhandahålls, men tas aldrig bort. Observera också att force_changes inte har någon effekt på inställning av titel eller författare."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_pref:1
msgid ""
"Set the specified preference to the specified value. See also :meth:`pref`."
msgstr "Ställ in den angivna inställningen till det angivna värdet. Se också :meth:`pref`."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:1
msgid ""
"Return the ids of all books having the tag ``tag`` that are older than the "
"specified time. tag comparison is case insensitive."
msgstr "Returnera id av alla böcker som har taggen ``tagg`` som är äldre än den angivna tiden. taggjämförelse är skiftlägesoberoende."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:4
msgid ""
"A timedelta object or None. If None, then all ids with the tag are returned."
msgstr "Ett tidsdeltaobjekt eller None. Om None returneras alla id med taggen."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:7
msgid ""
"If not None the list of matches will be restricted to books that have this "
"tag"
msgstr "Om inte None listan av träffar kommer begränsas till böcker som har denna tagg"

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:10
msgid ""
"A list of authors. If not None the list of matches will be restricted to "
"books that have these authors (case insensitive)."
msgstr "En lista med författare. Om inte None listan av träffar kommer begränsas till böcker som har dessa författare (skiftlägesokänslig)."

#: ../../__w/calibre/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.user_categories_for_books:1
msgid ""
"Return the user categories for the specified books. proxy_metadata_map is "
"optional and is useful for a performance boost, in contexts where a "
"ProxyMetadata object for the books already exists. It should be a mapping of"
" book_ids to their corresponding ProxyMetadata objects."
msgstr "Returnera användarkategorier för de angivna böckerna. proxy_metadata_map är valfritt och är användbar för en prestandaökning, i sammanhang där ett ProxyMetadata-objekt för böckerna redan finns. Det bör vara en korsreferens av book_ids till deras motsvarande ProxyMetadata-objekt."
