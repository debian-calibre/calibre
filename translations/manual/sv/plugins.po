# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2020
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2016-2017
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2018-2020
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2018
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2017
# Merarom <merarom@yahoo.es>, 2014-2017,2019
# Sofie Sundberg <filaes@gmail.com>, 2018
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 05:07+0000\n"
"PO-Revision-Date: 2020-10-31 02:00+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Swedish (http://www.transifex.com/calibre/calibre/language/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:4
msgid "API documentation for plugins"
msgstr "API-dokumentation för insticksmoduler"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:9
msgid ""
"Defines various abstract base classes that can be subclassed to create "
"powerful plugins. The useful classes are:"
msgstr "Definiera diverse abstrakta grundklasser som kan vara underklasser för att skapa kraftfulla insticksmoduler. Dessa användbara klasser är:"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:19
msgid "Plugin"
msgstr "Insticksmoduler"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:28
msgid "FileTypePlugin"
msgstr "FileTypePlugin"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.FileTypePlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataReaderPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.MetadataWriterPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.CatalogPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.ebooks.metadata.sources.base.Source:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.InputFormatPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.interface.DevicePlugin:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.InterfaceActionBase:1
#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.PreferencesPlugin:1
msgid "Bases: :class:`calibre.customize.Plugin`"
msgstr "Bas: :class:`calibre.customize.Plugin`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:39
msgid "Metadata plugins"
msgstr "Metadatainsticksmodul"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:54
msgid "Catalog plugins"
msgstr "Katalog insticksmodul"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:64
msgid "Metadata download plugins"
msgstr " Insticksmoduler för metadatahämtning"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:76
msgid "Conversion plugins"
msgstr "Konvertering insticksmodul"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.description:1
msgid ""
"str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str"
msgstr "str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.customize.conversion.OutputFormatPlugin.description:4
msgid ""
"Create a new string object from the given object. If encoding or errors is "
"specified, then the object must expose a data buffer that will be decoded "
"using the given encoding and error handler. Otherwise, returns the result of"
" object.__str__() (if defined) or repr(object). encoding defaults to "
"sys.getdefaultencoding(). errors defaults to 'strict'."
msgstr "Skapa ett nytt strängobjekt från det givna objektet. Om kodning eller fel anges måste objektet exponera en databuffert som kommer att avkodas med den givna kodningen och felhanteraren. Annars återges resultatet av object.__str__() ((om definierat)) eller repr(object). kodning är som standard sys.getdefaultencoding(). fel är som standard 'strict'."

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:91
msgid "Device drivers"
msgstr "Enhetsdrivrutiner"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:95
msgid ""
"The base class for all device drivers is :class:`DevicePlugin`. However, if "
"your device exposes itself as a USBMS drive to the operating system, you "
"should use the USBMS class instead as it implements all the logic needed to "
"support these kinds of devices."
msgstr "Basklass för alla drivrutiner är :class:`DevicePlugin`. Men om din enhet exponerar sig som en USBMS-enhet till operativsystemet, bör du använda USBMS-klassen istället eftersom den genomför all logik som behövs för att stöda dessa typer av enheter."

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.interface.BookList:1
msgid "Bases: :class:`list`"
msgstr "Bas: :class:`list`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:109
msgid "USB Mass Storage based devices"
msgstr "USB-masslagringsbaserade enheter"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:111
msgid ""
"The base class for such devices is "
":class:`calibre.devices.usbms.driver.USBMS`. This class in turn inherits "
"some of its functionality from its bases, documented below. A typical basic "
"USBMS based driver looks like this:"
msgstr "Basklass för sådan enhet är :class:`calibre.devices.usbms.driver.USBMS`. Denna klass ärver i sin tur en del av dess funktioner från sina baser, dokumenterad nedan. En typisk grund USBMS baserad drivrutin ser ut så här:"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.device.Device:1
msgid ""
"Bases: :class:`calibre.devices.usbms.deviceconfig.DeviceConfig`, "
":class:`calibre.devices.interface.DevicePlugin`"
msgstr "Bas: :class:`calibre.devices.usbms.deviceconfig.DeviceConfig`, :class:`calibre.devices.interface.DevicePlugin`"

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.devices.usbms.driver.USBMS:1
msgid ""
"Bases: :class:`calibre.devices.usbms.cli.CLI`, "
":class:`calibre.devices.usbms.device.Device`"
msgstr "Bas: :class:`calibre.devices.usbms.cli.CLI`, :class:`calibre.devices.usbms.device.Device`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:155
msgid "User Interface Actions"
msgstr "Användargränssnittsåtgärder"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:157
msgid ""
"If you are adding your own plugin in a ZIP file, you should subclass both "
"InterfaceActionBase and InterfaceAction. The :meth:`load_actual_plugin` "
"method of your InterfaceActionBase subclass must return an instantiated "
"object of your InterfaceBase subclass."
msgstr "Om du lägger till din egen insticksmodul i en ZIP-fil, bör du underklassa både InterfaceActionBase och InterfaceAction. :meth:`load_actual_plugin`-metoden för din InterfaceActionBase-underklass måste återge ett exemplifierat objekt för din InterfaceBase underklass."

#: ../../home/runner/work/calibre/calibre/manual/docstring of
#: calibre.gui2.actions.InterfaceAction:1
msgid "Bases: :class:`PyQt5.QtCore.QObject`"
msgstr "Bas: :class:`PyQt5.QtCore.QObject`"

#: ../../home/runner/work/calibre/calibre/manual/plugins.rst:172
msgid "Preferences plugins"
msgstr "Inställningar insticksmodul"
