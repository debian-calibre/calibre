# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2016-2017
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2018-2020
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2017-2018
# Jonatan Nyberg <jonatan.nyberg.karl@gmail.com>, 2017
# Merarom <merarom@yahoo.es>, 2014-2017
# Sebastian Rasmussen <sebras@gmail.com>, 2018
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-06 13:34+0000\n"
"PO-Revision-Date: 2021-01-06 08:43+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Swedish (http://www.transifex.com/calibre/calibre/language/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../__w/calibre/calibre/manual/template_lang.rst:4
msgid "The calibre template language"
msgstr "mallspråket för calibre"

#: ../../__w/calibre/calibre/manual/template_lang.rst:6
msgid ""
"The calibre template language is used in various places. It is used to "
"control the folder structure and file name when saving files from the "
"calibre library to the disk or e-book reader. It is also used to define "
"\"virtual\" columns that contain data from other columns and so on."
msgstr "Mallspråket för calibre används på olika ställen. Den används för att anpassa mappstruktur och filnamn när du sparar filer från calibre-biblioteket till hårddisken eller e-bokläsenheten. Det används också för att definiera \"virtuella\" kolumner som innehåller data från andra kolumner och så vidare."

#: ../../__w/calibre/calibre/manual/template_lang.rst:9
msgid ""
"The basic template language is simple but has  powerful advanced features. A"
" template consists of text and names in curly brackets that are then "
"replaced by the corresponding metadata from the book being processed. For "
"example, the default template used for saving books to device in calibre "
"is::"
msgstr "Det grundläggande mallspråket är enkelt men har kraftfulla avancerade funktioner. En mall består av text och namn i klamrar som sedan ersätts av motsvarande metadata från boken som bearbetas. Till exempel är standardmallen som används för att spara böcker till enheter i calibre::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:15
#: ../../__w/calibre/calibre/manual/template_lang.rst:23
msgid "For the book \"The Foundation\" by \"Isaac Asimov\" it will become::"
msgstr "För boken \"The Foundation\" av \"Isaac Asimov\" kommer det bli::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:19
msgid ""
"The slashes are text, which is put into the template where it appears. For "
"example, if your template is::"
msgstr "Snedstrecken är texter, vilka sätts in i mallen var de dyker upp. Till exempel om den mall är::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:27
msgid ""
"You can use all the metadata fields available in calibre in a template, "
"including any custom columns you have created, by using its 'lookup name'. "
"To find the lookup name for a column (field) hover your mouse over the "
"column header. Names for custom columns (columns you have created yourself) "
"always have a # as the first character. For series type custom columns there"
" is always an additional field named ``#seriesname_index`` that is the "
"series index for that series. So if you have a custom series field named "
"``#myseries``, there will also be a field named ``#myseries_index``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:33
msgid "In addition to the column based fields, you also can use::"
msgstr "Förutom de kolumnbaserade fälten, kan du också använda::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:38
msgid ""
"If a book does not have a particular piece of metadata, the field in the "
"template is replaced by the empty string for that book. Consider, for "
"example::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:43
msgid "If a book has a series, the template will produce::"
msgstr "Om en bok har en serie, kommer mallen att producera::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:47
msgid "and if a book does not have a series::"
msgstr "och om en bok inte har en serie::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:51
msgid ""
"(calibre automatically removes multiple slashes and leading or trailing "
"spaces)."
msgstr "(calibre tar automatiskt flera snedstreck och inledande eller avslutande mellanslag)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:54
msgid "Advanced formatting"
msgstr "Advancerad formatering"

#: ../../__w/calibre/calibre/manual/template_lang.rst:56
msgid ""
"You can do more than just simple substitution with the templates. You can "
"also conditionally include text and control how the substituted data is "
"formatted."
msgstr "Du kan göra mer än bara enkel substitution med mallarna. Du kan också villkora inkludera text och anpassa hur den substituerade data formateras."

#: ../../__w/calibre/calibre/manual/template_lang.rst:59
msgid ""
"First, conditionally including text. There are cases where you might want to"
" have text appear in the output only if a field is not empty. A common case "
"is ``series`` and ``series_index``, where you want either nothing or the two"
" values with a hyphen between them. calibre handles this case using a "
"special field syntax."
msgstr "Först, villkorad inkluderad text. Det finns fall där du kanske vill ha text som visas i utmatning endast om ett fältet inte är tomt. Ett vanligt fall är ``series`` och ``series_index``, var du vill antingen ingenting eller de två värdena med ett bindestreck mellan dem. calibre hanterar det här fallet med hjälp av en specialfältsyntax."

#: ../../__w/calibre/calibre/manual/template_lang.rst:63
msgid "For example, assume you want to use the template::"
msgstr "Anta till exempel att du vill använda mallen::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:67
msgid ""
"If the book has no series, the answer will be ``- - title``. Most people "
"would rather the result be simply ``title``, without the hyphens. To do "
"this, use the extended syntax ``{field:|prefix_text|suffix_text}``. When you"
" use this syntax, if field has the value SERIES then the result will be "
"``prefix_textSERIESsuffix_text``. If field has no value, then the result "
"will be the empty string (nothing); the prefix and suffix are ignored. The "
"prefix and suffix can contain blanks. **Do not use subtemplates (`{ ... }`) "
"or functions (see below) as the prefix or the suffix.**"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:73
msgid ""
"Using this syntax, we can solve the above series problem with the template::"
msgstr "Med hjälp av denna syntax, kan vi lösa ovanstående serien problem med mallen::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:77
msgid ""
"The hyphens will be included only if the book has a series index, which it "
"will have only if it has a series."
msgstr "De bindestreck inkluderas endast om boken har ett serieindex, vilket den kommer att få endast om den har en serie."

#: ../../__w/calibre/calibre/manual/template_lang.rst:79
msgid ""
"Notes: you must include the : character if you want to use a prefix or a "
"suffix. You must either use no \\| characters or both of them; using one, as"
" in ``{field:| - }``, is not allowed. It is OK not to provide any text for "
"one side or the other, such as in ``{series:|| - }``. Using ``{title:||}`` "
"is the same as using ``{title}``."
msgstr "Observera: Du måste inkludera tecknet : om du vill använda ett prefix eller ett suffix. Du måste antingen använda inga \\|-tecken eller båda; med hjälp av någon, som i ``{field:| - }``, är inte tillåtet. Det är OK att inte tillhandahålla någon text för den ena eller den andra, såsom i ``{series:|| - }``. Att använda ``{title:||}`` är detsamma som att använda ``{title}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:83
msgid ""
"Second: formatting. Suppose you wanted to ensure that the series_index is "
"always formatted as three digits with leading zeros. This would do the "
"trick::"
msgstr "Andra: formatering. Anta att du vill se till att series_index alltid är formaterad som tre siffror med inledande nollor. Detta bör göra susen::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:88
msgid "If instead of leading zeros you want leading spaces, use::"
msgstr "Om istället för inledande noll vill ha inledande blankslag, använd::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:92
msgid "For trailing zeros, use::"
msgstr "För efterföljande nollor, använd::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:96
msgid ""
"If you use series indices with sub values (e.g., 1.1), you might want to "
"ensure that the decimal points line up. For example, you might want the "
"indices 1 and 2.5 to appear as 01.00 and 02.50 so that they will sort "
"correctly. To do this, use::"
msgstr "Om du använder indexserien med undervärden (t.ex. 1.1), kanske du vill se till att decimaler kommer i följd. Till exempel kanske du vill att index 1 och 2,5 framstå som 01.00 och 02.50, så att de kommer att sorteras rätt. För att göra detta använd::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:101
msgid "If you want only the first two letters of the data, use::"
msgstr "Om du vill bara ha de två första bokstäverna i uppgifterna, använd:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:105
msgid ""
"The calibre template language comes from Python and for more details on the "
"syntax of these advanced formatting operations, look at the `Python "
"documentation <https://docs.python.org/library/string.html#format-string-"
"syntax>`."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:110
msgid "Using templates in custom columns"
msgstr "Använd mallar i anpassade kolumner"

#: ../../__w/calibre/calibre/manual/template_lang.rst:112
msgid ""
"Sometimes you want to display metadata in the book list that calibre does "
"not normally display, or to display data in a way different from how calibre"
" normally does. For example, you might want to display the ISBN, a field "
"that calibre does not display. You can use custom columns for this by "
"creating a column with the type 'column built from other columns' (hereafter"
" called composite columns), and entering a template. Result: calibre will "
"display a column showing the result of evaluating that template. To display "
"the ISBN, create the column and enter ``{identifiers:select(isbn)}`` into "
"the template box. To display a column containing the values of two series "
"custom columns separated by a comma, use ``{#series1:||,}{#series2}``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:119
msgid "Composite columns can use any template option, including formatting."
msgstr "Sammansatta kolumner kan använda godtyckligt mallalternativ, även formatering."

#: ../../__w/calibre/calibre/manual/template_lang.rst:121
msgid ""
"You cannot edit the data displayed in a composite column. If you edit a "
"composite column, for example by double-clicking it, you will open the "
"template for editing, not the underlying data. Editing the template on the "
"GUI is a quick way of testing and changing composite columns."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:125
msgid "Using functions in templates - Single Function Mode"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:127
msgid ""
"Suppose you want to display the value of a field in upper case, when that "
"field is normally in title case. You can do this (and many more things) "
"using the functions available for templates. For example, to display the "
"title in upper case, use ``{title:uppercase()}``. To display it in title "
"case, use ``{title:titlecase()}``."
msgstr "Anta att du vill visa värdet på ett fält i versaler, då detta fält är normalt i rubrikformat. Du kan göra detta (och många fler saker) med hjälp av de funktioner som finns för mallar. Till exempel för att visa titeln med versaler, använd ``{title:uppercase()}``. För att via det i rubrikformat använd ``{title:titlecase()}``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:131
msgid ""
"Functions appear in the format part, going after the ``:`` and before the "
"first ``|`` or the closing ``}``. If you have both a format and a function "
"reference, the function comes after another ``:``. Functions must always end"
" with ``()``. Some functions take extra values (arguments), and these go "
"inside the ``()``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:135
msgid ""
"Functions are always applied before format specifications. See further down "
"for an example of using both a format and a function, where this order is "
"demonstrated."
msgstr "Funktioner alltid tillämpas innan formatspecifikationer. Se längre ner för ett exempel på att använda både ett format och en funktion, där denna ordning demonstreras."

#: ../../__w/calibre/calibre/manual/template_lang.rst:138
msgid ""
"The syntax for using functions is ``{field:function(arguments)}``, or "
"``{field:function(arguments)|prefix|suffix}``. Arguments are separated by "
"commas. Commas inside arguments must be preceded by a backslash ( ``\\`` ). "
"The last (or only) argument cannot contain a closing parenthesis ( ``)`` ). "
"Functions return the value of the field used in the template, suitably "
"modified."
msgstr "Syntaxen för att använda funktioner är ``{fält:funktion(argument)}``, eller ``{fält:funktion(argument)|prefix|suffix}``. Argument separeras med kommatecken. Komma inuti argument måste föregås av ett bakåtstreck ( ``\\`` ). Det sista (eller enda) argumentet får inte innehålla en avslutande parentes ( ``)`` ). Funktioner återger värdet för fältet som används i mallen, lämpligt modifierat."

#: ../../__w/calibre/calibre/manual/template_lang.rst:142
msgid ""
"Important: If you have programming experience, please note that the syntax "
"in this mode (single function) is not what you might expect. Strings are not"
" quoted. Spaces are significant. All arguments must be constants; there is "
"no sub-evaluation. **Do not use subtemplates (`{ ... }`) as function "
"arguments.** Instead, use :ref:`Template Program Mode <template_mode>` and "
":ref:`General Program Mode <general_mode>`."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:147
msgid ""
"Many functions use regular expressions. In all cases, regular expression "
"matching is case-insensitive."
msgstr "Många funktioner använder reguljära uttryck. I samtliga fall är matchning med reguljära uttryck skiftlägeskänsliga."

#: ../../__w/calibre/calibre/manual/template_lang.rst:149
msgid ""
"The functions available are listed below. Note that the definitive "
"documentation for functions is available in the section :ref:`Function "
"reference <template_functions_reference>`:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:152
msgid "``lowercase()``   -- return value of the field in lower case."
msgstr "``lowercase()``   -- återger värde av fältet som gemener."

#: ../../__w/calibre/calibre/manual/template_lang.rst:153
msgid "``uppercase()``   -- return the value of the field in upper case."
msgstr "``uppercase()``   -- återger värde av fältet som versaler."

#: ../../__w/calibre/calibre/manual/template_lang.rst:154
msgid "``titlecase()``   -- return the value of the field in title case."
msgstr "``titlecase()``   -- återge värde av fältet som rubrikformat."

#: ../../__w/calibre/calibre/manual/template_lang.rst:155
msgid ""
"``capitalize()``  -- return the value with the first letter upper case and "
"the rest lower case."
msgstr "``capitalize()``  -- återge värde av fältet med första bokstav versal och övriga gemener."

#: ../../__w/calibre/calibre/manual/template_lang.rst:156
msgid ""
"``contains(pattern, text if match, text if not match)`` -- checks if field "
"contains matches for the regular expression `pattern`. Returns `text if "
"match` if matches are found, otherwise it returns `text if no match`."
msgstr "``contains(pattern, text if match, text if not match)`` -- kollar om fältet innehåller träffar för det reguljära uttrycket `pattern`. Återger `text vid träff` om träff hittas annars återges `text om ingen träff`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:158
msgid ""
"``count(separator)`` -- interprets the value as a list of items separated by"
" `separator`, returning the number of items in the list. Most lists use a "
"comma as the separator, but authors uses an ampersand. Examples: "
"`{tags:count(,)}`, `{authors:count(&)}`"
msgstr "``count(separator)`` -- tolkar värde som en lista med poster åtskilda med `separator`, återger antalet poster i listan. De flesta listor använder kommatecken som avskiljare men författarna använder ett et-tecken. Exempel: `{tags:count(,)}`, `{authors:count(&)}`"

#: ../../__w/calibre/calibre/manual/template_lang.rst:160
msgid ""
"``format_number(template)`` -- interprets the field as a number and format "
"that number using a Python formatting template such as \"{0:5.2f}\" or "
"\"{0:,d}\" or \"${0:5,.2f}\". The field_name part of the template must be a "
"0 (zero) (the \"{0:\" in the above examples). You can leave off the leading "
"\"{0:\" and trailing \"}\" if the template contains only a format. See the "
"template language and Python documentation for more examples. Returns the "
"empty string if formatting fails."
msgstr "``format_number(mall)`` -- tolkar fältet som ett tal och formaterar det numret med en Python formateringsmall som \"{0:5.2f}\" eller \"{0:,d}\" eller \"${0:5,.2f}\". Fältnamnsdelen (field_name) av mallen måste vara 0 (noll) (\"{0:\" i ovanstående exempel). Du kan lämna den ledande \"{0:\" och efterföljande \"}\" om mallen bara innehåller ett format. Se mallspråket och Python-dokumentationen för fler exempel. Återger den tomma strängen om formateringen misslyckas."

#: ../../__w/calibre/calibre/manual/template_lang.rst:164
msgid ""
"``human_readable()`` -- expects the value to be a number and returns a "
"string representing that number in KB, MB, GB, etc."
msgstr "``human_readable()`` -- förväntar sig att värdet är ett nummer och återger en sträng som representerar det numret i kB, MB, GB, o.s.v."

#: ../../__w/calibre/calibre/manual/template_lang.rst:165
msgid ""
"``ifempty(text)`` -- if the field is not empty, return the value of the "
"field. Otherwise return `text`."
msgstr "``ifempty(text)`` -- Om fältet inte är tomt, återge värdet av fältet. annars återge `text`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:166
msgid ""
"``in_list(separator, pattern, found_val, ..., not_found_val)`` -- interpret "
"the field as a list of items separated by `separator`, evaluating the "
"`pattern` against each value in the list. If the `pattern` matches a value, "
"return `found_val`, otherwise return `not_found_val`. The `pattern` and "
"`found_value` can be repeated as many times as desired, permitting returning"
" different values depending on the search. The patterns are checked in "
"order. The first match is returned."
msgstr "``in_list(separator, pattern, found_val, ..., not_found_val)`` -- behandla fältet som en lista med post åtskilda av `separator`, utvärdera mönstret mot varje värde i listan. Om `mönstret` matchar ett värde, återges `found_val`, annars återges `not_found_val`. `Mönstret` och `found_value` kan upprepas så många gånger som önskat, vilket möjliggör att olika värden återkommer beroende på sökningen. Mönstren kontrolleras i ordning. Den första matchen återges."

#: ../../__w/calibre/calibre/manual/template_lang.rst:170
msgid ""
"``language_codes(lang_strings)`` -- return the language codes for the "
"strings passed in `lang_strings`. The strings must be in the language of the"
" current locale. `Lang_strings` is a comma-separated list."
msgstr "``language_codes(lang_strings)`` -- återger språkkoder för strängar som finns i `lang_strings`. Strängarna ska vara på samma språk som den aktuella platsen. `Lang_strings` är en kommaseparerad lista."

#: ../../__w/calibre/calibre/manual/template_lang.rst:172
msgid ""
"``language_strings(lang_codes, localize)`` -- return the strings for the "
"language codes passed in `lang_codes`. If `localize` is zero, return the "
"strings in English. If localize is not zero, return the strings in the "
"language of the current locale. `Lang_codes` is a comma-separated list."
msgstr "``language_strings (lang_codes, lokalisera)`` -- återger strängarna för de koder språk passerade i `lang_codes`. Om `localize` är noll, återger strängarna på engelska. Om lokalisera inte är noll, återger strängarna på språket på den aktuella platsen. `Lang_codes` är en kommaseparerad lista."

#: ../../__w/calibre/calibre/manual/template_lang.rst:175
msgid ""
"``list_item(index, separator)`` -- interpret the field as a list of items "
"separated by `separator`, returning the `index`th item. The first item is "
"number zero. The last item can be returned using `list_item(-1,separator)`. "
"If the item is not in the list, then the empty value is returned. The "
"separator has the same meaning as in the `count` function."
msgstr "``list_item(index, separator)`` -- tolkar fältet som en lista med poster åtskilda med `separator`, återge` index`-posten. Den första elementet är siffran noll. Den sista punkten kan återges med `list_item (-1, separator)`. Om elementet inte finns i listan, då återges det tomma värdet. Avskiljaren har samma betydelse som i `count` funktionen."

#: ../../__w/calibre/calibre/manual/template_lang.rst:178
msgid ""
"``lookup(pattern, field, pattern, field, ..., else_field)`` -- like switch, "
"except the arguments are field (metadata) names, not text. The value of the "
"appropriate field will be fetched and used. Note that because composite "
"columns are fields, you can use this function in one composite field to use "
"the value of some other composite field. This is extremely useful when "
"constructing variable save paths (more later)."
msgstr "``lookup(pattern, field, pattern, field, ..., else_field)`` -- som switch-funktionen, förutom att argumenten är fältet (metadata) namn, inte text. Värdet på lämpligt fält att hämtas och används. Observera att eftersom sammansatta kolumnerna är fält, kan du använda den här funktionen i en sammansatt fält för att använda värdet av något annat sammansatt fält. Detta är mycket användbart när man konstruerar variabel spara sökvägar (mer senare)."

#: ../../__w/calibre/calibre/manual/template_lang.rst:181
msgid ""
"``rating_to_stars(use_half_stars)`` -- Returns the rating as string of star "
"characters. The source value must be a number between 0 and 5. Set "
"use_half_stars to 1 if you want half star characters for custom ratings "
"columns that are not integers, for example 2.5."
msgstr "``rating_to_stars (use_half_stars)`` -- Återger betygsättningen som sträng av stjärntecken. Källvärdet måste vara ett nummer mellan 0 och 5. Ställ in use_half_stars till 1 om du vill ha halvstjärntecken för anpassade betygskolumner som inte är heltal, till exempel 2.5."

#: ../../__w/calibre/calibre/manual/template_lang.rst:183
msgid ""
"``re(pattern, replacement)`` -- return the field after applying the regular "
"expression. All instances of `pattern` are replaced with `replacement`. As "
"in all of calibre, these are Python-compatible regular expressions."
msgstr "``re(pattern, replacement)`` -- återger fältet efter applicering av reguljära uttryck. Alla förekomster av `pattern` ersätts med `replacement`. Som i alla calibre, är dessa Python-kompatibla reguljära uttryck."

#: ../../__w/calibre/calibre/manual/template_lang.rst:185
msgid ""
"``select(key)`` -- interpret the field as a comma-separated list of items, "
"with the items being of the form \"id:value\". Find the pair with the id "
"equal to key, and return the corresponding value. This function is "
"particularly useful for extracting a value such as an ISBN from the set of "
"identifiers for a book."
msgstr "``select(key)`` -- tolka fältet som en kommaseparerad lista över poster, med posterna som formen \"id:värde\". Hitta paret med id som är lika med nyckeln och återge motsvarande värde. Denna funktion är särskilt användbar för att extrahera ett värde som en ISBN från uppsättningen identifierare för en bok."

#: ../../__w/calibre/calibre/manual/template_lang.rst:188
msgid ""
"``shorten(left chars, middle text, right chars)`` -- Return a shortened "
"version of the field, consisting of `left chars` characters from the "
"beginning of the field, followed by `middle text`, followed by `right chars`"
" characters from the end of the string. `Left chars` and `right chars` must "
"be integers. For example, assume the title of the book is `Ancient English "
"Laws in the Times of Ivanhoe`, and you want it to fit in a space of at most "
"15 characters. If you use ``{title:shorten(9,-,5)}``, the result will be "
"`Ancient E-nhoe`. If the field's length is less than ``left chars`` + "
"``right chars`` + the length of ``middle text``, then the field will be used"
" intact. For example, the title `The Dome` would not be changed."
msgstr "``shorten(left chars, middle text, right chars)`` -- Återge en förkortad version av fältet, som består av `left chars` tecken från början av fältet, följt av `middle text`, följt av `höger chars` tecken från slutet av strängen. `Left chars` och `right chars` måste vara heltal. Antag till exempel titeln på boken är `Ancient English Laws in the Times of Ivanhoe`, och du vill att den ska passa in i ett utrymme av högst 15 tecken. Om du använder ``{title:shorten(9, -, 5)}``, kommer resultatet att bli `Ancient E-nhoe`. Om fältets längd är mindre än ``left chars`` + ``right chars`` + längden på ``middle text``, då fältet kommer att användas intakt. Till exempel den i rubriken `The Dome` skulle inte ändras."

#: ../../__w/calibre/calibre/manual/template_lang.rst:194
msgid ""
"``str_in_list(separator, string, found_val, ..., not_found_val)`` -- "
"interpret the field as a list of items separated by `separator`, comparing "
"the `string` against each value in the list. If the `string` matches a value"
" (ignoring case), return `found_val`, otherwise return `not_found_val`. If "
"the string contains separators, then it is also treated as a list and each "
"value is checked. The `string` and `found_value` can be repeated as many "
"times as desired, permitting returning different values depending on the "
"search. The strings are checked in order. The first match is returned."
msgstr "``str_in_list(separator, string, found_val, ...,not_found_val)`` -- behandlar fälten som en lista med post åtskilda av `separator`, jämför `string` mot varje värde i listan. Om `string` matchar ett värde (ignorerar versaler), återges `found_val`, annars återges `not_found_val`. Om strängen innehåller avskiljare, då behandlas det också som en lista och varje värde kontrolleras. `string` och `found_value` kan upprepas så många gånger som önskat, vilket möjliggör att olika värden återges beroende på sökningen. Strängarna kontrolleras i ordning. Den första träffen återges."

#: ../../__w/calibre/calibre/manual/template_lang.rst:199
msgid ""
"``subitems(start_index, end_index)`` -- This function is used to break apart"
" lists of tag-like hierarchical items such as genres. It interprets the "
"field as a comma-separated list of tag-like items, where each item is a "
"period-separated list. Returns a new list made by first finding all the "
"period-separated tag-like items, then for each such item extracting the "
"components from `start_index` to `end_index`, then combining the results "
"back together. The first component in a period-separated list has an index "
"of zero. If an index is negative, then it counts from the end of the list. "
"As a special case, an end_index of zero is assumed to be the length of the "
"list. Examples::"
msgstr "``subitems(start_index, end_index)`` -- Denna funktion används för att bryta isär listor över tagglika hierarkiska post såsom genrer. Det tolkar fältet som en kommaseparerad lista över taggliknande post, där varje post är en period separerad lista. Återger en ny lista görs genom att först hitta alla period separerad tagg liknande föremål, därefter för varje sådan post extrahera komponenterna från `start_index` till` end_index`, sedan kombinera resultaten tillbaka tillsammans. Den första komponenten i en period separerad lista har ett index på noll. Om ett index är negativ, så det räknas från slutet av listan. Som ett special fall är en END_INDEX av noll antas vara längden av listan. Exempel::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:214
msgid ""
"``sublist(start_index, end_index, separator)`` -- interpret the field as a "
"list of items separated by `separator`, returning a new list made from the "
"items from `start_index` to `end_index`. The first item is number zero. If "
"an index is negative, then it counts from the end of the list. As a special "
"case, an end_index of zero is assumed to be the length of the list. Examples"
" assuming that the tags column (which is comma-separated) contains \"A, B "
",C\"::"
msgstr "``sublist(start_index, end_index, separator)`` -- tolkar värden som en lista med post åtskilda med `separator`, återger en ny lista gjord av posterna från `start_index` till `end_index`. Den första punkten är siffran noll. Om ett index är negativ, så det räknas från slutet av listan. Som ett specialfall är en END_INDEX av noll antas vara längden av listan. Exempel om man antar att taggkolumnen (som är kommaseparerade) innehåller \"A, B ,C\"::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:223
msgid ""
"``swap_around_articles(separator)`` -- returns the val with articles moved "
"to the end. The value can be a list, in which case each member of the list "
"is processed. If the value is a list then you must provide the list value "
"separator. If no separator is provided then the value is treated as being a "
"single value, not a list."
msgstr "``swap_around_articles(separator)`` -- återger valet med artiklar flyttade till slutet. Värdet kan vara en lista, i vilket fall varje medlem av listan behandlas. Om värdet är en lista måste du ange listvärdesavskiljare. Om ingen avskiljare tillhandahålls behandlas värdet som ett enda värde, inte en lista."

#: ../../__w/calibre/calibre/manual/template_lang.rst:226
msgid ""
"``swap_around_comma()`` -- given a field with a value of the form ``B, A``, "
"return ``A B``. This is most useful for converting names in LN, FN format to"
" FN LN. If there is no comma, the function returns val unchanged."
msgstr "``swap_around_comma()`` -- ges ett fält med ett värde av formen ``B, A``, återges ``AB``. Detta är mest användbart för att konvertera namnen i EN, FN format till FN EN. Om det inte finns någon kommatecken återges funktionen val oförändrad."

#: ../../__w/calibre/calibre/manual/template_lang.rst:228
msgid ""
"``switch(pattern, value, pattern, value, ..., else_value)`` -- for each "
"``pattern, value`` pair, checks if the field matches the regular expression "
"``pattern`` and if so, returns that ``value``. If no ``pattern`` matches, "
"then ``else_value`` is returned. You can have as many ``pattern, value`` "
"pairs as you want."
msgstr "``switch(pattern, value, pattern, value, ..., else_value)`` -- för varje ``pattern, value`` par, kontrollerar om fältet matchar det reguljära uttrycket ``pattern`` och i så fall återger att ``value``. Om inget ``pattern`` matchar, då återges ``else_value``. Du kan ha så många ``pattern, value`` par som du vill."

#: ../../__w/calibre/calibre/manual/template_lang.rst:231
msgid ""
"``test(text if not empty, text if empty)`` -- return `text if not empty` if "
"the field is not empty, otherwise return `text if empty`."
msgstr "``test(text if not empty, text if empty)`` -- återger `text om inte empty` om fältet inte är tomt, annars återges `text om empty`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:232
msgid ""
"``transliterate()`` -- Returns a string in a latin alphabet formed by "
"approximating the sound of the words in the source field. For example, if "
"the source field is ``Фёдор Миха́йлович Достоевский`` the function returns "
"``Fiodor Mikhailovich Dostoievskii``.'"
msgstr "``transliterate()`` -- Återger en sträng i ett latinskt alfabet som bildas genom en tillnärmning av ljudet av orden i källfältet. Till exempel om källfältet är ``Фёдор Миха́йлович Достоевский`` återger funktionen ``Fiodor Mikhailovich Dostoievskii``.'"

#: ../../__w/calibre/calibre/manual/template_lang.rst:235
msgid ""
"Now, what about using functions and formatting in the same field? Suppose "
"you have an integer custom column called ``#myint`` that you want to see "
"with leading zeros, as in ``003``. To do this, you would use a format of "
"``0>3s``. However, by default, if a number (integer or float) equals zero "
"then the field produces the empty value, so zero values will produce "
"nothing, not ``000``. If you really want to see ``000`` values, then you use"
" both the format string and the ``ifempty`` function to change the empty "
"value back to a zero. The field reference would be::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:242
msgid ""
"Note that you can use the prefix and suffix as well. If you want the number "
"to appear as ``[003]`` or ``[000]``, then use the field::"
msgstr "Observera att du kan använda prefix och suffix också. Om du vill att numret ska visas som ``[003]`` eller ``[000]``, använd då fältet::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:249
msgid "More complex functions in templates - Template Program Mode"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:251
msgid ""
"Template Program Mode differs from Single Function Mode in that it permits "
"writing template expressions that refer to other metadata fields, use nested"
" functions, modify values, and do arithmetic. It is a reasonably complete "
"programming language."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:254
msgid ""
"You can use the functions documented above in Template Program Mode. See "
"below for details."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:256
msgid ""
"Beginning with an example, assume you want your template to show the series "
"for a book if it has one, otherwise show the value of a custom field #genre."
" You cannot do this in the basic template language because you cannot make "
"reference to another metadata field within a template expression. In "
"Template Program Mode, you can. The following expression works::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:262
msgid "The example shows several things:"
msgstr "Exemplet visar flera saker:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:264
msgid ""
"Template Program Mode is used if the expression begins with ``:'`` and ends "
"with ``'``. Anything else is assumed to be in single function mode."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:265
msgid ""
"the variable ``$`` stands for the field the expression is operating upon, "
"``#series`` in this case."
msgstr "variabeln ``$`` står för fältet uttrycket fungerar på, ``#serier`` i detta fall."

#: ../../__w/calibre/calibre/manual/template_lang.rst:266
msgid ""
"functions must be given all their arguments. There is no default value. For "
"example, the standard built-in functions must be given an additional initial"
" parameter indicating the source field, which is a significant difference "
"from single-function mode."
msgstr "funktioner måste få alla deras argument. Det finns inget standardvärde. Till exempel måste de inbyggda standard funktionerna ges en extra initial parameter som indikerar källfältet, vilket är en avsevärd skillnad från enkelfunktionsläge."

#: ../../__w/calibre/calibre/manual/template_lang.rst:268
msgid "white space is ignored and can be used anywhere within the expression."
msgstr "mellanslag ignoreras och kan användas var som helst i uttrycket."

#: ../../__w/calibre/calibre/manual/template_lang.rst:269
msgid ""
"constant strings are enclosed in matching quotes, either ``'`` or ``\"``."
msgstr "konstanta strängar är inneslutna i matchande citat, antingen ``'`` eller ``\"` `."

#: ../../__w/calibre/calibre/manual/template_lang.rst:271
msgid ""
"The syntax of the language is shown by the following grammar. For a "
"discussion of 'compare','if_expression', and 'template_call' see "
":ref:`General Program Mode <general_mode>`:::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:286
msgid "Comments are lines with a '#' character at the beginning of the line."
msgstr "Kommentarer är rader med ett \"#\" tecknet i början av raden."

#: ../../__w/calibre/calibre/manual/template_lang.rst:288
msgid ""
"An ``expression`` without errors always has a value. The value of an "
"``expression_list`` is the value of the last expression in the list. As "
"such, the value of the program (expression_list)::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:293
msgid "is 3."
msgstr "är 3."

#: ../../__w/calibre/calibre/manual/template_lang.rst:295
msgid ""
"Another example of a complex but rather silly program might help make things"
" clearer::"
msgstr "Ett annat exempel på ett komplext men ganska dumt program kan bidra till att göra saker och ting tydligare::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:306
msgid "This program does the following:"
msgstr "Detta program gör följande:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:308
msgid ""
"specify that the field being looked at is series_index. The variable ``$`` "
"is set to its value."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:309
msgid ""
"calls the ``substr`` function, which takes 3 parameters ``(str, start, "
"end)``. It returns a string formed by extracting the start through end "
"characters from string, zero-based (the first character is character zero). "
"In this case the string will be computed by the ``strcat`` function, the "
"start is 0, and the end is 6. In this case it will return the first 6 "
"characters of the string returned by ``strcat``, which must be evaluated "
"before substr can return."
msgstr "anrop av ``substr`` funktionen, som tar 3 parametrar ``(str, start, slut) ``. Den återger en sträng som bildas genom att extrahera start genom sluttecken från strängen, nollbaserad (det första tecknet är tecknet noll). I detta fall strängen kommer att beräknas av ``strcat`` funktionen, är början 0, och slutet är 6. I detta fall den ger de 6 första tecknen i strängen som återges av ``strcat``, vilket måste utvärderas innan substr kan återvända."

#: ../../__w/calibre/calibre/manual/template_lang.rst:313
msgid ""
"calls the ``strcat`` (string concatenation) function. Strcat accepts 1 or "
"more arguments, and returns a string formed by concatenating all the values."
" In this case there are three arguments. The first parameter is the value in"
" ``$``, which here is the value of ``series_index``. The second paremeter is"
" the constant string ``'->'``. The third parameter is the value returned by "
"the ``cmp`` function, which must be fully evaluated before ``strcat`` can "
"return."
msgstr "anropar ``strcat`` (strängsammanfogning) funktionen. Strcat accepterar 1 eller flera argument, och återger en sträng som bildas genom att sammanfoga alla värden. I detta fall finns det tre argument. Den första parametern är värdet i ``$``, vilket här är värdet på ``series_index``. Den andra parametern är en konstantsträng `` '->' ``. Den tredje parametern är värdet som återges av ``cmp`` funktionen, som ska vara fullt utvärderad innan ``strcat`` kan återge."

#: ../../__w/calibre/calibre/manual/template_lang.rst:317
msgid ""
"The ``cmp`` function takes 5 arguments ``(x, y, lt, eq, gt)``. It compares "
"``x`` and ``y`` and returns the third argument ``lt`` if ``x < y``, the "
"fourth argument ``eq`` if ``x == y``, and the fifth argument ``gt`` if ``x >"
" y``. As with all functions, all of the parameters can be statements. In "
"this case the first parameter (the value for ``x``) is the result of "
"dividing the ``series_index`` by 2. The second parameter ``y`` is the "
"constant ``1``. The third parameter ``lt`` is a statement (more later). The "
"fourth parameter ``eq`` is the constant string ``'eq'``. The fifth parameter"
" is the constant string ``'gt'``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:322
msgid ""
"The third parameter (the one for ``lt``) is a statement, or a sequence of "
"expressions. Remember that a statement (a sequence of semicolon-separated "
"expressions) is also an expression, returning the value of the last "
"expression in the list. In this case, the program first assigns the value "
"``1`` to a local variable ``c``, then returns a substring made by extracting"
" the ``c``'th character to the end. Since ``c`` always contains the constant"
" ``1``, the substring will return the second through ``end``'th characters, "
"or ``'t123'``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:326
msgid ""
"Once the statement providing the value to the third parameter is executed, "
"``cmp`` can return a value. At that point, ``strcat` can return a value, "
"then ``substr`` can return a value. The program then terminates."
msgstr "När påståendet som ger värdet till den tredje parametern utförs, ``cmp`` kan ett värde återges. Vid den tidpunkten, kan ``strcat`  återge ett värde, då ``substr`` kan återge ett värde. Programmet avslutas därefter."

#: ../../__w/calibre/calibre/manual/template_lang.rst:329
msgid "For various values of series_index, the program returns:"
msgstr "Vid olika värden för series_index återger programmet:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:331
msgid "series_index == undefined, result = ``prefix ->t123 suffix``"
msgstr "series_index == odefinerad, result = ``prefix ->t123 suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:332
msgid "series_index == 0.5, result = ``prefix 0.50-> suffix``"
msgstr "series_index == 0.5, result = ``prefix 0.50-> suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:333
msgid "series_index == 1, result = ``prefix 1->t12 suffix``"
msgstr "series_index == 1, result = ``prefix 1->t12 suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:334
msgid "series_index == 2, result = ``prefix 2->eq suffix``"
msgstr "series_index == 2, result = ``prefix 2->eq suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:335
msgid "series_index == 3, result = ``prefix 3->gt suffix``"
msgstr "series_index == 3, result = ``prefix 3->gt suffix``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:337
msgid ""
"**All the functions listed under single-function mode can be used in program"
" mode**. To do so, you must supply the value that the function is to act "
"upon as the first parameter in addition to the parameters documented above. "
"For example, in program mode the parameters of the `test` function are "
"``test(x, text_if_not_empty, text_if_empty)``. The `x` parameter, which is "
"the value to be tested, will almost always be a variable or a function call,"
" often `field()`."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:342
msgid ""
"The following functions are available in addition to those described in "
"single-function mode. Remember from the example above that the single-"
"function mode functions require an additional first parameter specifying the"
" field to operate on. With the exception of the ``id`` parameter of assign, "
"all parameters can be statements (sequences of expressions). Note that the "
"definitive documentation for functions is available in the section "
":ref:`Function reference <template_functions_reference>`:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:347
msgid ""
"``and(value, value, ...)`` -- returns the string \"1\" if all values are not"
" empty, otherwise returns the empty string. This function works well with "
"test or first_non_empty. You can have as many values as you want."
msgstr "``and(value, value, ...)`` -- återger strängen \"1\" om alla värdena inte är tomma, annars återges tomma strängen. Den här funktionen fungerar bra med testet eller first_non_empty. Du kan ha så många värden som du önskar."

#: ../../__w/calibre/calibre/manual/template_lang.rst:349
msgid ""
"``add(x, y)`` -- returns x + y. Throws an exception if either x or y are not"
" numbers."
msgstr "``add(x, y)`` -- återger x + y. Ger ett undantag om någon av x eller y inte är tal."

#: ../../__w/calibre/calibre/manual/template_lang.rst:350
msgid ""
"``assign(id, val)`` -- assigns val to id, then returns val. id must be an "
"identifier, not an expression"
msgstr "``assign(id, val)`` -- tilldelar val till id, återger sedan val. id måste vara en identifierare, inte ett uttryck"

#: ../../__w/calibre/calibre/manual/template_lang.rst:351
msgid ""
"``approximate_formats()`` -- return a comma-separated list of formats that "
"at one point were associated with the book. There is no guarantee that the "
"list is correct, although it probably is. This function can be called in "
"Template Program Mode using the template ``{:'approximate_formats()'}``. "
"Note that format names are always uppercase, as in EPUB."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:354
msgid ""
"``author_links(val_separator, pair_separator)`` -- returns a string "
"containing a list of authors and that author's link values in the form "
"``author1 val_separator author1link pair_separator author2 val_separator "
"author2link`` etc. An author is separated from its link value by the "
"``val_separator`` string with no added spaces. ``author:linkvalue`` pairs "
"are separated by the ``pair_separator`` string argument with no added "
"spaces. It is up to you to choose separator strings that do not occur in "
"author names or links. An author is included even if the author link is "
"empty."
msgstr "``author_links(val_separator, pair_separator)`` -- återger en sträng som innehåller en lista med författare och att författarens länkvärden i form ``author1 val_separator author1link pair_separator author2 val_separator author2link`` o.s.v. En författare är separerad från dess länk värde av ``val_separator`` sträng utan tillagda mellanslag. ``author:linkvalue`` paren skiljs åt av ``pair_separator`` strängargument utan tillagda mellanslag. Det är upp till dig att välja avskiljare som inte förekommer i författarnamn eller länkar. En författare ingår, även om författaren länken är tom."

#: ../../__w/calibre/calibre/manual/template_lang.rst:359
msgid ""
"``author_sorts(val_separator)`` -- returns a string containing a list of "
"author's sort values for the authors of the book. The sort is the one in the"
" author metadata (different from the author_sort in books). The returned "
"list has the form author sort 1 ``val_separator`` author sort 2 etc. The "
"author sort values in this list are in the same order as the authors of the "
"book. If you want spaces around ``val_separator`` then include them in the "
"separator string"
msgstr "``author_sorts(val_separator)`` -- återger en sträng med en lista med författarens sorteringsvärden för författarna till boken. Sorteringen är  författarens metadata (som skiljer sig från den author_sort i böcker). Den återgivna listan har formen författaren sortera 1 ``val_separator`` författare sort 2 o.s.v. Författaren sortera värdena i denna lista är i samma ordning som författarna till boken. Om du vill ha mellanslag runt ``val_separator`` så inkludera dem i avskiljarsträngen"

#: ../../__w/calibre/calibre/manual/template_lang.rst:363
msgid ""
"``booksize()`` -- returns the value of the calibre 'size' field. Returns '' "
"if there are no formats."
msgstr "``booksize()`` -- återger värdet för den calibre 'storlek' fält. Återger '' om det inte finns några format."

#: ../../__w/calibre/calibre/manual/template_lang.rst:364
msgid ""
"``check_yes_no(field_name, is_undefined, is_false, is_true)`` -- checks the "
"value of the yes/no field named by the lookup key ``field_name`` for a value"
" specified by the parameters, returning \"yes\" if a match is found, "
"otherwise returning an empty string. Set the parameter ``is_undefined``, "
"``is_false``, or ``is_true`` to 1 (the number) to check that condition, "
"otherwise set it to 0. Example::"
msgstr "``check_yes_no(field_name, is_undefined, is_false, is_true)`` -- kontrollerar värdet på fältet ja/nej som heter genom sökningsnyckelens ``field_name`` för ett värde som anges av parametrarna, återger \"ja\" om en matchning hittas, annars återges en tom sträng. Ställ in parametern ``is_undefined``, ``is_false`` eller ``is_true`` till 1 (numret) för att kontrollera det villkoret, annars ställ in på 0. Exempel::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:370
msgid ""
"returns \"yes\" if the yes/no field ``\"#bool\"`` is either undefined "
"(neither True nor False) or True. More than one of ``is_undefined``, "
"``is_false``, or ``is_true`` can be set to 1.  This function is usually used"
" by the ``test()`` or ``is_empty()`` functions."
msgstr "återger \"ja\" om fältet ja/nej ``\"#bool\"`` antingen är odefinierad (varken sann eller falsk) eller sann. Mer än en av ``is_undefined``, ``is_false``, eller ``is_true`` kan ställas in som 1. Den här funktionen används vanligtvis av funktionerna ``test()`` eller ``is_empty()``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:372
msgid ""
"``ceiling(x)`` -- returns the smallest integer greater than or equal to x. "
"Throws an exception if x is not a number."
msgstr "``ceiling(x)`` -- återger det minsta heltalet som är större än eller lika med x. Kaster ett undantag om x inte är ett tal."

#: ../../__w/calibre/calibre/manual/template_lang.rst:373
msgid ""
"``cmp(x, y, lt, eq, gt)`` -- compares x and y after converting both to "
"numbers. Returns ``lt`` if x < y. Returns ``eq`` if x == y. Otherwise "
"returns ``gt``."
msgstr "``cmp(x, y, lt, eq, gt)`` -- jämför x och y efter konverterat både till siffror. Återger ``lt`` om x < y. Återger ``eq`` om x == y. Annars återges ``gt``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:375
msgid ""
"``connected_device_name(storage_location)`` -- if a device is connected then"
" return the device name, otherwise return the empty string. Each storage "
"location on a device can have a different name. The location names are "
"'main', 'carda' and 'cardb'. This function works only in the GUI."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:378
msgid ""
"``connected_device_uuid(storage_location)`` -- if a device is connected then"
" return the device uuid (unique id), otherwise return the empty string. Each"
" storage location on a device has a different uuid. The location names are "
"``'main'``, ``'carda'`` and ``'cardb'``. This function works only in the "
"GUI."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:381
msgid ""
"``current_library_name()`` -- return the last name on the path to the "
"current calibre library. This function can be called in Template Program "
"Mode using the template ``{:'current_library_name()'}``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:383
msgid ""
"``current_library_path()`` -- return the path to the current calibre "
"library. This function can be called in Template Program Mode using the "
"template ``{:'current_library_path()'}``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:385
msgid ""
"``days_between(date1, date2)`` -- return the number of days between "
"``date1`` and ``date2``. The number is positive if ``date1`` is greater than"
" ``date2``, otherwise negative. If either ``date1`` or ``date2`` are not "
"dates, the function returns the empty string."
msgstr "``days_between(date1, date2)`` -- återge antalet dagar mellan ``date1`` och ``date2``. Numret är positivt om ``date1`` är större än ``date2``, annars negativt. Om någon ``date1`` eller ``date2`` inte är datum, återger funktionen tomma strängen."

#: ../../__w/calibre/calibre/manual/template_lang.rst:387
msgid ""
"``divide(x, y)`` -- returns ``x / y``. Throws an exception if either ``x`` "
"or ``y`` are not numbers."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:388
msgid ""
"``eval(string)`` -- evaluates the string as a program, passing the local "
"variables (those ``assign`` ed to). This permits using the template "
"processor to construct complex results from local variables. Because the `{`"
" and `}` characters are special, you must use `[[` for the `{` character and"
" `]]` for the '}' character; they are converted automatically. Note also "
"that prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in "
"the argument to this function when using Template Program Mode."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:392
msgid "``field(name)`` -- returns the metadata field named by ``name``."
msgstr "``field(name)`` -- återger metatdatafältet med nämnt efter ``name``."

#: ../../__w/calibre/calibre/manual/template_lang.rst:393
msgid ""
"``finish_formatting(val, fmt, prefix, suffix)`` -- apply the format, prefix,"
" and suffix to a value in the same way as done in a template like "
"``{series_index:05.2f| - |- }``. This function is provided to ease "
"conversion of complex single-function- or template-program-mode templates to"
" :ref:`General Program Mode <general_mode>` (see below) to take advantage of"
" GPM template compilation. For example, the following program produces the "
"same output as the above template::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:404
msgid ""
"Another example: for the template "
"``{series:re(([^\\s])[^\\s]+(\\s|$),\\1)}{series_index:0>2s| - | - "
"}{title}`` use::"
msgstr "Ytterligare exempel: för mallen ``{series:re(([^\\s])[^\\s]+(\\s|$),\\1)}{series_index:0>2s| - | - }{title}`` använd::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:413
msgid ""
"``first_matching_cmp(val, cmp1, result1, cmp2, r2, ..., else_result)`` -- "
"compares ``val < cmpN`` in sequence, returning resultN for the first "
"comparison that succeeds. Returns else_result if no comparison succeeds. "
"Example::"
msgstr "``first_matching_cmp(val, cmp1, result1, cmp2, r2, ..., else_result)`` -- jämför ``val < cmpN`` i sekvens, återger resultN för första jämförelsen som lyckas. Återger else_result om ingen jämförelse lyckas. Exempel::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:419
msgid ""
"returns \"large\". The same example with a first value of 16 returns "
"\"giant\"."
msgstr "återger \"large\". Samma exempel med ett första värde på 16 återger \"giant\"."

#: ../../__w/calibre/calibre/manual/template_lang.rst:421
msgid ""
"``first_non_empty(value, value, ...)`` -- returns the first value that is "
"not empty. If all values are empty, then the empty value is returned. You "
"can have as many values as you want."
msgstr "``first_non_empty (värde, värde, ...)`` - återger det första värdet som inte är tomt. Om alla värden är tomma, då återges det tomma värdet. Du kan ha så många värden som du vill."

#: ../../__w/calibre/calibre/manual/template_lang.rst:423
msgid ""
"``floor(x)`` -- returns the largest integer less than or equal to x. Throws "
"an exception if x is not a number."
msgstr "``floor(x)`` -- återger det största heltalet mindre än eller lika med x. Kaster ett undantag om x inte är ett tal."

#: ../../__w/calibre/calibre/manual/template_lang.rst:424
msgid ""
"``format_date(val, format_string)`` -- format the value, which must be a "
"date field, using the format_string, returning a string. The formatting "
"codes are::"
msgstr "``format_date(val, format_string)`` -- formatera värdet, vilket måste vara ett datumfält med hjälp av format_string, återsänder en sträng. Formateringskoder är::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:449
msgid ""
"You might get unexpected results if the date you are formatting contains "
"localized month names, which can happen if you changed the format tweaks to "
"contain ``MMMM``. In this case, instead of using something like "
"``{pubdate:format_date(yyyy)}``, write the template using Template Program "
"Mode as in ``{:'format_date(raw_field('pubdate'),'yyyy')'}``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:452
msgid ""
"``formats_modtimes(format_string)`` -- return a comma-separated list of "
"colon-separated items representing modification times for the formats of a "
"book. The format_string parameter specifies how the date is to be formatted."
" See the `format_date()` function for details. You can use the select "
"function to get the mod time for a specific format. Note that format names "
"are always uppercase, as in EPUB."
msgstr "``formats_modtimes(format_string)`` -- återger en kommaseparerad lista över kolonseparerade post som representerar modifieringstider för formaten i en bok. Den format_string parametern anger hur datumet ska formateras. Se `format_date()`-funktionen för detaljer. Du kan använda funktionen för val för att få modifieringstider för ett visst format. Observera att formatnamn är alltid versaler, som i EPUB."

#: ../../__w/calibre/calibre/manual/template_lang.rst:455
msgid ""
"``formats_paths()`` -- return a comma-separated list of colon-separated "
"items representing full path to the formats of a book. You can use the "
"select function to get the path for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_paths()`` -- återger en kommaseparerad lista över kolonseparerade post som representerar fullständig sökväg till format i en bok. Du kan använda select-funktionen för att få sökvägen för ett visst format. Observera att formatnamn är alltid versaler, som i EPUB."

#: ../../__w/calibre/calibre/manual/template_lang.rst:457
msgid ""
"``formats_sizes()`` -- return a comma-separated list of colon-separated "
"items representing sizes in bytes of the formats of a book. You can use the "
"select function to get the size for a specific format. Note that format "
"names are always uppercase, as in EPUB."
msgstr "``formats_sizes()`` -- återger en kommaseparerad lista över kolonseparerade poster som representerar storlekar i oktetter av formaten i en bok. Du kan använda select-funktionen för att få storleken för ett visst format. Observera att formatnamn är alltid versaler, som i EPUB."

#: ../../__w/calibre/calibre/manual/template_lang.rst:459
msgid ""
"``fractional_part(x)`` -- returns the value after the decimal point. For "
"example, ``fractional_part(3.14)`` returns ``0.14``. Throws an exception if "
"``x`` is not a number."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:461
msgid ""
"``has_cover()`` -- return ``Yes`` if the book has a cover, otherwise return "
"the empty string."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:462
msgid ""
"``not(value)`` -- returns the string \"1\" if the value is empty, otherwise "
"returns the empty string. This function works well with test or "
"first_non_empty."
msgstr "``not(value)``  -- återger strängen \"1\" om värdet är tomt, annars återges tomma strängen. Denna funktion fungerar bra med test eller first_non_empty."

#: ../../__w/calibre/calibre/manual/template_lang.rst:464
msgid ""
"``list_difference(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item found in `list2`, using a case-insensitive "
"comparison. The items in `list1` and `list2` are separated by separator, as "
"are the items in the returned list."
msgstr "``list_difference(list1, list2, separator)`` -- återge en lista genom att ta bort list1 alla post som finns i \"list2\" med en skiftlägeskänslig jämförelse. Posterna i \"list1\" och \"list2\" skiljs åt av avskiljare, liksom posterna i den återgivna listan."

#: ../../__w/calibre/calibre/manual/template_lang.rst:466
msgid ""
"``list_equals(list1, sep1, list2, sep2, yes_val, no_val)`` -- return "
"`yes_val` if `list1` and `list2` contain the same items, otherwise return "
"`no_val`. The items are determined by splitting each list using the "
"appropriate separator character (`sep1` or `sep2`). The order of items in "
"the lists is not relevant. The comparison is case-insensitive."
msgstr "``list_equals(list1, sep1, list2, sep2, yes_val, no_val)`` -- återger yes_val om list1 och list2 innehåller samma poster, annars återges no_val. Föremålen bestäms genom att dela upp varje lista med lämpliga avgränsare (sep1 eller sep2). Ordningen på posterna i listorna inte är relevant. Jämförelsen är inte skiftlägeskänslig."

#: ../../__w/calibre/calibre/manual/template_lang.rst:469
msgid ""
"``list_intersection(list1, list2, separator)`` -- return a list made by "
"removing from `list1` any item not found in `list2`, using a case-"
"insensitive comparison. The items in `list1` and `list2` are separated by "
"separator, as are the items in the returned list."
msgstr "``list_intersection(list1, list2, separator)`` -- återge en lista genom att ta bort list1 alla post som finns i \"list2\" med en skiftlägeskänslig jämförelse. Posterna i \"list1\" och \"list2\" skiljs åt av avskiljare, liksom posterna i den återgivna listan."

#: ../../__w/calibre/calibre/manual/template_lang.rst:471
msgid ""
"``list_re(src_list, separator, include_re, opt_replace)`` -- Construct a "
"list by first separating `src_list` into items using the `separator` "
"character. For each item in the list, check if it matches `include_re`. If "
"it does, then add it to the list to be returned. If `opt_replace` is not the"
" empty string, then apply the replacement before adding the item to the "
"returned list."
msgstr "``list_re(src_list, separator, include_re, opt_replace)`` -- Konstruera en lista genom att först separera `src_list` i poster med tecknet `separator`. För varje post i listan, kolla om det matchar `include_re`. Om den gör det, lägg till den i listan som ska återges. Om `opt_replace` inte är den tomma strängen, så tillämpa bytet innan du lägger till posten till den återgivna listan."

#: ../../__w/calibre/calibre/manual/template_lang.rst:474
msgid ""
"``list_re_group(src_list, separator, include_re, search_re, "
"template_for_group_1, for_group_2, ...)`` -- Like list_re except "
"replacements are not optional. It uses re_group(item, search_re, template "
"...) when doing the replacements."
msgstr "``list_re_group(src_list, separator, include_re, search_re, template_for_group_1, for_group_2, ...)`` -- Liksom list_re utom ersättare inte är valbar. Den använder re_group (item, search_re, mall ...) när man gör ersättning."

#: ../../__w/calibre/calibre/manual/template_lang.rst:476
msgid ""
"``list_sort(list, direction, separator)`` -- return list sorted using a "
"case-insensitive sort. If ``direction`` is zero, ``list`` is sorted "
"ascending, otherwise descending. The list items are separated by separator, "
"as are the items in the returned list."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:478
msgid ""
"``list_union(list1, list2, separator)`` -- return a list made by merging the"
" items in ``list1`` and ``list2``, removing duplicate items using a case-"
"insensitive comparison. If items differ in case, the one in ``list1`` is "
"used. The items in ``list1`` and ``list2`` are separated by ``separator``, "
"as are the items in the returned list."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:481
msgid ""
"``mod(x)`` -- returns the remainder of ``x / y``, where ``x``, ``y``, and "
"the result are integers. Throws an exception if either ``x`` or ``y`` is not"
" a number."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:483
msgid ""
"``multiply(x, y)`` -- returns x * y. Throws an exception if either x or y "
"are not numbers."
msgstr "``multiply(x, y)`` -- återger x * y. Ger ett undantag om någon x eller y inte är tal."

#: ../../__w/calibre/calibre/manual/template_lang.rst:484
msgid ""
"``ondevice()`` -- return the string \"Yes\" if ``ondevice`` is set, "
"otherwise return the empty string"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:485
msgid ""
"``or(value, value, ...)`` -- returns the string ``\"1\"`` if any value is "
"not empty, otherwise returns the empty string. This function works well with"
" test or `first_non_empty`. You can have as many values as you want."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:487
msgid ""
"``print(a, b, ...)`` -- prints the arguments to standard output. Unless you "
"start calibre from the command line (``calibre-debug -g``), the output will "
"go to a black hole."
msgstr "``print(a, b, ...)`` -- skriver ut argument till standard ut. Såvida du börjar calibre från kommandoraden (`` calibre-debug -g``), kommer utmatning att gå till ett svart hål."

#: ../../__w/calibre/calibre/manual/template_lang.rst:489
msgid ""
"``raw_field(name)`` -- returns the metadata field named by name without "
"applying any formatting."
msgstr "``raw_field(name)`` -- återger metadatafält nämnt efter name utan att tillämpa någon formatering."

#: ../../__w/calibre/calibre/manual/template_lang.rst:490
msgid ""
"``raw_list(name, separator)`` -- returns the metadata list named by name "
"without applying any formatting or sorting and with items separated by "
"separator."
msgstr "``raw_list(name, separator)`` -- återger listan metadata med namnet name utan att tillämpa någon formatering eller sortering och med poster åtskilda av avskiljare."

#: ../../__w/calibre/calibre/manual/template_lang.rst:491
msgid ""
"``re_group(val, pattern, template_for_group_1, for_group_2, ...)`` --  "
"return a string made by applying the regular expression pattern to the val "
"and replacing each matched instance with the string computed by replacing "
"each matched group by the value returned by the corresponding template. The "
"original matched value for the group is available as ``$``. In Template "
"Program Mode, like for the template and the eval functions, you use [[ for {"
" and ]] for }. The following example in Template Program Mode looks for "
"series with more than one word and uppercases the first word::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:498
msgid ""
"``round(x)`` -- returns the nearest integer to x. Throws an exception if x "
"is not a number."
msgstr "``round(x)`` -- återger närmaste heltal till x. Kaster ett undantag om x inte är ett tal."

#: ../../__w/calibre/calibre/manual/template_lang.rst:499
msgid "``series_sort()`` -- returns the series sort value."
msgstr "``series_sort()`` -- återger seriens sorterade värden."

#: ../../__w/calibre/calibre/manual/template_lang.rst:500
msgid ""
"``'split(list_val, sep, id_prefix)`` -- splits the ``list_val`` into "
"separate values using ``sep``, then assigns the values to variables named "
"``id_prefix_N`` where N is the position of the value in the list. The first "
"item has position 0 (zero). The function returns the last element in the "
"list. Example::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:506
msgid "is equivalent to::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:512
msgid ""
"``strcat(a, b, ...)`` -- can take any number of arguments. Returns a string "
"formed by concatenating all the arguments."
msgstr "``strcat(a, b, ...)`` -- kan ta valfritt antal argument. Återger en sträng som bildas genom att sammanfoga alla argumenten."

#: ../../__w/calibre/calibre/manual/template_lang.rst:513
msgid ""
"``strcat_max(max, string1, prefix2, string2, ...)`` -- Returns a string "
"formed by concatenating the arguments. The returned value is initialized to "
"``string1``. ``prefix, string`` pairs are added to the end of the value as "
"long as the resulting string length is less than ``max``. Returns "
"``string1`` even if ``string1`` is longer than ``max``. You can pass as many"
" ``prefix, string`` pairs as you wish."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:516
msgid ""
"``strcmp(x, y, lt, eq, gt)`` -- does a case-insensitive comparison ``x`` and"
" ``y`` as strings. Returns ``lt`` if ``x < y``. Returns ``eq`` if ``x == "
"y``. Otherwise returns ``gt``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:518
msgid ""
"``strlen(a)`` -- Returns the length of the string passed as the argument."
msgstr "``strlen(a)`` -- Återger längden på strängen som skickas som argument."

#: ../../__w/calibre/calibre/manual/template_lang.rst:519
msgid ""
"``substr(str, start, end)`` -- returns the ``start``'th through the "
"``end``'th characters of ``str``. The first character in ``str`` is the "
"zero'th character. If end is negative, then it indicates that many "
"characters counting from the right. If end is zero, then it indicates the "
"last character. For example, ``substr('12345', 1, 0)`` returns ``'2345'``, "
"and ``substr('12345', 1, -1)`` returns ``'234'``."
msgstr "``substr(str, start, end)`` -- återger ``start`` genom ``end`` tecknen i ``str``. Det första tecknet i ``str`` är nolltecken. Om slutet är negativt, då det tyder på att många tecken räknat från höger. Om slutet är noll, då det tyder på det sista tecknet. Till exempel ``substr(\"12345\", 1, 0) `` återger ``'2345'`` och ``substr('12345', 1, -1)`` återger ``'234'`` ."

#: ../../__w/calibre/calibre/manual/template_lang.rst:522
msgid ""
"``subtract(x, y)`` -- returns ``x - y``. Throws an exception if either ``x``"
" or ``y`` are not numbers."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:523
msgid ""
"``today()`` -- return a date string for today. This value is designed for "
"use in `format_date` or `days_between`, but can be manipulated like any "
"other string. The date is in ISO format."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:525
msgid ""
"``template(x)`` -- evaluates ``x`` as a template. The evaluation is done in "
"its own context, meaning that variables are not shared between the caller "
"and the template evaluation. Because the `{` and `}` characters are special,"
" you must use `[[` for the `{` character and `]]` for the '}' character; "
"they are converted automatically. For example, ``template('[[title_sort]]') "
"will evaluate the template ``{title_sort}`` and return its value. Note also "
"that prefixes and suffixes (the `|prefix|suffix` syntax) cannot be used in "
"the argument to this function when using Template Program Mode."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:534
msgid "Using General Program Mode"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:536
msgid ""
"For more complicated template programs it is often easier to avoid template "
"syntax (all the `{` and `}` characters), instead writing a more classic-"
"looking program. You can do this by beginning the template with `program:`. "
"The template program is compiled and executed. No template processing (e.g.,"
" formatting, prefixes, suffixes) is done. The special variable `$` is not "
"set."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:540
msgid ""
"One advantage of `program:` mode is that braces are no longer special. For "
"example, it is not necessary to use `[[` and `]]` when using the "
"`template()` function. Another advantage is readability."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:543
msgid ""
"Template Program Mode and General Program Mode support classic **relational "
"(comparison) operators**: ``==``, ``!=``, ``<``, ``<=``, ``>``, ``>=``. The "
"operators return '1' if they evaluate to True, otherwise ''. They do case-"
"insensitive string comparison using lexical order. Examples:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:547
msgid ""
"``program: field('series') == 'foo'`` returns '1' if the book's series is "
"'foo'."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:548
msgid ""
"``program: if field('series') != 'foo' then 'bar' else 'mumble' fi`` returns"
" 'bar' if the book's series is not 'foo', else 'mumble'."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:549
msgid ""
"``program: if or(field('series') == 'foo', field('series') == '1632') then "
"'yes' else 'no' fi`` returns 'yes' if series is either 'foo' or '1632', "
"otherwise 'no'."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:551
msgid ""
"``program: if '11' > '2' then 'yes' else 'no' fi`` returns 'no' because it "
"is doing a lexical comparison. If you want numeric comparison instead of "
"lexical comparison, use the operators ``==#``, ``!=#``, ``<#``, ``<=#``, "
"``>#``, ``>=#``. In this case the left and right values are set to zero if "
"they are undefined or the empty string. If they are not numbers then an "
"error is raised."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:555
msgid ""
"Both General and Template Program Modes support **``if`` expressions** with "
"the following syntax::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:563
msgid ""
"The elif and else parts are optional. The words ``if``, ``then``, ``elif``, "
"``else``, and ``fi`` are reserved; you cannot use them as identifier names. "
"You can put newlines and white space wherever they make sense. "
"<<expression>> is one template language expression; semicolons are not "
"allowed. <<expression_list>> is a semicolon-separated sequence of template "
"language expressions, including nested ifs. Examples:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:567
msgid "``program: if field('series') then 'yes' else 'no' fi``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:568
msgid ""
"``program: if field('series') then a = 'yes'; b = 'no' else a = 'no'; "
"b='yes' fi; strcat(a, '-', b)``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:569
msgid "Nested ``if`` example::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:584
msgid ""
"An ``if`` produces a value like any other language expression. This means "
"that all the following are valid:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:586
msgid "``program: if field('series') then 'foo' else 'bar' fi``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:587
msgid "``program: if field('series') then a = 'foo' else a = 'bar' fi; a``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:588
msgid "``program: a = if field('series') then 'foo' else 'bar' fi; a``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:589
msgid ""
"``program: a = field(if field('series') then 'series' else 'title' fi); a``"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:591
msgid ""
"The template language supports **``for`` expressions** with the following "
"syntax::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:597
msgid ""
"The expression must evaluate to either a metadata field lookup key, for "
"example ``tags`` or ``#genre``, or a comma-separated list of values. If the "
"result is a valid lookup name then the field's value is fetched, otherwise "
"the list is broken into its individual values. Each resulting value in the "
"list is assigned to the variable ``id`` then the ``expression_list`` is "
"evaluated."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:602
msgid ""
"Example: This template removes the first hierarchical name for each value in"
" Genre (``#genre``), constructing a list with the new names::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:613
msgid ""
"If the original Genre is ``History.Military, Science Fiction.Alternate "
"History, ReadMe`` then the template returns ``Military, Alternate History, "
"ReadMe``. You could use this template in calibre's :guilabel:`Edit metadata "
"in bulk -> Search & replace` with :guilabel:`Search for` set to ``template``"
" to strip off the first level of the hierarchy and assign the resulting "
"value to Genre."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:618
msgid ""
"Note: the last line in the template, ``new_tags``, isn't necessary in this "
"case because ``for`` returns the value of the last ``expression`` in the "
"``expression list``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:622
msgid "Stored General Program Mode Templates"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:624
msgid ""
"General Program Mode supports saving templates and calling those templates "
"from another template. You save templates using "
":guilabel:`Preferences->Advanced->Template functions`. More information is "
"provided in that dialog. You call a template the same way you call a "
"function, passing positional arguments if desired. An argument can be any "
"expression. Examples of calling a template, assuming the stored template is "
"named ``foo``:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:629
msgid "``foo()`` -- call the template passing no arguments."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:630
msgid ""
"``foo(a, b)`` call the template passing the values of the two variables "
"``a`` and ``b``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:631
msgid ""
"``foo(if field('series') then field('series_index') else 0 fi)`` -- if the "
"book has a ``series`` then pass the ``series_index``, otherwise pass the "
"value ``0``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:633
msgid ""
"In the stored template you retrieve the arguments passed in the call using "
"the ``arguments`` function. It both declares and initializes local "
"variables, effectively parameters. The variables are positional; they get "
"the value of the value given in the call in the same position. If the "
"corresponding parameter is not provided in the call then ``arguments`` "
"assigns that variable the provided default value. If there is no default "
"value then the variable is set to the empty string. For example, the "
"following ``arguments`` function declares 2 variables, ``key``, "
"``alternate``::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:641
msgid "Examples, again assuming the stored template is named ``foo``:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:643
msgid ""
"``foo('#myseries')`` -- argument ``key`` will have the value ``myseries`` "
"and the argument ``alternate`` will have the value ``series``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:644
msgid ""
"``foo('series', '#genre')`` the variable ``key`` is assigned the value "
"``series`` and the variable ``alternate`` is assigned the value ``#genre``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:645
msgid ""
"``foo()`` -- the variable ``key`` is assigned the empty string and the "
"variable ``alternate`` is assigned the value ``#genre``."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:647
msgid ""
"An easy way to test stored templates is using the ``Template tester`` "
"dialog. Give it a keyboard shortcut in "
":guilabel:`Preferences->Advanced->Keyboard shortcuts->Template tester`. "
"Giving the ``Stored templates`` dialog a shortcut will help switching more "
"rapidly between the tester and editing the stored template's source code."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:652
msgid "Providing additional information to templates"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:654
msgid ""
"A developer can choose to pass additional information to the template "
"processor, such as application-specific book metadata or information about "
"what the processor is being asked to do. A template can access this "
"information and use it during the evaluation."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:658
msgid "**Developer: how to pass additional information**"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:660
msgid ""
"The additional information is a python dictionary containing pairs "
"``variable_name: variable_value`` where the values should be strings. The "
"template can access the dict, creating template local variables named "
"``variable_name`` containing the value ``variable_value``. The user cannot "
"change the name so it is best to use names that won't collide with other "
"template local variables, for example by prefixing the name with an "
"underscore."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:665
msgid ""
"This dict is passed to the template processor (the ``formatter``) using the "
"named parameter ``global_vars=your_dict``. The full method signature is:"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:672
msgid "def safe_format(self, fmt, kwargs, error_value, book,"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:669
msgid ""
"column_name=None, template_cache=None, strip_results=True, "
"template_functions=None, global_vars={})"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:674
msgid "**Template writer: how to access the additional information**"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:676
msgid ""
"You access the additional information in a template using the template "
"function ``globals(id[=expression] [, id[=expression]]*)`` where ``id`` is "
"any legal variable name. This function checks whether the additional "
"information provided by the developer contains the name. If it does then the"
" function assigns the provided value to a template local variable with the "
"given name. If the name is not in the additional information and if an "
"``expression`` is provided, the ``expression`` is evaluated and the result "
"is assigned to the local variable. If neither a value nor an expression is "
"provided, the function assigns the empty string (``''``) to the local "
"variable."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:685
msgid "Notes on the difference between modes"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:687
msgid ""
"The three program modes, Single Function Mode (SFM), Template Program Mode "
"(TPM), and General Program Mode (GPM), work differently. SFM is intended to "
"be 'simple' so it hides a lot of programming language bits. For example, the"
" value of the column is always passed as an 'invisible' first argument to a "
"function included in the template. SFM also doesn't support the difference "
"between variables and strings; all values are strings."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:693
msgid ""
"Example: the following SFM template returns either the series name or the "
"string \"no series\"::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:697
msgid "The equivalent template in TPM is ::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:701
msgid "The equivalent template in GPM is::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:705
msgid ""
"The first argument to ``ifempty`` is the value of the field ``series``. The "
"second argument is the string ``no series``. In SFM the first argument, the "
"value of the field, is automatically passed (the invisible argument)."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:709
msgid ""
"Several template functions, for example ``booksize()`` and "
"``current_library_name()``, take no arguments. Because of the 'invisible "
"argument' you cannot use these functions in SFM."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:712
msgid ""
"Nested functions, where a function calls another function to compute an "
"argument, cannot be used in SFM. For example this template, intended to "
"return the first 5 characters of the series value uppercased, won't work in "
"SFM::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:717
msgid ""
"TPM and GPM support nested functions. The above template in TPM would be::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:721
msgid "In GPM it would be::"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:727
msgid "User-defined Python template functions"
msgstr "Användardefinierade Python-mallfunktioner"

#: ../../__w/calibre/calibre/manual/template_lang.rst:729
msgid ""
"You can add your own Python functions to the template processor. Such "
"functions can be used in any of the three template programming modes. The "
"functions are added by going to :guilabel:`Preferences -> Advanced -> "
"Template functions`. Instructions are shown in that dialog."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:733
msgid "Special notes for save/send templates"
msgstr "Särskilda anvisningar för att spara/skicka mallar"

#: ../../__w/calibre/calibre/manual/template_lang.rst:735
msgid ""
"Special processing is applied when a template is used in a `save to disk` or"
" `send to device` template. The values of the fields are cleaned, replacing "
"characters that are special to file systems with underscores, including "
"slashes. This means that field text cannot be used to create folders. "
"However, slashes are not changed in prefix or suffix strings, so slashes in "
"these strings will cause folders to be created. Because of this, you can "
"create variable-depth folder structure."
msgstr "Särskild bearbetning tillämpas när en mall används i en 'spara på disk` eller `skicka till enhet` mall. Värdena på fälten städas, ersätter tecken som är speciella till filsystem med understreck, inklusive snedstreck. Det innebär att textfältet inte kan användas för att skapa mappar. Snedstreck ändras dock inte i prefix eller suffixsträngar, så snedstreck i dessa strängar kommer att orsaka att mappar skapas. På grund av detta kan du skapa variabeldjup mappstruktur."

#: ../../__w/calibre/calibre/manual/template_lang.rst:740
msgid ""
"For example, assume we want the folder structure `series/series_index - "
"title`, with the caveat that if series does not exist, then the title should"
" be in the top folder. The template to do this is::"
msgstr "Antag till exempel att vi vill ha mappstrukturen  `series/series_index - title`, med förbehållet att om serien inte existerar, så bör titeln vara i topp-mappen. Mallen för att göra detta är::"

#: ../../__w/calibre/calibre/manual/template_lang.rst:745
msgid "The slash and the hyphen appear only if series is not empty."
msgstr "Det snedstreck och bindestreck visas bara om serien inte är tom."

#: ../../__w/calibre/calibre/manual/template_lang.rst:747
msgid ""
"The lookup function lets us do even fancier processing. For example, assume "
"that if a book has a series, then we want the folder structure "
"`series/series index - title.fmt`. If the book does not have a series, then "
"we want the folder structure `genre/author_sort/title.fmt`. If the book has "
"no genre, we want to use 'Unknown'. We want two completely different paths, "
"depending on the value of series."
msgstr "Uppslagsfunktionen låter oss göra ännu snyggare bearbetning. Antag till exempel att om en bok har en serie, så vi vill att mappstrukturen `series/series index - title.fmt`. Om boken inte har en serie, så vi vill att mappstrukturen `genre/author_sort/title.fmt`. Om boken inte har någon genre, vill vi använda 'Okänd'. Vi vill två helt olika vägar, beroende på värdet av serien."

#: ../../__w/calibre/calibre/manual/template_lang.rst:757
msgid "To accomplish this, we:"
msgstr "För att åstadkomma detta, vi:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:752
msgid ""
"Create a composite field (give it lookup name #AA) containing "
"``{series}/{series_index} - {title}``. If the series is not empty, then this"
" template will produce `series/series_index - title`."
msgstr "Skapa en sammansatt fält (ge det uppslagsnamn #AA) som innehåller ``{series}/{series_index} - {title'}``. Om serien inte är tom, så kommer den här mallen att producera `series/series_index - title`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:754
msgid ""
"Create a composite field (give it lookup name #BB) containing "
"``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. This template produces "
"`genre/author_sort/title`, where an empty genre is replaced with `Unknown`."
msgstr "Skapa en sammansatt fält (ge det uppslagsnamn #BB) som innehåller``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. Denna mall ger `genre/author_sort/title`, där en tom genre ersätts med `Okänd`."

#: ../../__w/calibre/calibre/manual/template_lang.rst:756
msgid ""
"Set the save template to ``{series:lookup(.,#AA,#BB)}``. This template "
"chooses composite field #AA if series is not empty, and composite field #BB "
"if series is empty. We therefore have two completely different save paths, "
"depending on whether or not `series` is empty."
msgstr "Ändra spara mallen till  ``{series:lookup(.,#AA,#BB)}``.  Denna mall väljer sammansatta fält #AA om serien inte är tom, och sammansatta fält #BB om serien är tom. Vi har alltså två helt olika sparvägar, beroende på om eller inte `series` är tom."

#: ../../__w/calibre/calibre/manual/template_lang.rst:760
msgid "Templates and plugboards"
msgstr "Mallar och pluggbrädor"

#: ../../__w/calibre/calibre/manual/template_lang.rst:762
msgid ""
"Plugboards are used for changing the metadata written into books during "
"send-to-device and save-to-disk operations. A plugboard permits you to "
"specify a template to provide the data to write into the book's metadata. "
"You can use plugboards to modify the following fields: authors, author_sort,"
" language, publisher, tags, title, title_sort. This feature helps people who"
" want to use different metadata in books on devices to solve sorting or "
"display issues."
msgstr "Pluggbrädor används för att ändra metadata som skrivs in böcker under \"skicka till enhet\" och \"spara till disk\" operationer. En pluggbräda tillåter dig att ange en mall för att tillhandahålla data som ska skrivas i bokens metadata. Du kan använda pluggbrädor för att ändra följande fält: författare, author_sort, språk, förläggare, taggar, titel, title_sort. Den här funktion hjälper personer som vill använda olika metadata i böcker på enheter för att lösa sortering- eller visningsproblem."

#: ../../__w/calibre/calibre/manual/template_lang.rst:767
msgid ""
"When you create a plugboard, you specify the format and device for which the"
" plugboard is to be used. A special device is provided, ``save_to_disk``, "
"that is used when saving formats (as opposed to sending them to a device). "
"Once you have chosen the format and device, you choose the metadata fields "
"to change, providing templates to supply the new values. These templates are"
" `connected` to their destination fields, hence the name `plugboards`. You "
"can, of course, use composite columns in these templates."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:772
msgid ""
"When a plugboard might apply (Content server, save to disk, or send to "
"device), calibre searches the defined plugboards to choose the correct one "
"for the given format and device. For example, to find the appropriate "
"plugboard for an EPUB book being sent to an ANDROID device, calibre searches"
" the plugboards using the following search order:"
msgstr "När en pluggbräda kan gälla (Innehållsserver, spara till disk, eller skicka till enhet), söker calibre de definierade pluggbrädor att välja den rätta för givet format och enhet. Till exempel för att hitta rätt pluggbräda för en EPUB-bok som skickas till en Android-enhet, söker calibre dessa pluggbrädor enligt följande sökordning:"

#: ../../__w/calibre/calibre/manual/template_lang.rst:776
msgid ""
"a plugboard with an exact match on format and device, e.g., ``EPUB`` and "
"``ANDROID``"
msgstr "en pluggbräda med en exakt matchning på format och enhet, till exempel ``EPUB`` och ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:777
msgid ""
"a plugboard with an exact match on format and the special ``any device`` "
"choice, e.g., ``EPUB`` and ``any device``"
msgstr "en pluggbräda med en exakt matchning på format och den speciella ``any device`` val, till exempel `` EPUB`` och ``any device``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:778
msgid ""
"a plugboard with the special ``any format`` choice and an exact match on "
"device, e.g., ``any format`` and ``ANDROID``"
msgstr "en pluggbräda med en exakt matchning på format och den speciella ``any device`` val, och ``ANDROID``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:779
msgid "a plugboard with ``any format`` and ``any device``"
msgstr "en pluggbräda med ``något format`` och ``någon enhet``"

#: ../../__w/calibre/calibre/manual/template_lang.rst:781
msgid ""
"The tags and authors fields have special treatment, because both of these "
"fields can hold more than one item. A book can have many tags and many "
"authors. When you specify that one of these two fields is to be changed, the"
" template's result is examined to see if more than one item is there. For "
"tags, the result is cut apart wherever calibre finds a comma. For example, "
"if the template produces the value ``Thriller, Horror``, then the result "
"will be two tags, ``Thriller`` and ``Horror``. There is no way to put a "
"comma in the middle of a tag."
msgstr "Tagg och författar fält har särskild behandling, eftersom båda dessa fält kan ha mer än en post. En bok kan ha många taggar och många författare. När du anger att ett av dessa två fält ska ändras, är mallens resultat som undersöks för att se om mer än en post finns. För taggar, skärs resultatet bort varhelst calibre finner ett kommatecken. Till exempel om mallen producerar värdet ``Thriller, Horror``, då blir resultatet två taggar, ``Thriller`` och ``Horror``. Det finns inget sätt att sätta ett kommatecken i mitten av en tagg."

#: ../../__w/calibre/calibre/manual/template_lang.rst:786
msgid ""
"The same thing happens for authors, but using a different character for the "
"cut, a `&` (ampersand) instead of a comma. For example, if the template "
"produces the value ``Blogs, Joe&Posts, Susan``, then the book will end up "
"with two authors, ``Blogs, Joe`` and ``Posts, Susan``. If the template "
"produces the value ``Blogs, Joe;Posts, Susan``, then the book will have one "
"author with a rather strange name."
msgstr "Samma sak händer för författare, men med en annan karaktär för snittet, en `&` (et-tecken) istället för ett kommatecken. Till exempel om mallen producerar värdet  ``Blogs, Joe&Posts, Susan``,  då kommer boken att sluta med två författare, ``Blogs, Joe`` och ``Posts, Susan``. Om mallen producerar värdet ``Blogs, Joe;Posts, Susan``, då kommer boken att ha en författare med ett ganska konstigt namn."

#: ../../__w/calibre/calibre/manual/template_lang.rst:790
msgid ""
"Plugboards affect the metadata written into the book when it is saved to "
"disk or written to the device. Plugboards do not affect the metadata used by"
" ``save to disk`` and ``send to device`` to create the file names. Instead, "
"file names are constructed using the templates entered on the appropriate "
"preferences window."
msgstr "Pluggbrädor påverkar metadata som skrivs in i boken när den sparas till disk eller skrivs till enheten. Pluggbrädor påverkar inte metadata som används av ``spara till disk`` och ``skicka till enhet`` för att skapa filnamnen. Istället konstrueras filnamn med hjälp av mallar som anges i lämpliga inställningsfönster."

#: ../../__w/calibre/calibre/manual/template_lang.rst:795
msgid "Tips"
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:797
msgid "You might find the following tips useful."
msgstr "Du kan hitta följande tips användbart."

#: ../../__w/calibre/calibre/manual/template_lang.rst:799
msgid ""
"Use the Template Tester to test templates. Add the tester to the context "
"menu for books in the library and/or give it a keyboard shortcut."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:800
msgid ""
"Templates can use other templates by referencing composite columns built "
"with the desired template. Alternatively, you could use Stored Templates."
msgstr ""

#: ../../__w/calibre/calibre/manual/template_lang.rst:802
msgid ""
"In a plugboard, you can set a field to empty (or whatever is equivalent to "
"empty) by using the special template ``{}``. This template will always "
"evaluate to an empty string."
msgstr "I en kontrolpanel, kan du ställa in ett fält för att vara tomt (eller vad som motsvarar tom) med hjälp av särskild mall ``{}``. Denna mall kommer alltid utvärderas till en tom sträng."

#: ../../__w/calibre/calibre/manual/template_lang.rst:804
msgid ""
"The technique described above to show numbers even if they have a zero value"
" works with the standard field series_index."
msgstr "Den teknik som beskrivs ovan för att visa siffror även om de har ett nollvärde fungerar med standardfält series_index."

#: ../../__w/calibre/calibre/manual/template_lang.rst:809
msgid "Function reference"
msgstr ""
