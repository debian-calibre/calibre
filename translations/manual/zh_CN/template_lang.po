# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Kevin Jin <kevin.defan@gmail.com>, 2016
# Pler Li, 2024
# RERBIN MA, 2025
# tony shen <anthanny@hotmail.com>, 2024
# MewX <xiayuanzhong@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 02:15+0000\n"
"PO-Revision-Date: 2014-06-17 08:34+0000\n"
"Last-Translator: RERBIN MA, 2025\n"
"Language-Team: Chinese (China) (http://app.transifex.com/calibre/calibre/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:4
msgid "The calibre template language"
msgstr "calibre 模板语言"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:6
msgid ""
"The calibre template language is a calibre-specific language used throughout"
" calibre for tasks such as specifying file paths, formatting values, and "
"computing the value for user-specified columns. Examples:"
msgstr "calibre模板语言是calibre特定的语言，用于在calibre中执行任务，例如指定文件路径、格式化值和计算用户指定列的值。示例:"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:8
msgid ""
"Specify the folder structure and file names when saving files from the "
"calibre library to the disk or e-book reader."
msgstr "在将文件从calibre书库保存到磁盘或电子书阅读器时，指定文件夹结构和文件名。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:9
msgid "Define rules for adding icons and colors to the calibre book list."
msgstr "定义规则以将图标和颜色添加到calibre图书列表中。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:10
msgid "Define `virtual columns` that contain data from other columns."
msgstr "定义包含来自其他列的数据的“虚拟列”。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:11
msgid "Advanced library searching."
msgstr "高级书库搜索。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:12
msgid "Advanced metadata search and replace."
msgstr "高级元数据搜索和替换。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:14
msgid ""
"The language is built around the notion of a `template`, which specifies "
"which book metadata to use, computations on that metadata, and how it is to "
"be formatted."
msgstr "该语言是围绕“模板”的概念构建的，它指定要使用的图书元数据、元数据的计算以及如何格式化。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:17
msgid "Basic templates"
msgstr "基本模板"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:19
msgid ""
"A basic template consists one or more ``template expressions``. A ``template"
" expression`` consists of text and names in curly brackets (``{}``) that is "
"replaced by the corresponding metadata from the book being processed. For "
"example, the default template in calibre used for saving books to device has"
" 4 ``template expressions``::"
msgstr "基本模板由一个或多个“模板表达式”组成。 “模板表达式”由大括号 (“{}”) 中的文本和名称组成，并由正在处理的书籍中的相应元数据替换。 例如，calibre 中用于将书籍保存到设备的默认模板有 4 个“模板表达式”："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:23
msgid "For the book \"The Foundation\" by \"Isaac Asimov\" the template will become::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:27
msgid ""
"The slashes are not ``template expressions`` because they are not in between"
" ``{}``. Such text is left where it appears. For example, if the template "
"is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:31
msgid "then for \"The Foundation\" the template produces::"
msgstr "那么对于“The Foundation”，模板会生成："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:35
msgid ""
"A ``template expression`` can access all the metadata available in calibre, "
"including custom columns (columns you create yourself), by using a column's "
"``lookup name``. To find the lookup name for a `column` (sometimes called "
"`fields`), hover your mouse over the column header in calibre's book list. "
"Lookup names for custom columns always begin with ``#``. For series type "
"columns there is an additional field named ``#lookup name_index`` that is "
"the series index for that book in the series. For example, if you have a "
"custom series column named ``#myseries``, there will also be a column named "
"``#myseries_index``. The standard series column's index is named "
"``series_index``."
msgstr "“模板表达式”可以通过使用列的“查找名称”来访问 calibre 中可用的所有元数据，包括自定义列（您自己创建的列）。 要查找“列”（有时称为“字段”）的查找名称，请将鼠标悬停在 calibre 图书列表中的列标题上。 自定义列的查找名称始终以“#”开头。 对于系列类型列，有一个名为“#lookup name_index”的附加字段，它是该系列中该书的系列索引。 例如，如果您有一个名为“#myseries”的自定义系列列，那么还将有一个名为“#myseries_index”的列。 标准系列列的索引名为“series_index”。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:37
msgid "In addition to the standard column based fields, you also can use:"
msgstr "除了基于标准列的字段之外，您还可以使用："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:39
msgid ""
"``{formats}`` - A list of formats available in the calibre library for a "
"book"
msgstr "``{formats}`` - calibre 书库中书籍可用的格式列表"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:40
msgid "``{identifiers:select(isbn)}`` - The ISBN of the book"
msgstr "``{identifiers:select(isbn)}`` - 书籍的 ISBN"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:42
msgid ""
"If the metadata for the field for a given book is not defined then the field"
" in the template is replaced by the empty string (``''``). For example, "
"consider the following template::"
msgstr "如果某本书的字段元数据未定义，则模板中的该字段将被替换为空字符串（“'''”）。例如，请考虑以下模板："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:46
msgid ""
"If Asimov's book \"Second Foundation\" is in the series \"Foundation\" then "
"the template produces::"
msgstr "如果Asimov的书《Second Foundation》属于《Foundation》丛书，那么模板将生成："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:50
msgid ""
"If a series has not been entered for the book then the template produces::"
msgstr "如果尚未输入该书的丛书，则模板将生成："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:54
msgid ""
"The template processor automatically removes multiple slashes and leading or"
" trailing spaces."
msgstr "模板处理器会自动去除多余的斜杠以及开头和结尾的空格。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:57
msgid "Advanced formatting"
msgstr "高级格式"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:59
msgid ""
"In addition to metadata substitution, templates can conditionally include "
"additional text and control how substituted data is formatted."
msgstr "除了元数据替换之外，模板还可以有条件地包含附加文本，并控制替换数据的格式。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:61
msgid "**Conditionally including text**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:63
msgid ""
"Sometimes you want text to appear in the output only if a field is not "
"empty. A common case is ``series`` and ``series_index`` where you want "
"either nothing or the two values separated by a hyphen. calibre handles this"
" case using a special ``template expression`` syntax."
msgstr "有时，您希望仅当字段不为空时文本才出现在输出中。 常见的情况是“series”和“series_index”，其中您不需要任何内容或用连字符分隔两个值。 calibre 使用特殊的“模板表达式”语法来处理这种情况。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:65
msgid ""
"For example and using the above Foundation example, assume you want the "
"template to produce `Foundation - 3 - Second Foundation`. This template "
"produces that output:"
msgstr "例如，使用上面的 Foundation 示例，假设您希望模板生成“Foundation - 3 - Second Foundation”。此模板将生成以下输出："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:67
msgid "``{series} - {series_index} - {title}``"
msgstr "``{series} - {series_index} - {title}``"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:69
msgid ""
"However, if a book has no series the template will produce `- - the title`, "
"which is probably not what you want. Generally, people want the result be "
"the title without the extraneous hyphens. You can accomplish this using the "
"following template syntax:"
msgstr "但是，如果一本书没有系列，模板将生成“- - 标题”，这可能不是您想要的。 一般来说，人们希望结果是没有无关连字符的标题。 您可以使用以下模板语法来完成此操作："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:71
msgid "``{field:|prefix_text|suffix_text}``"
msgstr "``{field:|prefix_text|suffix_text}``"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:73
msgid ""
"This ``template expression`` says that if ``field`` has the value `XXXX` "
"then the result will be `prefix_textXXXXXsuffix_text`. If ``field`` is empty"
" (has no value) then the result will be the empty string (nothing) because "
"the prefix and suffix are ignored. The prefix and suffix can contain blanks."
msgstr "这个“模板表达式”表示，如果“field”的值为“XXXX”，那么结果将为“prefix_textXXXXXsuffix_text”。 如果“field”为空（没有值），那么结果将是空字符串（什么也没有），因为前缀和后缀被忽略。 前缀和后缀可以包含空格。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:75
msgid ""
"**Do not use subtemplates (`{ ... }`) or functions (see below) in the prefix"
" or the suffix.**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:77
msgid ""
"Using this syntax, we can solve the above no-series problem with the "
"template::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:81
msgid ""
"The hyphens will be included only if the book has a series index, which it "
"has only if it has a series. Continuing the Foundation example again, the "
"template will produce `Foundation - 1 - Second Foundation`."
msgstr "仅当该书具有系列索引时才会包含连字符，而该索引仅当它具有系列时才包含。 再次继续 Foundation 示例，模板将生成“Foundation - 1 - Second Foundation”。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:83
#: ../../../__w/calibre/calibre/manual/template_lang.rst:293
#: ../../../__w/calibre/calibre/manual/template_lang.rst:469
msgid "Notes:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:85
msgid ""
"You must include the colon after the ``lookup name`` if you are using a "
"prefix or a suffix."
msgstr "如果使用前缀或后缀，则必须在“查找名称”后面包含冒号。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:86
msgid ""
"You must either use either no or both ``|`` characters. Using one, as in "
"``{field:| - }``, is not allowed."
msgstr "你必须要么完全不使用 ``|`` 字符，要么同时使用两个。像 ``{field:| - }``这样只使用一个 | 是不被允许的。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:87
msgid ""
"It is OK to provide no text for either the prefix or the suffix, such as in "
"``{series:|| - }``. The template ``{title:||}`` is the same as ``{title}``."
msgstr "可以不为前缀或后缀提供任何文本，例如 ``{series:|| - }``是允许的。模板 ``{title:||}`` 与 ``{title:||}`` 是等效的。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:89
msgid "**Formatting**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:91
msgid ""
"Suppose you want the ``series_index`` to be formatted as three digits with "
"leading zeros. This does the trick:"
msgstr "假设你希望将 ``series_index``格式化为三位数，并在前面补零。这段代码就能实现这个效果："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:93
msgid "``{series_index:0>3s}`` - Three digits with leading zeros"
msgstr "``{series_index:0>3s}`` - 三位数，前面补零"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:95
msgid "For trailing zeros, use:"
msgstr "若要在后面补零，请使用："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:97
msgid "``{series_index:0<3s}`` - Three digits with trailing zeros"
msgstr "``{series_index:0<3s}`` - - 三位数，后面补零"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:99
msgid ""
"If you use series indices with fractional values, e.g., 1.1, you might want "
"the decimal points to line up. For example, you might want the indices 1 and"
" 2.5 to appear as 01.00 and 02.50 so that they will sort correctly on a "
"device that does lexical sorting. To do this, use:"
msgstr "如果您使用带有小数值的系列索引，例如 1.1，您可能希望小数点对齐。 例如，您可能希望索引 1 和 2.5 显示为 01.00 和 02.50，以便它们在进行词法排序的设备上正确排序。 为此，请使用："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:101
msgid ""
"``{series_index:0>5.2f}`` - Five characters consisting of two digits with "
"leading zeros, a decimal point, then 2 digits after the decimal point."
msgstr "``{series_index:0>5.2f}`` - 总共五个字符：前面补零的两位整数，一个小数点，和小数点后两位数字。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:103
msgid "If you want only the first two letters of the data, use:"
msgstr "如果你只想保留数据的前两个字母，请使用："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:105
msgid ""
"``{author_sort:.2}`` - Only the first two letters of the author sort name"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:107
msgid ""
"Much of the calibre template language formatting comes from Python. For more"
" details on the syntax of these advanced formatting operations see the "
"`Python documentation "
"<https://docs.python.org/3/library/string.html#formatstrings>`_."
msgstr "大部分 calibre 模板语言格式都来自 Python。 有关这些高级格式化操作的语法的更多详细信息，请参阅“Python 文档 <https://docs.python.org/3/library/string.html#formatstrings>”_。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:111
msgid "Using templates to define custom columns"
msgstr "使用模板来定义自定义栏目"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:113
msgid ""
"Templates can be used to display information that isn't in calibre metadata,"
" or to display metadata differently from calibre's normal format. For "
"example, you might want to show the ``ISBN``, a field that calibre does not "
"display. You can accomplish this creating a custom column with the type "
"`Column built from other columns` (hereafter called `composite columns`) and"
" providing a template to generate the displayed text. The column will "
"display the result of evaluating the template. For example, to display the "
"ISBN, create the column and enter ``{identifiers:select(isbn)}`` in the "
"template box. To display a column containing the values of two series custom"
" columns, separated by a comma, use ``{#series1:||,}{#series2}``."
msgstr "模板可用于显示 calibre 元数据中没有的信息，或以不同于 calibre 正常格式的方式显示元数据。 例如，您可能想要显示“ISBN”，这是 calibre 不显示的字段。 您可以通过创建类型为“从其他列构建的列”（以下称为“复合列”）的自定义列来完成此操作，并提供一个模板来生成显示的文本。 该列将显示评估模板的结果。 例如，要显示 ISBN，请创建列并在模板框中输入“{identifiers:select(isbn)}”。 要显示包含两个系列自定义列的值（以逗号分隔）的列，请使用``{#series1:||,}{#series2}``。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:115
msgid "Composite columns can use any template option, including formatting."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:117
msgid ""
"Note: You cannot edit the data displayed in a composite column. Instead you "
"edit the source columns. If you edit a composite column, for example by "
"double-clicking it, calibre will open the template for editing, not the "
"underlying data."
msgstr "注意：您无法编辑复合列中显示的数据。 相反，您可以编辑源列。 如果您编辑复合列，例如通过双击它，calibre 将打开模板进行编辑，而不是基础数据。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:121
msgid "Templates and plugboards"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:123
msgid ""
"Plugboards are used for changing the metadata written into books during "
"send-to-device and save-to-disk operations. A plugboard permits you to "
"specify a template to provide the data to write into the book's metadata. "
"You can use plugboards to modify the following fields: authors, author_sort,"
" language, publisher, tags, title, title_sort. This feature helps people who"
" want to use different metadata in books on devices to solve sorting or "
"display issues."
msgstr "插件板用于在发送到设备和保存到磁盘操作期间更改写入书籍的元数据。 插件板允许您指定一个模板来提供要写入书籍元数据的数据。 您可以使用插件板修改以下字段：作者、author_sort、语言、出版商、标签、书名、title_sort。 此功能可以帮助想要在设备上使用图书中的不同元数据的人们解决排序或显示问题。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:125
msgid ""
"When you create a plugboard, you specify the format and device for which the"
" plugboard is to be used. A special device is provided, ``save_to_disk``, "
"that is used when saving formats (as opposed to sending them to a device). "
"Once you have chosen the format and device, you choose the metadata fields "
"to change, providing templates to supply the new values. These templates are"
" `connected` to their destination fields, hence the name `plugboards`. You "
"can of course use composite columns in these templates."
msgstr "创建插接板时，您可以指定插接板要使用的格式和设备。 提供了一个特殊的设备“save_to_disk”，在保存格式时使用（而不是将它们发送到设备）。 选择格式和设备后，您可以选择要更改的元数据字段，并提供模板来提供新值。 这些模板“连接”到其目标字段，因此称为“插件板”。 您当然可以在这些模板中使用复合列。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:127
msgid ""
"Plugboards are quite flexible and can be written in Single Function Mode, "
"Template Program Mode, General Program Mode, or Python Template mode."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:129
msgid ""
"When a plugboard might apply (Content server, save to disk, or send to "
"device), calibre searches the defined plugboards to choose the correct one "
"for the given format and device. For example, to find the appropriate "
"plugboard for an EPUB book being sent to an ANDROID device, calibre searches"
" the plugboards using the following search order:"
msgstr "当插件板可能适用时（内容服务器、保存到磁盘或发送到设备），calibre 会搜索定义的插件板，为给定的格式和设备选择正确的插件板。 例如，要为发送到 ANDROID 设备的 EPUB 图书找到合适的插件板，calibre 使用以下搜索顺序搜索插件板："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:133
msgid ""
"a plugboard with an exact match on format and device, e.g., ``EPUB`` and "
"``ANDROID``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:134
msgid ""
"a plugboard with an exact match on format and the special ``any device`` "
"choice, e.g., ``EPUB`` and ``any device``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:135
msgid ""
"a plugboard with the special ``any format`` choice and an exact match on "
"device, e.g., ``any format`` and ``ANDROID``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:136
msgid "a plugboard with ``any format`` and ``any device``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:138
msgid ""
"The tags and authors fields have special treatment, because both of these "
"fields can hold more than one item. A book can have many tags and many "
"authors. When you specify that one of these two fields is to be changed, the"
" template's result is examined to see if more than one item is there. For "
"tags, the result is cut apart wherever calibre finds a comma. For example, "
"if the template produces the value ``Thriller, Horror``, then the result "
"will be two tags, ``Thriller`` and ``Horror``. There is no way to put a "
"comma in the middle of a tag."
msgstr "标签和作者字段有特殊处理，因为这两个字段都可以容纳多个项目。 一本书可以有多个标签和多个作者。 当您指定要更改这两个字段之一时，将检查模板的结果以查看是否存在多个项目。 对于标签，只要 calibre 找到逗号，结果就会被分割。 例如，如果模板生成值“Thriller, Horror”，则结果将是两个标签“Thriller”和“Horror”。 无法在标签中间放置逗号。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:141
msgid ""
"The same thing happens for authors, but using a different character for the "
"cut, a `&` (ampersand) instead of a comma. For example, if the template "
"produces the value ``Blogs, Joe&Posts, Susan``, then the book will end up "
"with two authors, ``Blogs, Joe`` and ``Posts, Susan``. If the template "
"produces the value ``Blogs, Joe;Posts, Susan``, then the book will have one "
"author with a rather strange name."
msgstr "作者也会发生同样的情况，但使用不同的字符进行剪切，即“&”（与号）而不是逗号。 例如，如果模板生成值“Blogs, Joe&Posts, Susan”，则该书最终将有两个作者：“Blogs, Joe”和“Posts, Susan”。 如果模板生成值“博客，乔；帖子，苏珊”，那么这本书将有一位作者的名字相当奇怪。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:143
msgid ""
"Plugboards affect the metadata written into the book when it is saved to "
"disk or written to the device. Plugboards do not affect the metadata used by"
" ``save to disk`` and ``send to device`` to create the file names. Instead, "
"file names are constructed using the templates entered on the appropriate "
"preferences window."
msgstr "当将书籍保存到磁盘或写入设备时，插件板会影响写入书中的元数据。 插件板不会影响“保存到磁盘”和“发送到设备”用来创建文件名的元数据。 相反，文件名是使用在适当的首选项窗口中输入的模板构建的。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:148
msgid "Using functions in templates - Single Function Mode"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:150
msgid ""
"Suppose you want to display the value of a field in upper case when that "
"field is normally in title case. You can do this using `template functions`."
" For example, to display the title in upper case use the ``uppercase`` "
"function, as in ``{title:uppercase()}``. To display it in title case, use "
"``{title:titlecase()}``."
msgstr "假设您想要以大写形式显示某个字段的值，而该字段通常为标题大写形式。 您可以使用“模板函数”来完成此操作。 例如，要以大写形式显示标题，请使用“uppercase”函数，如“{title:uppercase()}”。 要以标题大小写显示它，请使用``{title:titlecase()}``。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:152
msgid ""
"Functions go into the format part of the template, after the ``:`` and "
"before the first ``|`` or the closing ``}`` if no prefix/suffix is used. If "
"you have both a format and a function reference, the function comes after a "
"second ``:``.  Functions return the value of the column specified in the "
"template, suitably modified."
msgstr "函数进入模板的格式部分，在 ``:`` 之后和第一个 ``|`` 之前，或者如果没有使用前缀/后缀，则在结束的 ``}`` 之前。 如果您同时具有格式和函数引用，则该函数位于第二个 ``:`` 后面。 函数返回模板中指定的列的值，经过适当修改。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:154
msgid "The syntax for using functions is one of::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:161
msgid ""
"Function names must always be followed by opening and closing parentheses. "
"Some functions require extra values (arguments), and these go inside the "
"parentheses. Arguments are separated by commas. Literal commas (commas as "
"text, not argument separators) must be preceded by a backslash (``\\``) . "
"The last (or only) argument cannot contain a textual closing parenthesis."
msgstr "函数名称后面必须始终跟有左括号和右括号。 有些函数需要额外的值（参数），这些值位于括号内。 参数之间用逗号分隔。 文字逗号（逗号作为文本，而不是参数分隔符）前面必须有反斜杠 (``\\``) 。 最后一个（或唯一的）参数不能包含文本右括号。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:163
msgid ""
"Functions are evaluated before format specifications and the prefix/suffix. "
"See further down for an example of using both a format and a function."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:165
msgid ""
"**Important**: If you have programming experience, please note that the "
"syntax in `Single Function Mode` is not what you expect. Strings are not "
"quoted and spaces are significant. All arguments are considered to be "
"constants; there are no expressions."
msgstr "**重要**：如果您有编程经验，请注意“单函数模式”中的语法不是您所期望的。 字符串不加引号，并且空格很重要。 所有参数都被视为常量； 没有表达式。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:167
msgid ""
"**Do not use subtemplates (`{ ... }`) as function arguments.** Instead, use "
":ref:`Template Program Mode <template_mode>` and :ref:`General Program Mode "
"<general_mode>`."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:169
msgid "Notes on calling functions in Single Function Mode:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:171
msgid ""
"When functions are used in Single Function Mode, the first parameter, "
"``value``, is automatically replaced by the content of the field specified "
"in the template. For example, when the template ``{title:capitalize()}`` is "
"processed, the content of the ``title`` field is passed as the parameter "
"``value`` to the capitalize function."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:172
msgid ""
"In the function documentation, the notation ``[something]*`` means that "
"``something`` can be repeated zero or more times. The notation "
"``[something]+`` means that the ``something`` is repeated one or more times "
"(must exist at least one time)."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:173
msgid ""
"Some functions use regular expressions. In the template language regular "
"expression matching is case-insensitive."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:175
msgid ""
"Functions are documented in :ref:`template_functions_reference`. The "
"documentation tells you what arguments the functions require and what the "
"functions do. For example, here is the documentation of the "
":ref:`ff_ifempty` function."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:179
msgid ""
"You see that the function requires two arguments, ``value`` and "
"``text_if_empty``. However, because we are using Single Function Mode, we "
"omit the ``value`` argument, passing only ``text_if_empty``. For example, "
"this template::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:183
msgid ""
"shows the tags for a book, if any. If it has no tags then it show `No tags "
"on this book`."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:185
msgid ""
"The following functions are usable in Single Function Mode because their "
"first parameter is ``value``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:227
msgid "**Using functions and formatting in the same template**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:229
msgid ""
"Suppose you have an integer custom column ``#myint`` that you want displayed"
" with leading zeros, as in ``003``. One way to do this is to use a format of"
" ``0>3s``. However, by default if a number (integer or float) equals zero "
"then the value is displayed as the empty string so zero values will produce "
"the empty string, not ``000``. If you want to see ``000`` values then you "
"use both the format string and the ``ifempty`` function to change the empty "
"value back to a zero. The template would be::"
msgstr "假设您有一个整数自定义列“#myint”，您希望显示前导零，如“003”。 实现此目的的一种方法是使用“0>3s”的格式。 但是，默认情况下，如果数字（整数或浮点数）等于零，则该值将显示为空字符串，因此零值将生成空字符串，而不是“000”。 如果您想查看“000”值，则可以使用格式字符串和“ifempty”函数将空值更改回零。 模板将是："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:233
msgid ""
"Note that you can use the prefix and suffix as well. If you want the number "
"to appear as ``[003]`` or ``[000]``, then use the template::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:240
msgid "General Program Mode"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:242
msgid ""
"`General Program Mode` (`GPM`) replaces `template expressions` with a "
"program written in the `template language`. The syntax of the language is "
"defined by the following grammar::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:295
msgid ""
"a ``top_expression`` always has a value. The value of an ``expression_list``"
" is the value of the last ``top_expression`` in the list. For example, the "
"value of the expression list ``1;2;'foobar';3`` is ``3``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:296
msgid "In a logical context, any non-empty value is ``True``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:297
msgid "In a logical context, the empty value is ``False``"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:298
msgid ""
"Strings and numbers can be used interchangeably. For example, ``10`` and "
"``'10'`` are the same thing."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:299
msgid ""
"Comments are lines starting with a '#' character, possibly preceded by "
"blanks or tabs."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:301
msgid "**Operator precedence**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:303
msgid ""
"The operator precedence (order of evaluation) from highest (evaluated first)"
" to lowest (evaluated last) is:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:305
msgid ""
"Function calls, constants, parenthesized expressions, statement expressions,"
" assignment expressions, field references."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:306
msgid ""
"Unary plus (``+``) and minus (``-``). These operators evaluate right to "
"left."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:308
msgid ""
"These and all the other arithmetic operators return integers if the "
"expression results in a fractional part equal to zero. For example, if an "
"expression returns ``3.0`` it is changed to ``3``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:309
msgid ""
"Multiply (``*``) and divide (``/``). These operators are associative and "
"evaluate left to right. Use parentheses if you want to change the order of "
"evaluation."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:310
msgid ""
"Add (``+``) and subtract (``-``). These operators are associative and "
"evaluate left to right."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:311
msgid ""
"Numeric and string comparisons. These operators return ``'1'`` if the "
"comparison succeeds, otherwise the empty string (``''``). Comparisons are "
"not associative: ``a < b < c`` is a syntax error."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:312
msgid ""
"String concatenation (``&``). The ``&`` operator returns a string formed by "
"concatenating the left-hand and right-hand expressions. Example: ``'aaa' & "
"'bbb'`` returns ``'aaabbb'``. The operator is associative and evaluates left"
" to right."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:313
msgid ""
"Unary logical not (``!``). This operator returns ``'1'`` if the expression "
"is False (evaluates to the empty string), otherwise ``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:314
msgid ""
"Logical and (``&&``). This operator returns '1' if both the left-hand and "
"right-hand expressions are True, or the empty string ``''`` if either is "
"False. It is associative, evaluates left to right, and does `short-"
"circuiting <https://chortle.ccsu.edu/java5/Notes/chap40/ch40_2.html>`_."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:315
msgid ""
"Logical or (``||``). This operator returns ``'1'`` if either the left-hand "
"or right-hand expression is True, or ``''`` if both are False. It is "
"associative, evaluates left to right, and does `short-circuiting "
"<https://chortle.ccsu.edu/java5/Notes/chap40/ch40_2.html>`_. It is an "
"`inclusive or`, returning ``'1'`` if both the left- and right-hand "
"expressions are True."
msgstr "逻辑或 (``||``)。 如果左侧表达式或右侧表达式为 True，则此运算符返回 ``'1'``；如果均为 False，则返回 ``''``。 它是关联的，从左到右求值，并进行“短路”<https://chortle.ccsu.edu/java5/Notes/chap40/ch40_2.html>`_。 它是一个“包含或”，如果左侧和右侧表达式都为 True，则返回“'1””。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:317
msgid "**Field references**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:319
msgid ""
"A ``field_reference`` evaluates to the value of the metadata field named by "
"lookup name that follows the ``$`` or ``$$``. Using ``$`` is equivalent to "
"using the :ref:`ff_field` function. Using ``$$`` is equivalent to using the "
":ref:`ff_raw_field` function. Examples::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:326
msgid "**If expressions**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:328
msgid ""
"``If`` expressions first evaluate the ``condition``. If the ``condition`` is"
" True (a non-empty value) then the ``expression_list`` in the ``then`` "
"clause is evaluated. If it is False then if present the ``expression_list`` "
"in the ``elif`` or ``else`` clause is evaluated. The ``elif`` and ``else`` "
"parts are optional. The words ``if``, ``then``, ``elif``, ``else``, and "
"``fi`` are reserved; you cannot use them as identifier names. You can put "
"newlines and white space wherever they make sense. The ``condition`` is a "
"``top_expression`` not an ``expression_list``; semicolons are not allowed. "
"The ``expression_lists`` are semicolon-separated sequences of "
"``top_expressions``. An ``if`` expression returns the result of the last "
"``top_expression`` in the evaluated ``expression_list``, or the empty string"
" if no expression list was evaluated."
msgstr "``If`` 表达式首先评估``condition``。 如果“condition”为 True（非空值），则评估“then”子句中的“expression_list”。 如果为 False，则评估“elif”或“else”子句中的“expression_list”。 ``elif`` 和 ``else`` 部分是可选的。 单词“if”、“then”、“elif”、“else”和“fi”被保留； 您不能将它们用作标识符名称。 您可以在任何有意义的地方放置换行符和空格。 “condition”是“top_expression”，而不是“expression_list”； 不允许使用分号。 “表达式列表”是以分号分隔的“top_表达式”序列。 ``if`` 表达式返回已计算的 ``expression_list`` 中最后一个 ``top_expression`` 的结果，如果没有计算表达式列表，则返回空字符串。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:330
msgid "Examples::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:343
msgid "Nested ``if`` example::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:356
msgid ""
"As said above, an ``if`` produces a value. This means that all the following"
" are equivalent::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:362
msgid ""
"For example, this program returns the value of the ``series`` column if the "
"book has a series, otherwise the value of the ``title`` column::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:366
msgid "**For expressions**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:368
msgid ""
"The ``for`` expression iterates over a list of values, processing them one "
"at a time. The ``list_expression`` must evaluate either to a metadata field "
"``lookup name`` e.g., ``tags`` or ``#genre``, or to a list of values. The "
":ref:`ff_range` generates a list of numbers. If the result is a valid "
"``lookup name`` then the field's value is fetched and the separator "
"specified for that field type is used. If the result isn't a valid lookup "
"name then it is assumed to be a list of values. The list is assumed to be "
"separated by commas unless the optional keyword ``separator`` is supplied, "
"in which case the list values must be separated by the result of evaluating "
"the ``separator_expr``. A separator cannot be used if the list is generated "
"by ``range()``. Each value in the list is assigned to the specified variable"
" then the ``expression_list`` is evaluated. You can use ``break`` to jump "
"out of the loop, and ``continue`` to jump to the beginning of the loop for "
"the next iteration."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:370
msgid ""
"Example: This template removes the first hierarchical name for each value in"
" Genre (``#genre``), constructing a list with the new names::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:380
msgid ""
"If the original Genre is `History.Military, Science Fiction.Alternate "
"History, ReadMe` then the template returns `Military, Alternate History, "
"ReadMe`. You could use this template in calibre's :guilabel:`Edit metadata "
"in bulk -> Search & replace` with :guilabel:`Search for` set to ``template``"
" to strip off the first level of the hierarchy and assign the resulting "
"value to Genre."
msgstr "如果原始类型是“History.Military, Science Fiction.Alternate History, ReadMe”，则模板将返回“Military, Alternate History, ReadMe”。 您可以在 calibre 的“批量编辑元数据 -> 搜索和替换”中使用此模板，并将“搜索”设置为“模板”，以剥离层次结构的第一级并将结果值分配给类型。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:383
msgid ""
"Note: the last line in the template, ``new_tags``, isn't strictly necessary "
"in this case because ``for`` returns the value of the last top_expression in"
" the expression list. The value of an assignment is the value of its "
"expression, so the value of the ``for`` statement is what was assigned to "
"``new_tags``."
msgstr "注意：在这种情况下，模板中的最后一行“new_tags”并不是绝对必要的，因为“for”返回表达式列表中最后一个 top_expression 的值。 赋值的值是其表达式的值，因此“for”语句的值就是分配给“new_tags”的值。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:385
msgid "**with expressions**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:387
msgid "The ``with`` expression:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:389
msgid ""
"changes the current book to the book with calibre book id (an integer) "
"produced by valuating the ``top_expression``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:390
msgid "runs the ``expression_list``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:391
msgid "then resets the current book back to what it was."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:393
msgid ""
"The ``with`` expression returns the result of the last ``top_expression`` in"
" the evaluated ``expression_list``, or the empty string if no expression "
"list was evaluated."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:396
msgid ""
"For example, this template returns a list of the titles of each book "
"selected in the GUI::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:408
msgid "**Return stmt**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:410
msgid ""
"Return the value of the ``expression``. If executed in a function then it "
"returns the value of the expression to the caller. If executed in the "
"outermost context (the template) then it sets the value of the template to "
"the value of the expression and exits the template."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:412
msgid "**Function definition**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:414
msgid ""
"If you have repeated code in a template then you can put that code into a "
"local function. The ``def`` keyword starts the definition. It is followed by"
" the function name, the argument list, then the code in the function. The "
"function definition ends with the ``fed`` keyword."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:416
msgid ""
"Arguments are positional. When a function is called the supplied arguments "
"are matched left to right against the defined parameters, with the value of "
"the argument assigned to the parameter. It is an error to provide more "
"arguments than defined parameters. Parameters can have default values, such "
"as ``a = 25``. If an argument is not supplied for that parameter then the "
"default value is used, otherwise the parameter is set to the empty string."
msgstr "参数是立场性的。 调用函数时，提供的参数会从左到右与定义的参数进行匹配，并将参数的值分配给参数。 提供的参数多于定义的参数是错误的。 参数可以有默认值，例如“a = 25”。 如果没有为该参数提供参数，则使用默认值，否则该参数将设置为空字符串。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:418
msgid "The ``return`` statement can be used in a local function."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:420
msgid "A function must be defined before it can be used."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:422
msgid ""
"Example: This template computes an approximate duration in years, months, "
"and days from a number of days. The function ``to_plural()`` formats the "
"computed values. Note that the example also uses the ``&`` operator::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:437
msgid "**Relational operators**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:439
msgid ""
"Relational operators return ``'1'`` if the comparison is true, otherwise the"
" empty string (``''``)."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:441
msgid ""
"There are two forms of relational operators: string comparisons and numeric "
"comparisons."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:443
msgid ""
"String comparisons do case-insensitive string comparison using lexical "
"order. The supported string comparison operators are ``==``, ``!=``, ``<``, "
"``<=``, ``>``, ``>=``, ``in``, ``inlist``, and ``inlist_field``. For the "
"``in``, ``inlist``, and ``inlist_field`` operators, the result of the left "
"hand expression is interpreted as a regular expression pattern. They are "
"true if the value of left-hand regular expression matches the value of the "
"right hand expression. The regular expressions are case-insensitive."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:446
msgid ""
"The ``inlist`` operator is true if the left hand regular expression matches "
"any one of the items in the right hand list where the items in the list are "
"separated by commas. The ``inlist_field`` operator is true if the left hand "
"regular expression matches any of the items in the field (column) named by "
"the right hand expression, using the separator defined for the field. NB: "
"the ``inlist_field`` operator requires the right hand expression to evaluate"
" to a field name, while the ``inlist`` operator requires the right hand "
"expression to evaluate to a string containing a comma-separated list. "
"Because of this difference, ``inlist_field`` is substantially faster than "
"``inlist`` because no string conversions or list constructions are done."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:448
msgid ""
"The numeric comparison operators are ``==#``, ``!=#``, ``<#``, ``<=#``, "
"``>#``, ``>=#``. The left and right expressions must evaluate to numeric "
"values with two exceptions: both the string value \"None\" (undefined field)"
" and the empty string evaluate to the value zero."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:450
msgid "Examples:"
msgstr "例如："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:452
msgid ""
"``program: field('series') == 'foo'`` returns ``'1'`` if the book's series "
"is `foo`, otherwise ``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:453
msgid ""
"``program: 'f.o' in field('series')`` returns ``'1'`` if the book's series "
"matches the regular expression ``f.o`` (e.g., `foo`, `Off Onyx`, etc.), "
"otherwise ``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:454
msgid ""
"``program: 'science' inlist $#genre`` returns ``'1'`` if any of the values "
"retrieved from the book's genres match the regular expression ``science``, "
"e.g., `Science`, `History of Science`, `Science Fiction` etc., otherwise "
"``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:455
msgid ""
"``program: '^science$' inlist $#genre`` returns ``'1'`` if any of the book's"
" genres exactly match the regular expression ``^science$``, e.g., `Science`,"
" otherwise ``''``. The genres `History of Science` and `Science Fiction` "
"don't match."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:456
msgid ""
"``program: 'asimov' inlist $authors`` returns ``'1'`` if any author matches "
"the regular expression ``asimov``, e.g., `Asimov, Isaac` or `Isaac Asimov`, "
"otherwise ``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:457
msgid ""
"``program: 'asimov' inlist_field 'authors'`` returns ``'1'`` if any author "
"matches the regular expression ``asimov``, e.g., `Asimov, Isaac` or `Isaac "
"Asimov`, otherwise ``''``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:458
msgid ""
"``program: 'asimov$' inlist_field 'authors'`` returns ``'1'`` if any author "
"matches the regular expression ``asimov$``, e.g., `Isaac Asimov`, otherwise "
"``''``. It doesn't match `Asimov, Isaac` because of the ``$`` anchor in the "
"regular expression."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:459
msgid ""
"``program: if field('series') != 'foo' then 'bar' else 'mumble' fi`` returns"
" ``'bar'`` if the book's series is not `foo`. Otherwise it returns "
"``'mumble'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:460
msgid ""
"``program: if field('series') == 'foo' || field('series') == '1632' then "
"'yes' else 'no' fi`` returns ``'yes'`` if series is either `foo` or `1632`, "
"otherwise ``'no'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:461
msgid ""
"``program: if '^(foo|1632)$' in field('series') then 'yes' else 'no' fi`` "
"returns ``'yes'`` if series is either `foo` or `1632`, otherwise ``'no'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:462
msgid ""
"``program: if 11 > 2 then 'yes' else 'no' fi`` returns ``'no'`` because the "
"``>`` operator does a lexical comparison."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:463
msgid ""
"``program: if 11 ># 2 then 'yes' else 'no' fi`` returns ``'yes'`` because "
"the ``>#`` operator does a numeric comparison."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:465
msgid "**Functions in General Program Mode**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:467
msgid ""
"See :ref:`template_functions_reference` for the list of functions built into"
" the template language."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:471
msgid ""
"As opposed to :ref:`Single Function Mode <single_mode>`, in General Program "
"Mode you must specify the first parameter ``value``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:472
msgid "All parameters are expression_lists (see the grammar above)."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:477
msgid "More complex programs in template expressions - Template Program Mode"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:479
msgid ""
"`Template Program Mode` (`TPM`) is a blend of :ref:`General Program Mode "
"<general_mode>` and :ref:`Single Function Mode <single_mode>`. `TPM` differs"
" from Single Function Mode in that it permits writing template expressions "
"that refer to other metadata fields, use nested functions, modify variables,"
" and do arithmetic. It differs from `General Program Mode` in that the "
"template is contained between ``{`` and ``}`` characters and doesn't begin "
"with the word ``program:``. The program portion of the template is a General"
" Program Mode expression list."
msgstr "“模板程序模式”(“TPM”) 是“通用程序模式 <general_mode>”和“单功能模式 <single_mode>”的混合。 “TPM”与单函数模式的不同之处在于它允许编写引用其他元数据字段的模板表达式、使用嵌套函数、修改变量和进行算术。 它与“通用程序模式”的不同之处在于，模板包含在“{”和“}”字符之间，并且不以单词“program:”开头。 模板的程序部分是通用程序模式表达式列表。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:482
msgid ""
"Example: assume you want a template to show the series for a book if it has "
"one, otherwise show the value of a custom field #genre. You cannot do this "
"in the :ref:`Single Function Mode <single_mode>` because you cannot make "
"reference to another metadata field within a template expression. In `TPM` "
"you can, as the following expression demonstrates::"
msgstr "示例：假设您希望模板显示一本书的系列，如果有，否则显示自定义字段 #genre 的值。 您无法在“单函数模式 <single_mode>”中执行此操作，因为您无法引用模板表达式中的另一个元数据字段。 在“TPM”中，您可以，如以下表达式所示："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:487
msgid "The example shows several things:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:489
msgid ""
"`TPM` is used if the expression begins with ``:'`` and ends with ``'}``. "
"Anything else is assumed to be in :ref:`Single Function Mode <single_mode>`."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:491
msgid ""
"If the template contains a prefix and suffix, the expression ends with "
"``'|`` where the ``|`` is the delimiter for the prefix. Example::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:495
msgid ""
"Functions must be given all their arguments. For example, the standard "
"built-in functions must be given the initial parameter ``value``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:496
msgid ""
"The variable ``$`` is usable as the ``value`` argument and stands for the "
"value of the field named in the template, ``series`` in this case."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:497
msgid "white space is ignored and can be used anywhere within the expression."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:498
msgid ""
"constant strings are enclosed in matching quotes, either ``'`` or ``\"``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:500
msgid ""
"In `TPM`, using ``{`` and ``}`` characters in string literals can lead to "
"errors or unexpected results because they confuse the template processor. It"
" tries to treat them as template expression boundaries, not characters. In "
"some but not all cases you can replace a ``{`` with ``[[`` and a ``}`` with "
"`]]`. Advice: if your program contains ``{`` and ``}`` characters then you "
"should use `General Program Mode`."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:505
msgid "Python Template Mode"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:507
msgid ""
"Python Template Mode (PTM) lets you write templates using native Python and "
"the `calibre API <https://manual.calibre-ebook.com/develop.html#api-"
"documentation-for-various-parts-of-calibre>`_. The database API will be of "
"most use; further discussion is beyond the scope of this manual. PTM "
"templates are faster and can do more complicated operations but you must "
"know how to write code in Python using the calibre API."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:509
msgid "A PTM template begins with:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:527
msgid ""
"You can add the above text to your template using the context menu, usually "
"accessed with a right click. The comments are not significant and can be "
"removed. You must use python indenting."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:529
msgid ""
"The context object supports ``str(context)`` that returns a string of the "
"context's contents, and ``context.attributes`` that returns a list of the "
"attribute names in the context."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:531
msgid ""
"The ``context.funcs`` attribute allows calling Built-in and User template "
"functions, and Stored GPM/Python templates, so that you can execute them "
"directly in your code. The functions are retrieved using their names. If the"
" name conflicts with a Python keyword, add an underscore to the end of the "
"name. Examples:"
msgstr "``context.funcs`` 属性允许调用内置和用户模板函数以及存储的 GPM/Python 模板，以便您可以直接在代码中执行它们。 使用函数的名称来检索函数。 如果名称与 Python 关键字冲突，请在名称末尾添加下划线。 例子："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:538
msgid ""
"Here is an example of a PTM template that produces a list of all the authors"
" for a series. The list is stored in a `Column built from other columns, "
"behaves like tags`. It shows in :guilabel:`Book details` and has the "
":guilabel:`on separate lines` checked (in :guilabel:`Preferences->Look & "
"feel->Book details`). That option requires the list to be comma-separated. "
"To satisfy that requirement the template converts commas in author names to "
"semicolons then builds a comma-separated list of authors. The authors are "
"then sorted, which is why the template uses author_sort."
msgstr "以下是 PTM 模板的示例，该模板生成一个系列的所有作者的列表。 该列表存储在“从其他列构建的列，行为类似于标签”中。 它显示在“书籍详细信息”中，并选中“在单独的行上”（在“首选项->外观->书籍详细信息”中）。 该选项要求列表以逗号分隔。 为了满足该要求，模板将作者姓名中的逗号转换为分号，然后构建以逗号分隔的作者列表。 然后对作者进行排序，这就是模板使用author_sort的原因。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:559
msgid "The output in :guilabel:`Book details` looks like this:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:561
msgid "E-book conversion dialog"
msgstr "电子书转换对话"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:569
msgid "Templates and URLs"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:571
msgid "You can use templates to construct URLs. Two cases are described here:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:573
msgid "Custom column :guilabel:`Book details` search URLs"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:574
msgid "The calibre URL scheme"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:576
msgid "**Custom column book details search URLs**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:578
msgid ""
"When you create a custom column you can provide a URL to be used in "
":guilabel:`Book details` using a template. For example, if you have a custom"
" column for `Translators` you can define a URL to take you to a site for "
"translators. Book details search URLs can be provided for `Text`, "
"`Enumerated`, `Series`, and `Column built from other column` column types."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:580
msgid ""
"When an item with a `search template` is clicked in :guilabel:`Book details`"
" the template is evaluated. It is provided the normal book metadata. It is "
"also provided three additional fields:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:582
msgid "``item_value``: the value of the clicked item."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:583
msgid ""
"``item_value_quoted``: the value of clicked item, URL-encoded. Special "
"characters are escaped to make them valid in URLs and spaces are replaced by"
" ``'+'`` (plus) signs."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:584
msgid ""
"``item_value_no_plus``: the value of clicked item, URL-encoded. Special "
"characters are escaped to make them valid in URLs and spaces are replaced by"
" the ``%20``, not plus."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:586
msgid ""
"There are several ways to construct the URL. The following use Wikipedia as "
"an example."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:588
msgid "The simplest is a basic template::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:592
msgid ""
"In some cases you might want to do more processing. There are four template "
"functions you can use, depending on the complexity of the processing."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:599
msgid ""
"For example, assume you have a custom column `Translators` "
"(``#translators``) where the names are `Last name, First name`. You might "
"need to convert the name to `First name Last name` when creating the URL. "
"You can use the :ref:`ff_make_url` function to do this::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:603
msgid ""
"If we assume that the translator's name is `Boy-Żeleński, Tadeusz` then the "
"above template produces the link::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:607
msgid ""
"Note that the person's first name is now first, the space is now a plus, and"
" that the non-English characters in the last name are URL-encoded."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:609
msgid ""
"The functions :ref:`ff_make_url_extended`, :ref:`ff_query_string`, and "
":ref:`ff_encode_for_url` might be useful depending upon any additional "
"processing complexity."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:611
msgid "**The calibre URL scheme**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:613
msgid ""
"Calibre supports several different URLs to navigate your calibre libraries. "
"This section shows how to use templates to construct some of the URLs. See "
":doc:`url_scheme` for details on the URLs available."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:616
msgid "Switch to a specific library. The syntax of this URL is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:620
msgid ""
"``Library_Name`` must be replaced with the name of the calibre library you "
"wish to open. The library name is shown in the title bar of the window. It "
"is a simple name, not the file path to the library. You must spell it as "
"shown in the title bar, including letter case. The character ``_`` "
"(underscore) stands for the current library. If the name contains any spaces"
" or special characters then it must be hex encoded using the "
":ref:`ff_to_hex` function, as in the following example::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:628
msgid "The template generates the URL::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:632
msgid ""
"You can replace the ``current_library_name()`` function with the actual name"
" of the library, as in::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:636
msgid ""
"Links to show books. These links select a book in the calibre library. The "
"syntax for this URL is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:640
msgid ""
"The ``book id`` is the numeric calibre id for the book, available to "
"templates as ``$id``. As above, the library name might need to be hex "
"encoded. Here is an example::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:645
msgid "It produces the URL::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:649
msgid ""
"Searching for books. These links search for books in the specified calibre "
"library. The syntax for this URL is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:654
msgid ""
"where `query` is any valid calibre search expression. You must hex encode "
"any query containing spaces or special characters, which generally means all"
" of them. For example, the calibre search expression for searching for a "
"hierarchical tag beginning with 'AA' is ``tags:\"=.AA\"``. This template "
"constructs a search URL for that expression::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:660
msgid "The resulting URL is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:664
msgid ""
"Here is an example of the same URL built using the "
":ref:``ff_make_url_extended`` function instead of :ref:`ff_strcat`::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:669
msgid ""
"Open a book details window on a book in some library. The syntax for this "
"URL is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:673
msgid "An example template is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:677
#: ../../../__w/calibre/calibre/manual/template_lang.rst:694
msgid "which produces the URL::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:681
msgid ""
"Open the notes associated with an author/series/etc. The syntax of the URL "
"is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:686
msgid ""
"``Field_Name`` is the lookup name of the field. If the field is a custom "
"column then replace the ``#`` character with an underscore (``_``). "
"``Item_Id`` is the internal numeric ID of the value in the field. There "
"isn't a template function that returns the ``Item_Id``, so templates will "
"normally use the second form, ``Hex_Encoded_Item_Name``. Here is a sample "
"template that opens the note for the person ``Boy-Żeleński, Tadeusz`` in the"
" field ``#authtest``::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:700
msgid "Stored templates"
msgstr "保存的模板"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:702
msgid ""
"Both :ref:`General Program Mode <general_mode>` and :ref:`Python Template "
"Mode <python_mode>` support saving templates and calling those templates "
"from another template, much like calling stored functions. You save "
"templates using :guilabel:`Preferences->Advanced->Template functions`. More "
"information is provided in that dialog. You call a template the same way you"
" call a function, passing positional arguments if desired. An argument can "
"be any expression. Examples of calling a template, assuming the stored "
"template is named ``foo``:"
msgstr "“通用程序模式 <general_mode>”和“Python 模板模式 <python_mode>”都支持保存模板并从另一个模板调用这些模板，就像调用存储的函数一样。 您可以使用“首选项->高级->模板功能”保存模板。 该对话框中提供了更多信息。 您可以像调用函数一样调用模板，并根据需要传递位置参数。 参数可以是任何表达式。 调用模板的示例，假设存储的模板名为“foo”："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:704
msgid "``foo()`` -- call the template passing no arguments."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:705
msgid ""
"``foo(a, b)`` call the template passing the values of the two variables "
"``a`` and ``b``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:706
msgid ""
"``foo(if field('series') then field('series_index') else 0 fi)`` -- if the "
"book has a ``series`` then pass the ``series_index``, otherwise pass the "
"value ``0``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:708
msgid ""
"In GPM you retrieve the arguments passed in the call to the stored template "
"using the ``arguments`` function. It both declares and initializes local "
"variables, effectively parameters. The variables are positional; they get "
"the value of the parameter given in the call in the same position. If the "
"corresponding parameter is not provided in the call then ``arguments`` "
"assigns that variable the provided default value. If there is no default "
"value then the variable is set to the empty string. For example, the "
"following ``arguments`` function declares 2 variables, ``key``, "
"``alternate``::"
msgstr "在 GPM 中，您可以使用“arguments”函数检索在调用存储模板时传递的参数。 它声明并初始化局部变量，即有效的参数。 变量是位置变量； 他们在同一位置获取调用中给出的参数值。 如果调用中未提供相应的参数，则“arguments”会为该变量分配提供的默认值。 如果没有默认值，则该变量将设置为空字符串。 例如，以下“arguments”函数声明 2 个变量“key”、“alternate”："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:712
msgid "Examples, again assuming the stored template is named ``foo``:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:714
msgid ""
"``foo('#myseries')`` -- argument ``key`` is assigned the value "
"``'myseries'`` and the argument ``alternate`` is assigned the default value "
"``'series'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:715
msgid ""
"``foo('series', '#genre')`` the variable ``key`` is assigned the value "
"``'series'`` and the variable ``alternate`` is assigned the value "
"``'#genre'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:716
msgid ""
"``foo()`` -- the variable ``key`` is assigned the empty string and the "
"variable ``alternate`` is assigned the value ``'series'``."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:718
msgid ""
"In PTM the arguments are passed in the ``arguments`` parameter, which is a "
"list of strings. There isn't any way to specify default values. You must "
"check the length of the ``arguments`` list to be sure that the number of "
"arguments is what you expect."
msgstr "在PTM中，参数在“arguments”参数中传递，该参数是字符串列表。没有任何方法可以指定默认值。您必须检查“参数”列表的长度，以确保参数的数量符合您的期望。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:720
msgid ""
"An easy way to test stored templates is using the ``Template tester`` "
"dialog. For ease of access give it a keyboard shortcut in "
":guilabel:`Preferences->Advanced->Keyboard shortcuts->Template tester`. "
"Giving the ``Stored templates`` dialog a shortcut will help switching more "
"rapidly between the tester and editing the stored template's source code."
msgstr "测试存储模板的一种简单方法是使用“模板测试器”对话框。 为了便于访问，请在“首选项->高级->键盘快捷键->模板测试器”中为其提供键盘快捷键。 为“存储的模板”对话框提供快捷方式将有助于在测试器和编辑存储的模板的源代码之间更快地切换。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:723
msgid "Providing additional information to templates"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:725
msgid ""
"A developer can choose to pass additional information to the template "
"processor, such as application-specific book metadata or information about "
"what the processor is being asked to do. A template can access this "
"information and use it during the evaluation."
msgstr "开发人员可以选择将附加信息传递给模板处理器，例如应用程序特定的书籍元数据或有关处理器被要求执行什么的信息。模板可以访问此信息并在评估期间使用它。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:727
msgid "**Developer: how to pass additional information**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:729
msgid ""
"The additional information is a Python dictionary containing pairs "
"``variable_name: variable_value`` where the values must be strings. The "
"template can access the dictionary, creating template local variables named "
"``variable_name`` containing the value ``variable_value``. The user cannot "
"change the name so it is best to use names that won't collide with other "
"template local variables, for example by prefixing the name with an "
"underscore."
msgstr "附加信息是一个包含“变量名：变量值”对的 Python 字典，其中值必须是字符串。 模板可以访问字典，创建名为“variable_name”的模板局部变量，其中包含值“variable_value”。 用户无法更改名称，因此最好使用不会与其他模板局部变量冲突的名称，例如在名称前添加下划线。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:731
msgid ""
"This dictionary is passed to the template processor (the ``formatter``) "
"using the named parameter ``global_vars=your_dict``. The full method "
"signature is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:739
msgid "**Template writer: how to access the additional information**"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:741
msgid ""
"You access the additional information (the ``globals`` dictionary) in a "
"template using the template function::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:745
msgid ""
"where ``id`` is any legal variable name. This function checks whether the "
"additional information provided by the developer contains the name. If it "
"does then the function assigns the provided value to a template local "
"variable with that name. If the name is not in the additional information "
"and if an ``expression`` is provided, the ``expression`` is evaluated and "
"the result is assigned to the local variable. If neither a value nor an "
"expression is provided, the function assigns the empty string (``''``) to "
"the local variable."
msgstr "其中“id”是任何合法的变量名称。 该函数检查开发者提供的附加信息中是否包含该名称。 如果是，则该函数将提供的值分配给具有该名称的模板局部变量。 如果附加信息中没有该名称，并且提供了“表达式”，则计算“表达式”并将结果分配给局部变量。 如果既没有提供值也没有提供表达式，函数会将空字符串 (``''``) 分配给局部变量。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:747
msgid ""
"A template can set a value in the ``globals`` dictionary using the template "
"function::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:751
msgid ""
"This function sets the ``globals`` dictionary key:value pair ``id:value`` "
"where ``value`` is the value of the template local variable ``id``. If that "
"local variable doesn't exist then ``value`` is set to the result of "
"evaluating ``expression``."
msgstr "此函数用于设置“全局范围”词典，key:value配对``id:value`` ，其中“value”是模板局部变量“id”的值。如果该局部变量不存在，则将“value”设置为“表达式”的求值结果。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:754
msgid "Notes on the difference between modes"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:756
msgid ""
"The three program modes, :ref:`Single Function Mode <single_mode>` (SFM), "
":ref:`Template Program Mode <template_mode>` (`TPM`), and :ref:`General "
"Program Mode <general_mode>` (`GPM`), work differently. SFM is intended to "
"be 'simple' so it hides a lot of programming language bits."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:758
msgid "Differences:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:760
msgid ""
"In SFM the value of the column is always passed as an 'invisible' first "
"argument to a function included in the template."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:761
msgid ""
"SFM doesn't support the difference between variables and strings; all values"
" are strings."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:762
msgid ""
"The following SFM template returns either the series name or the string \"no"
" series\"::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:766
msgid "The equivalent template in `TPM` is ::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:770
msgid "The equivalent template in `GPM` is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:774
msgid ""
"The first argument to ``ifempty`` is the value of the field ``series``. The "
"second argument is the string ``no series``. In SFM the first argument, the "
"value of the field, is automatically passed (the invisible argument)."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:775
msgid ""
"Several template functions, for example ``booksize()`` and "
"``current_library_name()``, take no arguments. Because of the 'invisible "
"argument' you cannot use these functions in SFM."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:776
msgid ""
"Nested functions, where a function calls another function to compute an "
"argument, cannot be used in SFM. For example this template, intended to "
"return the first 5 characters of the series value uppercased, won't work in "
"SFM::"
msgstr "嵌套函数，指其中一个函数调用另一个函数来计算参数，不能在SFM中使用。例如，此模板旨在返回升级后的系列值的前5个字符，在SFM中不起作用："

#: ../../../__w/calibre/calibre/manual/template_lang.rst:780
msgid ""
"`TPM` and `GPM` support nested functions. The above template in `TPM` would "
"be::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:784
msgid "In `GPM` it would be::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:788
msgid ""
"As noted in the above :ref:`Template Program Mode <template_mode>` section, "
"using ``{`` and ``}`` characters in `TPM` string literals can lead to errors"
" or unexpected results because they confuse the template processor. It tries"
" to treat them as template boundaries, not characters. In some but not all "
"cases you can replace a ``{`` with ``[[`` and a ``}`` with `]]`. Generally, "
"if your program contains ``{`` and ``}`` characters then you should use "
"`General Program Mode`."
msgstr "如上面“模板程序模式 1”部分所述，在“TPM”字符串文字中使用“{”和“}”字符可能会导致错误或意外结果，因为它们会混淆模板处理器。 它尝试将它们视为模板边界，而不是字符。 在某些情况下，但不是所有情况下，您可以将 ``{`` 替换为 ``[[`` ，将 ``}`` 替换为 `]]` 。 一般来说，如果您的程序包含“{”和“}”字符，那么您应该使用“通用程序模式”。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:792
msgid "User-defined Python template functions"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:794
msgid ""
"You can add your own Python functions to the template processor. Such "
"functions can be used in any of the three template programming modes. The "
"functions are added by going to :guilabel:`Preferences -> Advanced -> "
"Template functions`. Instructions are shown in that dialog. Note that you "
"can use `Python Templates` for a similar purpose. As calling user-defined "
"functions is faster than calling a Python template, user-defined functions "
"might be more efficient depending on the complexity of what the function or "
"template does."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:797
msgid "Special notes for using templates in different contexts"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:799
msgid ""
"In the GUI (:guilabel:`Columns made from other columns` and "
":guilabel:`Template searches`):"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:801
msgid "GPM templates work as before."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:802
msgid "Python templates have full access to the calibre database."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:804
msgid "In icon rules:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:806
msgid ""
"icon rule templates have no book data so field-based functions such as "
":ref:`ff_format_date_field`, :ref:`ff_list_count_field`, and "
":ref:`ff_check_yes_no` won't work."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:808
msgid "In the Content server:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:810
msgid ""
"Templates have access to the new API but not the old API (LibraryDatabase)."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:811
msgid ""
"Because of the above, the following formatter functions are not guaranteed "
"to work in GPM templates (composite columns, icon rules, etc) and should be "
"avoided if you use the content server:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:813
msgid ":ref:`ff_connected_device_name`"
msgstr ":ref:`ff_connected_device_name`"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:814
msgid ":ref:`ff_connected_device_uuid`"
msgstr ":ref:`ff_connected_device_uuid`"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:815
msgid ":ref:`ff_current_virtual_library_name`"
msgstr ":ref:`ff_current_virtual_library_name`"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:816
msgid ":ref:`ff_is_marked`"
msgstr ":ref:`ff_is_marked`"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:817
msgid ":ref:`ff_virtual_libraries`"
msgstr ":ref:`ff_virtual_libraries`"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:820
msgid "Special notes for save/send templates"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:822
msgid ""
"Special processing is applied when a template is used in a :guilabel:`Save "
"to disk` or :guilabel:`Send to device` template. The values of the fields "
"are cleaned, replacing characters that are special to file systems with "
"underscores, including slashes. This means that field text cannot be used to"
" create folders. However, slashes are not changed in prefix or suffix "
"strings, so slashes in these strings will cause folders to be created. "
"Because of this, you can create variable-depth folder structure."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:824
msgid ""
"For example, assume we want the folder structure `series/series_index - "
"title`, with the caveat that if series does not exist, then the title should"
" be in the top folder. The template to do this is::"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:828
msgid "The slash and the hyphen appear only if series is not empty."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:830
msgid ""
"The lookup function lets us do even fancier processing. For example, assume "
"that if a book has a series, then we want the folder structure "
"`series/series index - title.fmt`. If the book does not have a series then "
"we want the folder structure `genre/author_sort/title.fmt`. If the book has "
"no genre then we want to use 'Unknown'. We want two completely different "
"paths, depending on the value of series."
msgstr "查找功能让我们可以进行更高级的处理。 例如，假设一本书有一个系列，那么我们需要文件夹结构“系列/系列索引 - title.fmt”。 如果这本书没有系列，那么我们需要文件夹结构“genre/author_sort/title.fmt”。 如果这本书没有类型，那么我们想使用“未知”。 我们想要两条完全不同的路径，具体取决于系列的值。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:832
msgid "To accomplish this, we:"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:834
msgid ""
"Create a composite field (give it lookup name #aa) containing "
"``{series}/{series_index} - {title}``. If the series is not empty, then this"
" template will produce `series/series_index - title`."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:835
msgid ""
"Create a composite field (give it lookup name #bb) containing "
"``{#genre:ifempty(Unknown)}/{author_sort}/{title}``. This template produces "
"`genre/author_sort/title`, where an empty genre is replaced with `Unknown`."
msgstr "创建一个包含“{#genre：ifempty（Unknown）}/{Author_sort}/{title}'的复合字段（为其查找名称#bb）。此模板生成“genre/Author_sort/title”，其中空的genre被“Unknown”替换。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:836
msgid ""
"Set the save template to ``{series:lookup(.,#aa,#bb)}``. This template "
"chooses composite field ``#aa`` if series is not empty and composite field "
"``#bb`` if series is empty. We therefore have two completely different save "
"paths, depending on whether or not `series` is empty."
msgstr "将保存模板设置为“{series:lookup（.，#aa，#bb）}`”。如果系列不为空，则此模板选择复合字段“#aa”，如果系列为空，请选择复合字段。因此，根据“系列”是否为空，我们有两个完全不同的保存路径。"

#: ../../../__w/calibre/calibre/manual/template_lang.rst:839
msgid "Tips"
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:841
msgid ""
"Use the Template Tester to test templates. Add the tester to the context "
"menu for books in the library and/or give it a keyboard shortcut."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:842
msgid ""
"Templates can use other templates by referencing composite columns built "
"with the desired template. Alternatively, you can use Stored Templates."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:843
msgid ""
"In a plugboard, you can set a field to empty (or whatever is equivalent to "
"empty) by using the special template ``{}``. This template will always "
"evaluate to an empty string."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:844
msgid ""
"The technique described above to show numbers even if they have a zero value"
" works with the standard field series_index."
msgstr ""

#: ../../../__w/calibre/calibre/manual/template_lang.rst:849
msgid "Template function reference"
msgstr "模板函数参考"
