# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Kevin Jin <kevin.defan@gmail.com>, 2016
# tony shen <anthanny@hotmail.com>, 2024
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-28 11:32+0000\n"
"PO-Revision-Date: 2015-01-10 01:24+0000\n"
"Last-Translator: tony shen <anthanny@hotmail.com>, 2024\n"
"Language-Team: Chinese (China) (http://app.transifex.com/calibre/calibre/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../__w/calibre/calibre/manual/snippets.rst:2
msgid "Snippets"
msgstr "片段"

#: ../../__w/calibre/calibre/manual/snippets.rst:6
msgid ""
"The calibre E-book editor supports *snippets*. A snippet is a piece of text "
"that is either re-used often or contains a lot of redundant text. The editor"
" allows you to insert a snippet with only a few key strokes. For example, "
"suppose you often find yourself inserting link tags when editing HTML files,"
" then you can simply type ``<a`` in the editor and press |ct|. The editor "
"will expand it to::"
msgstr "Calibre电子书编辑器支持*代码片段*。片段是一段经常重复使用或包含大量冗余文本的文本。该编辑器使您能够只需敲击几次键盘即可插入代码段。例如，假设您经常在编辑HTML文件时插入链接标记，那么您只需在编辑器中键入``<a``，然后按|ct|即可。编辑将其展开为："

#: ../../__w/calibre/calibre/manual/snippets.rst:15
msgid ""
"Not only that, the word ``filename`` will be selected, with the cursor "
"placed over it, so that you can easily type in the real filename, using the "
"editor's nifty :ref:`editor_auto_complete` feature. And once you are done "
"typing the filename, press |ct| again and the cursor will jump to the "
"position in between the ``<a>`` tags so you can easily type in the text for "
"the link."
msgstr "不仅如此，“文件名”一词如被选中，并将光标放在它上面，这样您就可以使用编辑器漂亮的“自动完成编辑”功能轻松输入真实的文件名。一旦您输入完文件名，再次按|ct|，光标将跳到<a>标记之间的位置，这样您就可以轻松地输入链接的文本。"

#: ../../__w/calibre/calibre/manual/snippets.rst:21
msgid ""
"The snippets system in the editor is very sophisticated, there are a few "
"built-in snippets and you can create your own to suit your editing style."
msgstr "编辑器中的代码片段系统非常复杂，有几个内置的代码片段，您可以创建自己的代码片段来适应您的编辑风格。"

#: ../../__w/calibre/calibre/manual/snippets.rst:24
msgid ""
"The following discussion of the built-in snippets should help illustrate the"
" power of the snippets system."
msgstr "下面关于内置代码段的讨论应该有助于说明代码段系统的强大功能。"

#: ../../__w/calibre/calibre/manual/snippets.rst:28
msgid ""
"You can also use snippets in the text entry fields in the :guilabel:`Search "
"& replace` panel, however, placeholders (using |ct| to jump around) will not"
" work."
msgstr "您也可以在`搜索和替换`面板的文本输入字段中使用代码片段，但是占位符(使用|ct|跳转)不起作用。"

#: ../../__w/calibre/calibre/manual/snippets.rst:33
msgid "The built-in snippets"
msgstr "内置代码段"

#: ../../__w/calibre/calibre/manual/snippets.rst:35
msgid ""
"The built-in snippets are described below. Note that you can override them "
"by creating your own snippets with the same trigger text."
msgstr "内置的代码片段如下所述。请注意，您可以通过使用相同的触发器文本创建您自己的代码段来覆盖它们。"

#: ../../__w/calibre/calibre/manual/snippets.rst:39
msgid "Inserting filler text [Lorem]"
msgstr "插入填充文字[Lorem]"

#: ../../__w/calibre/calibre/manual/snippets.rst:41
msgid ""
"The first built-in snippet, and the simplest is used to insert filler text "
"into a document. The filler text is taken from `De finibus bonorum et "
"malorum <https://en.wikipedia.org/wiki/De_finibus_bonorum_et_malorum>`_ a "
"philosophical work by Cicero (translated to English). To use it simply type "
"``Lorem`` in an HTML file and press |ct|. It will be replaced by a couple of"
" paragraphs of filler."
msgstr "第一个内置代码段，也是最简单的，用于将填充文本插入到文档中。填充文摘自\"《善与恶的终结》<https://en.wikipedia.org/wiki/De_finibus_bonorum_et_malorum>\"_这是西塞罗的一部哲学著作(翻译成英文)。要使用它，只需在HTML文件中键入“Lorem”，然后按|ct|。它将被几段填充文字所取代。"

#: ../../__w/calibre/calibre/manual/snippets.rst:48
msgid ""
"The definition of this snippet is very simple, the trigger text is defined "
"as ``Lorem`` and the template is defined simply as the literal text to be "
"inserted. You can easily customize it to use your favorite form of filler "
"text."
msgstr "这段代码的定义非常简单，触发器文本被定义为``Lorem``，模板被简单定义为要插入的文字文本。您可以轻松地对其进行定制，以使用您最喜欢的填充文本形式。"

#: ../../__w/calibre/calibre/manual/snippets.rst:53
msgid "Inserting a self-closing HTML tag [<>]"
msgstr "插入自闭合HTML标签 [<>]"

#: ../../__w/calibre/calibre/manual/snippets.rst:55
msgid ""
"Now let's look at a simple example of the powerful concept of "
"*placeholders*. Say you want to insert the self-closing tag ``<hr/>``. Just "
"type ``<>``, and press |ct|, the editor will expand the snippet to::"
msgstr "现在让我们来看一个简单的例子，它展示了*占位符*这个强大的概念。假设您想要插入自动结束标记``<hr/>``。只需键入``<>``，然后按|ct|，编辑器将扩展代码片段为："

#: ../../__w/calibre/calibre/manual/snippets.rst:61
msgid ""
"Here, the ``|`` symbol represents the current cursor position. You can then "
"type ``hr`` and press |ct| to move the cursor to after the end of the tag. "
"This snippet is defined as::"
msgstr "这里，“|”符号表示当前光标位置。然后，您可以键入“hr”，然后按|ct|将光标移动到标记的末尾。此代码段定义为："

#: ../../__w/calibre/calibre/manual/snippets.rst:68
msgid ""
"Placeholders are simply the dollar ($) sign followed by a number. When the "
"snippet is expanded by pressing |ct| the cursor is positioned at the first "
"placeholder (the placeholder with the lowest number). When you press |ct| "
"again the cursor jumps to the next placeholder (the placeholder with the "
"next higher number)."
msgstr "占位符只是美元($)符号后面跟着一个数字。按|ct|展开代码段时，光标位于第一个占位符(数字最小的占位符)。再次按|ct|时，光标会跳到下一个占位符(数字较大的占位符)。"

#: ../../__w/calibre/calibre/manual/snippets.rst:75
msgid "Inserting an HTML link tag [<a]"
msgstr "插入HTML链接标记[<a]"

#: ../../__w/calibre/calibre/manual/snippets.rst:77
msgid ""
"HTML link tags all share a common structure. They have an ``href`` attribute"
" and some text between the opening and closing tags. A snippet to make "
"typing them more efficient will introduce us to some more features of "
"placeholders. To use this snippet, simply type ``<a`` and press |ct|. The "
"editor will expand this to::"
msgstr "所有的HTML链接标记都共享一个公共结构。它们有一个``href`‘属性，在开始标记和结束标记之间有一些文本。一段让输入效率更高的代码片段将向我们介绍占位符的一些更多功能。要使用此代码段，只需键入``<a``，然后按|ct|。编辑会将其扩展为："

#: ../../__w/calibre/calibre/manual/snippets.rst:85
msgid ""
"Not only that, the word ``filename`` will be selected, with the cursor "
"placed over it, so that you can easily type in the real filename, using the "
"editor's nifty :ref:`editor_auto_complete` feature. And once you are done "
"typing the filename, press |ct| again and the cursor will jump to the "
"position in between the ``<a>`` tags so you can easily type in the text for "
"the link. After you are done typing the text, press |ct| again to jump to "
"the point after the closing tag.  This snippet is defined as::"
msgstr "不仅如此，如选中单词``文件名``，并将光标放在该单词上，这样您就可以使用该编辑器的；编辑器自动插入”功能轻松地输入真实的文件名。一旦你输入完文件名，再按|ct|，光标就会跳到“<a>”标记之间的位置，这样你就可以轻松地输入链接的文本。输入完文本后，再次按|ct|可跳到结束标记之后的位置。此代码段定义为："

#: ../../__w/calibre/calibre/manual/snippets.rst:96
msgid ""
"There are a couple of new features here. First the ``$1`` placeholder has "
"become more complex. It now includes some *default text* (the word "
"``filename``). If a placeholder contains default text, the default text is "
"substituted for the placeholder when the snippet is expanded. Also when you "
"jump to a placeholder with default text using |ct|, the default text is "
"selected. In this way, you can use default text to act as a reminder to you "
"to fill in important parts of the template. You can specify default text for"
" a placeholder by using the syntax: ``${<number>:default text}``."
msgstr "这里有几个新功能。首先，``$1``占位符变得更加复杂。它现在包括一些*默认文本*(单词``文件名``)。如果占位符包含默认文本，则在展开代码段时将用默认文本替换该占位符。此外，当您使用|ct|跳到具有默认文本的占位符时，默认文本也会被选中。通过这种方式，您可以使用默认文本来提醒您填写模板的重要部分。您可以使用以下语法为占位符指定默认文本：``${<number>：默认文本}``。"

#: ../../__w/calibre/calibre/manual/snippets.rst:105
msgid ""
"The other new feature is that the second placeholder has an asterisk after "
"it (``${2*}``). This means that any text that was selected before expanding "
"the template is substituted for the placeholder. To see this in action, "
"select some text in the editor, press |ct|, type ``<a`` and press |ct| "
"again, the template will be expanded to::"
msgstr "另一个新特性是，第二个占位符后面有一个星号(``${2*}``)。这意味着在展开模板之前选择的任何文本都将替换占位符。要查看实际操作，请在编辑器中选择一些文本，按|ct|，键入``<a``，然后再次按|ct|，模板将扩展为："

#: ../../__w/calibre/calibre/manual/snippets.rst:114
msgid "Inserting a HTML image tag [<i]"
msgstr "插入HTML图像标记[<i]"

#: ../../__w/calibre/calibre/manual/snippets.rst:116
msgid ""
"This is very similar to inserting an HTML link, as we saw above. It allows "
"you to quickly input an ``<img src=\"filename\" alt=\"description\" />`` tag"
" and jump between the ``src`` and ``alt`` attributes::"
msgstr "这非常类似于插入一个HTML链接，正如我们在上面看到的。它允许您快速输入``<img src=\"filename\" alt=\"description\" />``标签并在``src`和``alt`属性之间跳转："

#: ../../__w/calibre/calibre/manual/snippets.rst:124
msgid "Insert an arbitrary HTML tag [<<]"
msgstr "插入任意的HTML标记[<<]"

#: ../../__w/calibre/calibre/manual/snippets.rst:126
msgid ""
"This allows you to insert an arbitrary full HTML tag (or wrap previously "
"selected text in the tag). To use it, simply type ``<<`` and press |ct|. The"
" editor will expand it to::"
msgstr "这允许您插入任意完整的HTML标签(或在标签中换行先前选择的文本)。要使用它，只需键入``<<``，然后按|ct|。编辑器将其扩展为："

#: ../../__w/calibre/calibre/manual/snippets.rst:132
msgid ""
"Type the tag name, for example: ``span`` and press |ct|, that will result "
"in::"
msgstr "键入标记名称，例如：“span”，然后按|ct|，结果如下："

#: ../../__w/calibre/calibre/manual/snippets.rst:136
msgid ""
"You will note that the closing tag has been automatically filled with "
"``span``. This is achieved with yet another feature of placeholders, "
"*mirroring*. Mirroring simply means that if you specify the sample "
"placeholder more than once in a template, the second and all later positions"
" will be automatically filled in with whatever you type in the first "
"position, when you press |ct|. The definition for this snippet is::"
msgstr "您会注意到，结束标记已自动填充了``span``。这是通过占位符的另一个功能*镜像*实现的。镜像只是指，如果您在模板中多次指定样例占位符，则当您按|ct|时，将自动使用您在第一个位置键入的任何内容填充第二个和所有后面的位置。此代码段的定义为："

#: ../../__w/calibre/calibre/manual/snippets.rst:146
msgid ""
"As you can see, the first placeholder ($1) has been specified twice, the "
"second time in the closing tag, which will simply copy whatever you type in "
"the opening tag."
msgstr "正如您所看到的，第一个占位符（$1）已经指定了两次，第二次是在结束标记中，这将简单地复制您在开始标记中键入的内容。"

#: ../../__w/calibre/calibre/manual/snippets.rst:151
msgid "Inserting an arbitrary HTML tag with a class attribute [<c]"
msgstr "插入带有类属性的任意HTML标记[<c]"

#: ../../__w/calibre/calibre/manual/snippets.rst:153
msgid ""
"This is very similar to the insert arbitrary tag example above, except that "
"it assumes that you want to specify a class for the tag::"
msgstr "这与上面的插入任意标记示例非常相似，不同之处在于它假定您要为标记指定一个类："

#: ../../__w/calibre/calibre/manual/snippets.rst:159
msgid ""
"This will allow you to first type the tag name, press |ct|, type the class "
"name, press |ct| type the contents of the tag and press |ct| one last time "
"to jump out of the tag. The closing tag will be auto-filled."
msgstr "这将允许您首先键入标记名，按|ct|，键入类名，按|ct |键入标记的内容，最后按|ct||跳出标记。结束标记将自动填充。"

#: ../../__w/calibre/calibre/manual/snippets.rst:165
msgid "Creating your own snippets"
msgstr "创建您自己的代码片段"

#: ../../__w/calibre/calibre/manual/snippets.rst:167
msgid ""
"Snippets really shine because you can create your own to suit your editing "
"style. To create your own snippets go to "
":guilabel:`Edit->Preferences->Editor settings->Manage snippets` in the "
"editor. This will pop-up an easy to use dialog to help you create your own "
"snippets. Simply click the :guilabel:`Add snippet` button and you will see a"
" dialog that looks like:"
msgstr "片段确实很出色，因为您可以创建自己的片段以适合您的编辑风格。 要创建您自己的代码片段，请转到编辑器中的“编辑”->“首选项”->“编辑器设置”->“管理代码片段”。 这将弹出一个易于使用的对话框来帮助您创建自己的片段。 只需单击“添加片段”按钮，您将看到一个如下所示的对话框："

#: ../../__w/calibre/calibre/manual/snippets.rst-1
msgid "The create your own snippets tool"
msgstr "创建您自己的代码片段工具"

#: ../../__w/calibre/calibre/manual/snippets.rst:178
msgid ""
"First give your snippet a name, something descriptive, to help identify the "
"snippet in the future. Then specify the *trigger*. A trigger is simply the "
"text that you have to type in the editor before pressing |ct| in order to "
"expand the snippet."
msgstr "首先，为您的代码段命名一个描述性的名称，以帮助在将来识别该代码段。然后指定*触发器*。触发器只是在按|ct|以展开代码片断之前必须在编辑器中键入的文本。"

#: ../../__w/calibre/calibre/manual/snippets.rst:183
msgid ""
"Then specify the snippet template. You should start with one of the examples"
" above and modify it to suit your needs. Finally, specify which file types "
"you want the snippet to be active for. This way you can have multiple "
"snippets with the same trigger text that work differently in different file "
"types."
msgstr "然后指定代码段模板。您应该从上面的一个示例开始，然后修改它以满足您的需要。最后，指定要激活代码段的文件类型。这样，您就可以拥有具有相同触发器文本的多个代码段，这些代码段在不同的文件类型中工作方式不同。"

#: ../../__w/calibre/calibre/manual/snippets.rst:188
msgid ""
"The next step is to test your newly created snippet. Use the "
":guilabel:`Test` box at the bottom. Type in the trigger text and press |ct| "
"to expand the snippet and jump between placeholders."
msgstr "下一步是测试新创建的代码段。使用底部的“测试”框。键入触发器文本，然后按|ct|展开代码段并在占位符之间跳转。"
