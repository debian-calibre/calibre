# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dingyuan Wang <abcdoyle888@gmail.com>, 2017
# Hoilc <fyxyzhc@qq.com>, 2018
# Andrew Chen <751970186@qq.com>, 2018
# Pengcheng Guo <gpc2843661009@gmail.com>, 2020
# Junle Wang, 2022
# tony shen <anthanny@hotmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-07 01:54+0000\n"
"PO-Revision-Date: 2017-12-15 03:02+0000\n"
"Last-Translator: tony shen <anthanny@hotmail.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/calibre/teams/19337/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:2
msgid "Quick reference for regexp syntax"
msgstr "正则表达式语法速查"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:4
msgid ""
"This checklist summarizes the most commonly used/hard to remember parts of "
"the regexp engine available in most parts of calibre."
msgstr "这份清单总结了最常用/最难记住的正则表达式引擎部件，这些部件可在Calibre的大多数部件中使用。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:10
msgid "Contents"
msgstr "目录"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:13
msgid "Character classes"
msgstr "字符集合"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:15
msgid ""
"Character classes are useful to represent different groups of characters, "
"succinctly."
msgstr "字符集合可以用来简洁地表示不同的字符组合。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:18
msgid "Examples:"
msgstr "例如："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:21
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:52
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:253
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:283
msgid "**Representation**"
msgstr "**表达式**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:21
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:52
msgid "**Class**"
msgstr "**集合**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:24
msgid "``[a-z]``"
msgstr "``[a-z]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:24
msgid ""
"Lowercase letters. Does not include characters with accent mark and "
"ligatures"
msgstr "小写字母，不包括带重音符号的字母和连字字母"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:27
msgid "``[a-z0-9]``"
msgstr "``[a-z0-9]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:27
msgid "Lowercase letters from a to z or numbers from 0 to 9"
msgstr "a 到 z 的小写字母或 0 到 9 的数字"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:30
msgid "``[A-Za-z-]``"
msgstr "``[A-Za-z-]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:30
msgid ""
"Uppercase or lowercase letters, or a dash. To include the dash in a class, "
"you must put it at the beginning or at the end so as not to confuse it with "
"the hyphen that specifies a range of characters"
msgstr "大写和小写字母，或短横“-”。要在集合中包括短横，必须把它放在开头或结尾，从而不会和指定字符范围的短横混淆。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:33
msgid "``[^0-9]``"
msgstr "``[^0-9]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:33
msgid ""
"Any character except a digit. The caret (^) placed at the beginning of the "
"class excludes the characters of the class (complemented class)"
msgstr "除数字之外的任意字符。放在字符集合开头的“^”符号表示取除指定字符之外的集合（补集）。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:36
msgid "``[[a-z]--[aeiouy]]``"
msgstr "``[[a-z]--[aeiouy]]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:36
msgid ""
"The lowercase consonants. A class can be included in a class. The characters"
" ``--`` exclude what follows them"
msgstr "小写元音字母。字符集合可以包含另一个字符集合。``--`` 符号表示排除它之后的集合"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:39
msgid "``[\\w--[\\d_]]``"
msgstr "``[\\w--[\\d_]]``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:39
msgid ""
"All letters (including foreign accented characters). Abbreviated classes can"
" be used inside a class"
msgstr "所有字母（包括带重音符号的外语字母）。字符集合中可以使用缩写集合"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:44
msgid "Example::"
msgstr "例如::"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:49
msgid "Shorthand character classes"
msgstr "缩写字符集合"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:55
msgid "``\\d``"
msgstr "``\\d``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:55
msgid "A digit (same as ``[0-9]``)"
msgstr "一个数字（同 ``[0-9]``）"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:58
msgid "``\\D``"
msgstr "``\\D``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:58
msgid "Any non-numeric character (same as ``[^0-9]``)"
msgstr "非数字字符（同 ``[^0-9]``）"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:61
msgid "``\\w``"
msgstr "``\\w``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:61
msgid ""
"An alphanumeric character (``[a-zA-Z0-9]``) including characters with accent"
" mark and ligatures"
msgstr "一种字母数字字符（``[a-zA-Z0-9]```），包括带重音符号和连字的字符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:64
msgid "``\\W``"
msgstr "``\\W``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:64
msgid "Any “non-word” character"
msgstr "任何“非单词”字符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:67
msgid "``\\s``"
msgstr "``\\s``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:67
msgid "Space, non-breaking space, tab, return line"
msgstr "空格、不间断空格、制表符、返回行"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:70
msgid "``\\S``"
msgstr "``\\S``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:70
msgid "Any “non-whitespace” character"
msgstr "任何“非空白”字符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:73
msgid "``.``"
msgstr "``.``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:73
msgid ""
"Any character except newline. Use the “dot all” checkbox or the ``(?s)`` "
"regexp modifier to include the newline character."
msgstr "除换行符以外的任何字符。使用“.all”复选框或``(?s)``正则表达式修饰符来包含换行符。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:78
msgid "The quantifiers"
msgstr "量词"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:81
msgid "**Quantifier**"
msgstr "**量词**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:81
msgid "**Number of occurrences of the expression preceding the quantifier**"
msgstr "**量词前表达式出现次数**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:84
msgid "``?``"
msgstr "``?``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:84
msgid "0 or 1 occurrence of the expression. Same as ``{0,1}``"
msgstr "表达式出现0或1次。与``{0,1}``相同"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:87
msgid "``+``"
msgstr "``+``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:87
msgid "1 or more occurrences of the expression. Same as ``{1,}``"
msgstr "表达式出现1次或多次。与``{1,}``相同"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:90
msgid "``*``"
msgstr "``*``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:90
msgid "0, 1 or more occurrences of the expression. Same as ``{0,}``"
msgstr "表达式出现0次、1次或更多次。与``{0,}``相同"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:93
msgid "``{n}``"
msgstr "``{n}``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:93
msgid "Exactly n occurrences of the expression"
msgstr "该表达式恰好出现n次"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:96
msgid "``{min,max}``"
msgstr "``{min,max}``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:96
msgid "Number of occurrences between the minimum and maximum values included"
msgstr "包含的最小值和最大值之间的出现次数"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:99
msgid "``{min,}``"
msgstr "``{min,}``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:99
msgid ""
"Number of occurrences between the minimum value included and the infinite"
msgstr "包含的最小值和无穷大之间的出现次数"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:102
msgid "``{,max}``"
msgstr "``{,max}``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:102
msgid "Number of occurrences between 0 and the maximum value included"
msgstr "介于0和包含的最大值之间的出现次数"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:109
msgid "Greed"
msgstr "Greed"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:111
msgid ""
"By default, with quantifiers, the regular expression engine is greedy: it "
"extends the selection as much as possible. This often causes surprises, at "
"first. ``?`` follows a quantifier to make it lazy. Avoid putting two in the "
"same expression, the result can be unpredictable."
msgstr ""
"默认情况下，对于量词，正则表达式引擎是贪婪的：它尽可能多地扩展选择。起初，这往往会引起意外。“？”跟随一个量词使其变懒。避免将两者放在同一个表达式中，结果可能是不可预测的。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:116
msgid ""
"Beware of nesting quantifiers, for example, the pattern ``(a*)*``, as it "
"exponentially increases processing time."
msgstr "小心嵌套的量词，例如模式“（a*）*”，因为它会成倍地增加处理时间。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:120
msgid "Alternation"
msgstr "交替"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:122
msgid ""
"The ``|`` character in a regular expression is a logical ``OR``. It means "
"that either the preceding or the following expression can match."
msgstr "正则表达式中的“|”字符是逻辑“OR”。这意味着前面的表达式或下面的表达式都可以匹配。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:126
msgid "Exclusion"
msgstr "不包括在内"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:128
msgid "Method 1"
msgstr "方法 1"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:130
msgid "``pattern_to_exclude(*SKIP)(*FAIL)|pattern_to_select``"
msgstr "``pattern_to_exclude(*SKIP)(*FAIL)|pattern_to_select``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:132
msgid "Example:"
msgstr "例如："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:134
msgid "``\"Blabla\"(*SKIP)(*FAIL)|Blabla``"
msgstr "``\"Blabla\"(*SKIP)(*FAIL)|Blabla``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:136
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:144
msgid ""
"selects Blabla, in the strings Blabla or \"Blabla or Blabla\", but not in "
"\"Blabla\"."
msgstr "选择Blabla，在字符串Blabla或“Blabla or Blabla”中，但不在“Blabla”中。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:138
msgid "Method 2"
msgstr "方法 2"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:140
msgid "``pattern_to_exclude\\K|(pattern_to_select)``"
msgstr "``pattern_to_exclude\\K|(pattern_to_select)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:142
msgid "``\"Blabla\"\\K|(Blabla)``"
msgstr "``\"Blabla\"\\K|(Blabla)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:147
msgid "Anchors"
msgstr "锚"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:149
msgid ""
"An anchor is a way to match a logical location in a string, rather than a "
"character. The most useful anchors for text processing are:"
msgstr "锚点是匹配字符串中的逻辑位置而不是字符的一种方式。文本处理中最有用的锚点是："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:155
msgid "``\\b``"
msgstr "``\\b``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:153
msgid ""
"Designates a word boundary, i.e. a transition from space to non-space "
"character. For example, you can use ``\\bsurd`` to match ``the surd`` but "
"not ``absurd``."
msgstr "指定单词边界，即从空格字符到非空格字符的转换。例如，您可以使用“\\bssurd”来匹配“the surd”，但不能使用“荒谬”。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:159
msgid "``^``"
msgstr "``^``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:158
msgid "Matches the start of a line (in multi-line mode, which is the default)"
msgstr "匹配行首(在多行模式下，这是默认设置)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:162
msgid "``$``"
msgstr "``$``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:162
msgid "Matches the end of a line (in multi-line mode, which is the default)"
msgstr "匹配行尾(在多行模式下，这是默认设置)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:169
msgid "``\\K``"
msgstr "``\\K``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:165
msgid ""
"Resets the start position of the selection to its position in the pattern. "
"Some regexp engines (but not calibre) do not allow lookbehind of variable "
"length, especially with quantifiers. When you can use ``\\K`` with these "
"engines, it also allows you to get rid of this limit by writing the "
"equivalent of a positive lookbehind of variable length."
msgstr ""
"将所选内容的起始位置重置为其在阵列中的位置。一些正则表达式引擎（但不是calibre）不允许可变长度的lookbacking，尤其是使用量词。当您可以将“\\K”与这些引擎一起使用时，它还允许您通过编写可变长度的正查找表来消除这一限制。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:172
msgid "Groups"
msgstr "组"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:177
msgid "``(expression)``"
msgstr "``(表达式)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:175
msgid ""
"Capturing group, which stores the selection and can be recalled later in the"
" *search* or *replace* patterns with ``\\n``, where ``n`` is the sequence "
"number of the capturing group (starting at 1 in reading order)"
msgstr "捕获组，它存储所选内容，并可稍后在*搜索*或*替换*模式中用“\\n”调用，其中“n”是捕获组的序列号（按读取顺序从1开始）"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:180
msgid "``(?:expression)``"
msgstr "``(?:表达式)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:180
msgid "Group that does not capture the selection"
msgstr "未捕获所选内容的组"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:186
msgid "``(?>expression)``"
msgstr "``(?>表达式)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:183
msgid ""
"Atomic Group: As soon as the expression is satisfied, the regexp engine "
"passes, and if the rest of the pattern fails, it will not backtrack to try "
"other combinations with the expression. Atomic groups do not capture."
msgstr ""
"Atomic Group：一旦满足表达式，正则表达式引擎就会通过，如果模式的其余部分失败，它将不会回溯以尝试与表达式的其他组合。原子组不会捕获。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:190
msgid "``(?|expression)``"
msgstr "``(?|表达式)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:189
msgid ""
"Branch reset group: the branches of the alternations included in the "
"expression share the same group numbers"
msgstr "分支重置组：表达式中包含的替换项的分支共享相同的组号"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:196
msgid "``(?<name>expression)``"
msgstr "``(?<name>表达式)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:193
msgid ""
"Group named “name”. The selection can be recalled later in the *search* "
"pattern by ``(?P=name)`` and in the *replace* by ``\\g<name>``. Two "
"different groups can use the same name."
msgstr ""
"名为“name”的组。稍后可以在*search*模式中用“（？P=name）”和在*replace*中用“\\g "
"<name>”调用所选内容。两个不同的组可以使用相同的名称。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:199
msgid "Lookarounds"
msgstr "Lookarounds"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:202
msgid "**Lookaround**"
msgstr "**Lookaround**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:202
#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:253
msgid "**Meaning**"
msgstr "**Meaning**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:205
msgid "``?=``"
msgstr "``?=``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:205
msgid "Positive lookahead (to be placed after the selection)"
msgstr "正向前视(放置在选定内容之后)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:208
msgid "``?!``"
msgstr "``?!``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:208
msgid "Negative lookahead (to be placed after the selection)"
msgstr "反向前视(放在选择之后)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:211
msgid "``?<=``"
msgstr "``?<=``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:211
msgid "Positive lookbehind (to be placed before the selection)"
msgstr "正向后视(放在所选内容之前)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:214
msgid "``?<!``"
msgstr "``?<!``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:214
msgid "Negative lookbehind (to be placed before the selection)"
msgstr "反向后视(放在选定内容之前)"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:218
msgid ""
"Lookaheads and lookbehinds do not consume characters, they are zero length "
"and do not capture. They are atomic groups: as soon as the assertion is "
"satisfied, the regexp engine passes, and if the rest of the pattern fails, "
"it will not backtrack inside the lookaround to try other combinations."
msgstr ""
"Lookahead和lookbehinds不消耗字符，它们为零长度，不捕获。它们是原子组：只要断言得到满足，正则表达式引擎就会通过，如果模式的其余部分失败，它就不会在环视中回溯以尝试其他组合。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:223
msgid ""
"When looking for multiple matches in a string, at the starting position of "
"each match attempt, a lookbehind can inspect the characters before the "
"current position. Therefore, on the string 123, the pattern ``(?<=\\d)\\d`` "
"(a digit preceded by a digit) should, in theory, select 2 and 3. On the "
"other hand, ``\\d\\K\\d`` can only select 2, because the starting position "
"after the first selection is immediately before 3, and there are not enough "
"digits for a second match. Similarly, ``\\d(\\d)`` only captures 2. In "
"calibre's regexp engine practice, the positive lookbehind behaves in the "
"same way, and selects only 2, contrary to theory."
msgstr ""
"在字符串中查找多个匹配时，在每次匹配尝试的起始位置，后行断言可以检查当前位置之前的字符。因此，在字符串123上，模式“（？<=\\d）\\d”（一个数字前面有一个数字）理论上应该选择2和3。另一方面，“\\d\\K\\d”只能选择2，因为第一次选择后的起始位置正好在3之前，并且没有足够的数字进行第二次匹配。类似地，“\\d（\\d）”只捕获2。在calibre的regexp引擎实践中，正向后行断言的行为与理论相反，只选择2。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:233
msgid ""
"Groups can be placed inside lookarounds, but capture is rarely useful. "
"Nevertheless, if it is useful, it will be necessary to be very careful in "
"the use of a quantifier in a lookbehind: the greed associated with the "
"absence of backtracking can give a surprising capture. For this reason, use "
"``\\K`` rather than a positive lookbehind when you have a quantifier (or "
"worse, several) in a capturing group of the positive lookbehind."
msgstr ""
"组可以放置在环视区内，但捕获很少有用。然而，如果它是有用的，那么在后行断言中使用量词时就必须非常小心：与没有后行断言相关的贪婪可能会带来令人惊讶的结果。出于这个原因，当你在一个正向后行断言的捕获组中有一个量词（或者更糟的是，几个）时，使用“\\K”而不是正向后行断言。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:240
msgid "Example of negative lookahead:"
msgstr "负向先行断言示例："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:242
msgid "``(?![^<>{}]*[>}])``"
msgstr "``(?![^<>{}]*[>}])``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:244
msgid ""
"Placed at the end of the pattern prevents to select within a tag or a style "
"embedded in the file."
msgstr "放置在图案末尾可防止在文件中嵌入的标记或样式中进行选择。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:246
msgid ""
"Whenever possible, it is always better to \"anchor\" the lookarounds, to "
"reduce the number of steps necessary to obtain the result."
msgstr "只要可能，最好“固定”环视，以减少获得结果所需的步骤数。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:250
msgid "Recursion"
msgstr "Recursion"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:256
msgid "``(?R)``"
msgstr "``(?R)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:256
msgid "Recursion of the entire pattern"
msgstr "递归匹配整个模式"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:259
msgid "``(?1)``"
msgstr "``(?1)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:259
msgid ""
"Recursion of the only pattern of the numbered capturing group, here group 1"
msgstr "编号捕获组的唯一模式的递归，此处为组1"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:263
msgid ""
"Recursion is calling oneself. This is useful for balanced queries, such as "
"quoted strings, which can contain embedded quoted strings. Thus, if during "
"the processing of a string between double quotation marks, we encounter the "
"beginning of a new string between double quotation marks, well we know how "
"to do, and we call ourselves. Then we have a pattern like::"
msgstr ""
"递归是在召唤自己。这对于平衡查询非常有用，例如可以包含嵌入的带引号的字符串的引号字符串。因此，如果在处理双引号之间的字符串的过程中，我们遇到双引号之间的新字符串的开头，那么我们知道如何做，我们称之为自己。然后我们就有了类似这样的模式："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:271
msgid ""
"To select a string between double quotation marks without stopping on an "
"embedded string::"
msgstr "要在双引号之间选择字符串而不在嵌入的字符串上停止，请执行以下操作："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:275
msgid ""
"This template can also be used to modify pairs of tags that can be embedded,"
" such as ``<div>`` tags."
msgstr "该模板还可用于修改可嵌入的标签对，例如“<div>”标签。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:280
msgid "Special characters"
msgstr "特殊字符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:283
msgid "**Character**"
msgstr "**字符**"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:286
msgid "``\\t``"
msgstr "``\\t``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:286
msgid "tabulation"
msgstr "tabulation"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:289
msgid "``\\n``"
msgstr "``\\n``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:289
msgid "line break"
msgstr "换行符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:292
msgid "``\\x20``"
msgstr "``\\x20``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:292
msgid "(breakable) space"
msgstr "（可间断的）空格"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:295
msgid "``\\xa0``"
msgstr "``\\xa0``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:295
msgid "no-break space"
msgstr "不间断空格"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:300
msgid "Meta-characters"
msgstr "元字符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:302
msgid ""
"Meta-characters are those that have a special meaning for the regexp engine."
" Of these, twelve must be preceded by an escape character, the backslash "
"(``\\``), to lose their special meaning and become a regular character "
"again::"
msgstr ""
"元字符是那些对正则表达式引擎具有特殊意义的字符。其中，十二必须在前加一个转义符，即反斜杠（``\\``），才能失去其特殊含义，重新成为正则字符："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:308
msgid ""
"Seven other meta-characters do not need to be preceded by a backslash (but "
"can be without any other consequence)::"
msgstr "其他七个元字符不需要以反斜杠开头(但可以没有任何其他后果)："

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:314
msgid ""
"Special characters lose their status if they are used inside a class "
"(between brackets ``[]``). The closing bracket and the dash have a special "
"status in a class. Outside the class, the dash is a simple literal, the "
"closing bracket remains a meta-character."
msgstr ""
"如果在类中使用特殊字符（位于括号``[]``之间），它们将失去状态。括号和短划线在类中具有特殊的地位。在类之外，短划线是一个简单的文字，右括号仍然是一个元字符。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:319
msgid ""
"The slash (/) and the number sign (or hash character) (#) are not meta-"
"characters, they don’t need to be escaped."
msgstr "斜杠（/）和数字符号（或哈希字符）（#）不是元字符，它们不需要转义。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:322
msgid ""
"In some tools, like regex101.com with the Python engine, double quotes have "
"the special status of separator, and must be escaped, or the options "
"changed. This is not the case in the editor of calibre."
msgstr ""
"在一些工具中，如带有Python引擎的regex101.com，双引号具有分隔符的特殊状态，必须转义，或者更改选项。优秀编辑的情况并非如此。"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:327
msgid "Modes"
msgstr "Modes"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:330
msgid "``(?s)``"
msgstr "``(?s)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:330
msgid "Causes the dot (``.``) to match newline characters as well"
msgstr "使句点（``.``）也能匹配换行符"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:333
msgid "``(?m)``"
msgstr "``(?m)``"

#: ../../__w/calibre/calibre/manual/regexp_quick_reference.rst:333
msgid ""
"Makes the ``^`` and ``$`` anchors match the start and end of lines instead "
"of the start and end of the entire string."
msgstr "使“^”和“$”锚与行的开始和结束匹配，而不是与整个字符串的开始和结尾匹配。"
