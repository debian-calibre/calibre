# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/kovid/work/calibre/src/calibre/gui2/preferences/adding.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1035, 547)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(Form)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.opt_swap_author_names = QtWidgets.QCheckBox(self.tab_3)
        self.opt_swap_author_names.setObjectName("opt_swap_author_names")
        self.horizontalLayout.addWidget(self.opt_swap_author_names)
        self.gridLayout_2.addLayout(self.horizontalLayout, 1, 1, 1, 2)
        self.label_230 = QtWidgets.QLabel(self.tab_3)
        self.label_230.setObjectName("label_230")
        self.gridLayout_2.addWidget(self.label_230, 7, 0, 1, 1)
        self.opt_new_book_tags = QtWidgets.QLineEdit(self.tab_3)
        self.opt_new_book_tags.setObjectName("opt_new_book_tags")
        self.gridLayout_2.addWidget(self.opt_new_book_tags, 7, 2, 1, 1)
        self.metadata_box = QtWidgets.QGroupBox(self.tab_3)
        self.metadata_box.setObjectName("metadata_box")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.metadata_box)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 363, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.gridLayout_2.addWidget(self.metadata_box, 9, 0, 1, 3)
        self.opt_preserve_date_on_ctl = QtWidgets.QCheckBox(self.tab_3)
        self.opt_preserve_date_on_ctl.setObjectName("opt_preserve_date_on_ctl")
        self.gridLayout_2.addWidget(self.opt_preserve_date_on_ctl, 2, 0, 1, 3)
        self.opt_manual_add_auto_convert = QtWidgets.QCheckBox(self.tab_3)
        self.opt_manual_add_auto_convert.setObjectName("opt_manual_add_auto_convert")
        self.gridLayout_2.addWidget(self.opt_manual_add_auto_convert, 4, 0, 1, 2)
        self.opt_automerge = QtWidgets.QComboBox(self.tab_3)
        self.opt_automerge.setObjectName("opt_automerge")
        self.gridLayout_2.addWidget(self.opt_automerge, 6, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.tab_3)
        self.label_6.setWordWrap(True)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 0, 0, 1, 3)
        self.opt_read_file_metadata = QtWidgets.QCheckBox(self.tab_3)
        self.opt_read_file_metadata.setObjectName("opt_read_file_metadata")
        self.gridLayout_2.addWidget(self.opt_read_file_metadata, 1, 0, 1, 1)
        self.opt_mark_new_books = QtWidgets.QCheckBox(self.tab_3)
        self.opt_mark_new_books.setObjectName("opt_mark_new_books")
        self.gridLayout_2.addWidget(self.opt_mark_new_books, 4, 2, 1, 1)
        self.opt_add_formats_to_existing = QtWidgets.QCheckBox(self.tab_3)
        self.opt_add_formats_to_existing.setObjectName("opt_add_formats_to_existing")
        self.gridLayout_2.addWidget(self.opt_add_formats_to_existing, 6, 0, 1, 2)
        self.opt_check_for_dupes_on_ctl = QtWidgets.QCheckBox(self.tab_3)
        self.opt_check_for_dupes_on_ctl.setObjectName("opt_check_for_dupes_on_ctl")
        self.gridLayout_2.addWidget(self.opt_check_for_dupes_on_ctl, 3, 0, 1, 3)
        self.opt_auto_convert_same_fmt = QtWidgets.QCheckBox(self.tab_3)
        self.opt_auto_convert_same_fmt.setObjectName("opt_auto_convert_same_fmt")
        self.gridLayout_2.addWidget(self.opt_auto_convert_same_fmt, 5, 0, 1, 3)
        self.tag_map_rules_button = QtWidgets.QPushButton(self.tab_3)
        self.tag_map_rules_button.setObjectName("tag_map_rules_button")
        self.gridLayout_2.addWidget(self.tag_map_rules_button, 8, 0, 1, 1)
        self.add_filter_rules_button = QtWidgets.QPushButton(self.tab_3)
        self.add_filter_rules_button.setObjectName("add_filter_rules_button")
        self.gridLayout_2.addWidget(self.add_filter_rules_button, 8, 2, 1, 1)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.opt_auto_add_everything = QtWidgets.QCheckBox(self.tab_4)
        self.opt_auto_add_everything.setObjectName("opt_auto_add_everything")
        self.gridLayout_3.addWidget(self.opt_auto_add_everything, 5, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.opt_auto_add_path = QtWidgets.QLineEdit(self.tab_4)
        self.opt_auto_add_path.setObjectName("opt_auto_add_path")
        self.horizontalLayout_2.addWidget(self.opt_auto_add_path)
        self.auto_add_browse_button = QtWidgets.QToolButton(self.tab_4)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(I("document_open.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.auto_add_browse_button.setIcon(icon)
        self.auto_add_browse_button.setObjectName("auto_add_browse_button")
        self.horizontalLayout_2.addWidget(self.auto_add_browse_button)
        self.gridLayout_3.addLayout(self.horizontalLayout_2, 1, 0, 1, 2)
        self.opt_auto_add_auto_convert = QtWidgets.QCheckBox(self.tab_4)
        self.opt_auto_add_auto_convert.setObjectName("opt_auto_add_auto_convert")
        self.gridLayout_3.addWidget(self.opt_auto_add_auto_convert, 4, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem2, 7, 0, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(self.tab_4)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setWordWrap(True)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.opt_blocked_auto_formats = QtWidgets.QListWidget(self.groupBox)
        self.opt_blocked_auto_formats.setAlternatingRowColors(True)
        self.opt_blocked_auto_formats.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.opt_blocked_auto_formats.setObjectName("opt_blocked_auto_formats")
        self.verticalLayout_2.addWidget(self.opt_blocked_auto_formats)
        self.gridLayout_3.addWidget(self.groupBox, 6, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.tab_4)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.tab_4)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 2, 0, 1, 2)
        self.opt_auto_add_check_for_duplicates = QtWidgets.QCheckBox(self.tab_4)
        self.opt_auto_add_check_for_duplicates.setObjectName("opt_auto_add_check_for_duplicates")
        self.gridLayout_3.addWidget(self.opt_auto_add_check_for_duplicates, 3, 0, 1, 2)
        spacerItem3 = QtWidgets.QSpacerItem(272, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem3, 6, 1, 1, 1)
        self.tabWidget.addTab(self.tab_4, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.label_230.setBuddy(self.opt_new_book_tags)

        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(0)
        self.opt_add_formats_to_existing.toggled['bool'].connect(self.opt_automerge.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):

        Form.setWindowTitle(_("Form"))
        self.opt_swap_author_names.setToolTip(_("Swap the firstname and lastname of the author. This affects only metadata read from file names."))
        self.opt_swap_author_names.setText(_("&Swap author firstname and lastname"))
        self.label_230.setText(_("&Tags to apply when adding a book:"))
        self.opt_new_book_tags.setToolTip(_("A comma-separated list of tags that will be applied to books added to the library"))
        self.metadata_box.setTitle(_("&Configure metadata from file name"))
        self.opt_preserve_date_on_ctl.setText(_("When using the  \"&Copy to library\" action to copy books between libraries, preserve the date"))
        self.opt_manual_add_auto_convert.setText(_("Automatically &convert added books to the current output format"))
        self.opt_automerge.setToolTip(_("Automerge: If books with similar titles and authors found, merge the incoming formats automatically into\n"
"existing book records. This box controls what happens when an existing record already has\n"
"the incoming format: \n"
"\n"
"Ignore duplicate incoming files - means that existing files in your calibre library will not be replaced\n"
"Overwrite existing duplicate files - means that existing files in your calibre library will be replaced\n"
"Create new record for each duplicate file - means that a new book entry will be created for each duplicate file\n"
"\n"
"Title matching ignores leading indefinite articles (\"the\", \"a\", \"an\"), punctuation, case, etc.\n"
"Author matching is exact."))
        self.label_6.setText(_("Here you can control how calibre will read metadata from the files you add to it. calibre can either read metadata from the contents of the file, or from the filename."))
        self.opt_read_file_metadata.setText(_("Read &metadata from file contents rather than file name"))
        self.opt_mark_new_books.setText(_("&Mark newly added books"))
        self.opt_add_formats_to_existing.setToolTip(_("Automerge: If books with similar titles and authors found, merge the incoming formats automatically into\n"
"existing book records. The box to the right controls what happens when an existing record already has\n"
"the incoming format. Note that this option also affects the Copy to library action.\n"
"\n"
"Title match ignores leading indefinite articles (\"the\", \"a\", \"an\"), punctuation, case, etc. Author match is exact."))
        self.opt_add_formats_to_existing.setText(_("&Automerge added books if they already exist in the calibre library:"))
        self.opt_check_for_dupes_on_ctl.setText(_("When using the \"Copy to Library\" action check for &duplicates with the same title and author"))
        self.opt_auto_convert_same_fmt.setToolTip(_("This will force an automatic conversion even if the file being added is the same format as the output format. For example, if you set your output format to EPUB and add an EPUB file, an EPUB to EPUB conversion will be run."))
        self.opt_auto_convert_same_fmt.setText(_("When autoconverting, convert even if the format being added is the &same as the output format"))
        self.tag_map_rules_button.setToolTip(_("Create rules that can filter or transform tags on added books automatically as soon as they are added. "))
        self.tag_map_rules_button.setText(_("Create &rules to filter/transform tags"))
        self.add_filter_rules_button.setText(_("Rules to &filter added files"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _("The Add &Process"))
        self.opt_auto_add_everything.setToolTip(_("By default, calibre will auto-add only known ebook files. \n"
"This option tells calibre to add all file types, except those\n"
"that have been explicitly ignored below."))
        self.opt_auto_add_everything.setText(_("Auto add files of &all types (not just ebooks)"))
        self.opt_auto_add_path.setPlaceholderText(_("Folder to auto-add files from"))
        self.auto_add_browse_button.setToolTip(_("Browse for folder"))
        self.auto_add_browse_button.setText(_("..."))
        self.opt_auto_add_auto_convert.setText(_("Automatically &convert added files to the current output format"))
        self.label_3.setText(_("<b>Ignore</b> files with the following extensions when automatically adding "))
        self.label.setText(_("Specify a folder. Any files you put into this folder will be automatically added to calibre (restart required)."))
        self.label_2.setText(_("<b>WARNING:</b> Files in the above folder will be deleted after being added to calibre."))
        self.opt_auto_add_check_for_duplicates.setToolTip(_("If set, this option will cause calibre to check if a file\n"
" being auto-added is already in the calibre library.\n"
" If it is, a message will pop up asking you whether\n"
" you want to add it anyway."))
        self.opt_auto_add_check_for_duplicates.setText(_("Check for &duplicates when auto-adding files"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _("&Automatic Adding"))


